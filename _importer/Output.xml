<?xml version='1.0'?>
<rss xmlns:content='http://purl.org/rss/1.0/modules/content/' xmlns:dsq='http://www.disqus.com/' xmlns:dc='http://purl.org/dc/elements/1.1/' xmlns:wp='http://wordpress.org/export/1.0/'>
  <channel>
    <item>
      <title>
        Welcome to the NHibernate blog
      </title>
      <link>
        http://nhibernate.github.io/blogs/nhibernate/archive/2008/08/29/welcome-to-the-nhibernate-blog.html
      </link>
      <dsq:thread_identifier>
        blogs_nhibernate_archive_2008_08_29_welcome-to-the-nhibernate-blog
      </dsq:thread_identifier>
      <wp:post_date_gmt>
        2008-08-30 02:33:00
      </wp:post_date_gmt>
    </item>
    <item>
      <title>
        Posting some older posts
      </title>
      <link>
        http://nhibernate.github.io/blogs/nhibernate/archive/2008/08/31/posting-some-older-posts.html
      </link>
      <dsq:thread_identifier>
        blogs_nhibernate_archive_2008_08_31_posting-some-older-posts
      </dsq:thread_identifier>
      <wp:post_date_gmt>
        2008-08-31 14:51:00
      </wp:post_date_gmt>
      <wp:comment>
        <wp:comment_id>
          541
        </wp:comment_id>
        <wp:comment_author>
          VIAGRA Online - Buy Cheap VIAGRA
        </wp:comment_author>
        <wp:comment_author_url>
          http://nhforge.org/members/viagra/default.aspx
        </wp:comment_author_url>
        <wp:comment_author_email/>
        <wp:comment_author_IP/>
        <wp:comment_date_gmt>
          2009-11-12 19:59:40
        </wp:comment_date_gmt>
        <wp:comment_content>
          Very Good!
        </wp:comment_content>
        <wp:comment_approved>
          1
        </wp:comment_approved>
      </wp:comment>
    </item>
    <item>
      <title>
        NHibernate Mapping Examples
      </title>
      <link>
        http://nhibernate.github.io/blogs/nhibernate/archive/2008/08/31/nhibernate-mapping-examples.html
      </link>
      <dsq:thread_identifier>
        blogs_nhibernate_archive_2008_08_31_nhibernate-mapping-examples
      </dsq:thread_identifier>
      <wp:post_date_gmt>
        2008-08-31 14:56:00
      </wp:post_date_gmt>
      <wp:comment>
        <wp:comment_id>
          48
        </wp:comment_id>
        <wp:comment_author>
          caglar temur
        </wp:comment_author>
        <wp:comment_author_url>
          http://www.nhforge.org/members/caglar-temur/default.aspx
        </wp:comment_author_url>
        <wp:comment_author_email/>
        <wp:comment_author_IP/>
        <wp:comment_date_gmt>
          2008-09-08 08:25:19
        </wp:comment_date_gmt>
        <wp:comment_content>
          Thank you for sharing
        </wp:comment_content>
        <wp:comment_approved>
          1
        </wp:comment_approved>
      </wp:comment>
    </item>
    <item>
      <title>
        NHibernate and virtual methods/properties
      </title>
      <link>
        http://nhibernate.github.io/blogs/nhibernate/archive/2008/08/31/nhibernate-and-virtual-methods-properties.html
      </link>
      <dsq:thread_identifier>
        blogs_nhibernate_archive_2008_08_31_nhibernate-and-virtual-methods-properties
      </dsq:thread_identifier>
      <wp:post_date_gmt>
        2008-08-31 15:02:00
      </wp:post_date_gmt>
      <wp:comment>
        <wp:comment_id>
          24
        </wp:comment_id>
        <wp:comment_author>
          Fabio Maulo
        </wp:comment_author>
        <wp:comment_author_url>
          http://nhforge.org/members/fabiomaulo/default.aspx
        </wp:comment_author_url>
        <wp:comment_author_email/>
        <wp:comment_author_IP/>
        <wp:comment_date_gmt>
          2008-09-01 15:48:49
        </wp:comment_date_gmt>
        <wp:comment_content>
          Using NH2.0.0 you have a more deep Proxy validator. In a soon future,
          probably, we move the responsibility of &quot;proxy-validator&quot; to
          IProxyFactoryFactory implementation.
        </wp:comment_content>
        <wp:comment_approved>
          1
        </wp:comment_approved>
      </wp:comment>
    </item>
    <item>
      <title>
        The Query Batcher
      </title>
      <link>
        http://nhibernate.github.io/blogs/nhibernate/archive/2008/08/31/the-query-batcher.html
      </link>
      <dsq:thread_identifier>
        blogs_nhibernate_archive_2008_08_31_the-query-batcher
      </dsq:thread_identifier>
      <wp:post_date_gmt>
        2008-08-31 15:05:00
      </wp:post_date_gmt>
      <wp:comment>
        <wp:comment_id>
          25
        </wp:comment_id>
        <wp:comment_author>
          Fabio Maulo
        </wp:comment_author>
        <wp:comment_author_url>
          http://nhforge.org/members/fabiomaulo/default.aspx
        </wp:comment_author_url>
        <wp:comment_author_email/>
        <wp:comment_author_IP/>
        <wp:comment_date_gmt>
          2008-09-01 16:33:44
        </wp:comment_date_gmt>
        <wp:comment_content>
          Good mix between MultiCriteria and MultiQuery of NH2.0.0. Perhaps
          would be useful to have a QueryBatcher to &quot;merge&quot; parameter.
          Really nice.
        </wp:comment_content>
        <wp:comment_approved>
          1
        </wp:comment_approved>
      </wp:comment>
      <wp:comment>
        <wp:comment_id>
          32
        </wp:comment_id>
        <wp:comment_author>
          tehlike
        </wp:comment_author>
        <wp:comment_author_url>
          http://www.nhforge.org/members/tehlike/default.aspx
        </wp:comment_author_url>
        <wp:comment_author_email/>
        <wp:comment_author_IP/>
        <wp:comment_date_gmt>
          2008-09-05 10:24:00
        </wp:comment_date_gmt>
        <wp:comment_content>
          Wouldn&apos;t it be useful to add it to Contrib/Core, wherever
          appropriate?
        </wp:comment_content>
        <wp:comment_approved>
          1
        </wp:comment_approved>
      </wp:comment>
      <wp:comment>
        <wp:comment_id>
          33
        </wp:comment_id>
        <wp:comment_author>
          Fabio Maulo
        </wp:comment_author>
        <wp:comment_author_url>
          http://www.nhforge.org/members/fabiomaulo/default.aspx
        </wp:comment_author_url>
        <wp:comment_author_email/>
        <wp:comment_author_IP/>
        <wp:comment_date_gmt>
          2008-09-05 13:33:23
        </wp:comment_date_gmt>
        <wp:comment_content>
          Sure. This wk i&apos;m going to create NHibernate.AppBlock well...
          probably....
        </wp:comment_content>
        <wp:comment_approved>
          1
        </wp:comment_approved>
      </wp:comment>
    </item>
    <item>
      <title>
        Data Access With NHibernate
      </title>
      <link>
        http://nhibernate.github.io/blogs/nhibernate/archive/2008/08/31/data-access-with-nhibernate.html
      </link>
      <dsq:thread_identifier>
        blogs_nhibernate_archive_2008_08_31_data-access-with-nhibernate
      </dsq:thread_identifier>
      <wp:post_date_gmt>
        2008-08-31 15:07:00
      </wp:post_date_gmt>
    </item>
    <item>
      <title>
        NH.Caches Beta1 Is Out!
      </title>
      <link>
        http://nhibernate.github.io/blogs/nhibernate/archive/2008/08/31/nh-caches-beta1-is-out.html
      </link>
      <dsq:thread_identifier>
        blogs_nhibernate_archive_2008_08_31_nh-caches-beta1-is-out
      </dsq:thread_identifier>
      <wp:post_date_gmt>
        2008-08-31 20:21:00
      </wp:post_date_gmt>
    </item>
    <item>
      <title>
        NHibernate Custom Collections using Extension Methods
      </title>
      <link>
        http://nhibernate.github.io/blogs/nhibernate/archive/2008/09/03/nhibernate-custom-collections-using-extension-methods.html
      </link>
      <dsq:thread_identifier>
        blogs_nhibernate_archive_2008_09_03_nhibernate-custom-collections-using-extension-methods
      </dsq:thread_identifier>
      <wp:post_date_gmt>
        2008-09-03 23:31:00
      </wp:post_date_gmt>
    </item>
    <item>
      <title>
        NHibernate isn&apos;t integrated to the compiler, so what?
      </title>
      <link>
        http://nhibernate.github.io/blogs/nhibernate/archive/2008/09/04/nhibernate_2D00_isnt_2D00_integrated_2D00_to_2D00_the_2D00_compiler_2D00_so_2D00_what.html
      </link>
      <dsq:thread_identifier>
        blogs_nhibernate_archive_2008_09_04_nhibernate_2D00_isnt_2D00_integrated_2D00_to_2D00_the_2D00_compiler_2D00_so_2D00_what
      </dsq:thread_identifier>
      <wp:post_date_gmt>
        2008-09-05 00:23:00
      </wp:post_date_gmt>
    </item>
    <item>
      <title>
        NHibernate.Burrow 1.0.0 CR 1 released
      </title>
      <link>
        http://nhibernate.github.io/blogs/nhibernate/archive/2008/09/04/nhibernate-burrow-1-0-0-cr-1-released.html
      </link>
      <dsq:thread_identifier>
        blogs_nhibernate_archive_2008_09_04_nhibernate-burrow-1-0-0-cr-1-released
      </dsq:thread_identifier>
      <wp:post_date_gmt>
        2008-09-05 03:54:00
      </wp:post_date_gmt>
    </item>
    <item>
      <title>
        NHForge article at InfoQ
      </title>
      <link>
        http://nhibernate.github.io/blogs/nhibernate/archive/2008/09/05/nhforge-article-at-infoq.html
      </link>
      <dsq:thread_identifier>
        blogs_nhibernate_archive_2008_09_05_nhforge-article-at-infoq
      </dsq:thread_identifier>
      <wp:post_date_gmt>
        2008-09-05 16:09:00
      </wp:post_date_gmt>
    </item>
    <item>
      <title>
        A fluent interface to NHibernate - Part 1
      </title>
      <link>
        http://nhibernate.github.io/blogs/nhibernate/archive/2008/09/05/a-fluent-interface-to-nhibernate-part-1.html
      </link>
      <dsq:thread_identifier>
        blogs_nhibernate_archive_2008_09_05_a-fluent-interface-to-nhibernate-part-1
      </dsq:thread_identifier>
      <wp:post_date_gmt>
        2008-09-05 18:07:46
      </wp:post_date_gmt>
    </item>
    <item>
      <title>
        A fluent interface to NHibernate - Part 2 - Value Objects
      </title>
      <link>
        http://nhibernate.github.io/blogs/nhibernate/archive/2008/09/06/a-fluent-interface-to-nhibernate-part-2-value-objects.html
      </link>
      <dsq:thread_identifier>
        blogs_nhibernate_archive_2008_09_06_a-fluent-interface-to-nhibernate-part-2-value-objects
      </dsq:thread_identifier>
      <wp:post_date_gmt>
        2008-09-06 16:18:00
      </wp:post_date_gmt>
    </item>
    <item>
      <title>
        A fluent interface to NHibernate - Part 3 - Mapping Relations
      </title>
      <link>
        http://nhibernate.github.io/blogs/nhibernate/archive/2008/09/06/a-fluent-interface-to-nhibernate-part-3-mapping-relations.html
      </link>
      <dsq:thread_identifier>
        blogs_nhibernate_archive_2008_09_06_a-fluent-interface-to-nhibernate-part-3-mapping-relations
      </dsq:thread_identifier>
      <wp:post_date_gmt>
        2008-09-06 16:39:00
      </wp:post_date_gmt>
    </item>
    <item>
      <title>
        Lazy Loading - Eager Loading
      </title>
      <link>
        http://nhibernate.github.io/blogs/nhibernate/archive/2008/09/06/lazy-loading-eager-loading.html
      </link>
      <dsq:thread_identifier>
        blogs_nhibernate_archive_2008_09_06_lazy-loading-eager-loading
      </dsq:thread_identifier>
      <wp:post_date_gmt>
        2008-09-06 16:59:00
      </wp:post_date_gmt>
      <wp:comment>
        <wp:comment_id>
          130
        </wp:comment_id>
        <wp:comment_author>
          epitka
        </wp:comment_author>
        <wp:comment_author_url>
          http://nhforge.org/members/epitka/default.aspx
        </wp:comment_author_url>
        <wp:comment_author_email/>
        <wp:comment_author_IP/>
        <wp:comment_date_gmt>
          2008-11-22 16:23:44
        </wp:comment_date_gmt>
        <wp:comment_content>
          Hi, I don&apos;t see the behavior that you are describing. I have a
          test that creates one order with 100 orderlines. OrderLines are lazy
          loaded. When I try to iterate through order lines the whole collection
          gets loaded, not one by one.
        </wp:comment_content>
        <wp:comment_approved>
          1
        </wp:comment_approved>
      </wp:comment>
    </item>
    <item>
      <title>
        Eager loading aggregate with many child collections
      </title>
      <link>
        http://nhibernate.github.io/blogs/nhibernate/archive/2008/09/06/eager-loading-aggregate-with-many-child-collections.html
      </link>
      <dsq:thread_identifier>
        blogs_nhibernate_archive_2008_09_06_eager-loading-aggregate-with-many-child-collections
      </dsq:thread_identifier>
      <wp:post_date_gmt>
        2008-09-06 17:05:00
      </wp:post_date_gmt>
      <wp:comment>
        <wp:comment_id>
          45
        </wp:comment_id>
        <wp:comment_author>
          mhnyborg
        </wp:comment_author>
        <wp:comment_author_url>
          http://www.nhforge.org/members/mhnyborg/default.aspx
        </wp:comment_author_url>
        <wp:comment_author_email/>
        <wp:comment_author_IP/>
        <wp:comment_date_gmt>
          2008-09-06 22:02:02
        </wp:comment_date_gmt>
        <wp:comment_content>
          Is this possible with LINQ? 
        </wp:comment_content>
        <wp:comment_approved>
          1
        </wp:comment_approved>
      </wp:comment>
      <wp:comment>
        <wp:comment_id>
          269
        </wp:comment_id>
        <wp:comment_author>
          santo2
        </wp:comment_author>
        <wp:comment_author_url>
          http://
        </wp:comment_author_url>
        <wp:comment_author_email/>
        <wp:comment_author_IP/>
        <wp:comment_date_gmt>
          2009-04-21 14:34:43
        </wp:comment_date_gmt>
        <wp:comment_content>
          I&apos;ve got 4 one to many bag properties and 10 many to one
          properties. the many to one properties are not lazy. with the
          multicriteria that results to loading those 10 many to one properties
          4 times, which is taking too long. Is there another solution except
          lazy load the many to one properties?
        </wp:comment_content>
        <wp:comment_approved>
          1
        </wp:comment_approved>
      </wp:comment>
      <wp:comment>
        <wp:comment_id>
          289
        </wp:comment_id>
        <wp:comment_author>
          santo2
        </wp:comment_author>
        <wp:comment_author_url>
          http://
        </wp:comment_author_url>
        <wp:comment_author_email/>
        <wp:comment_author_IP/>
        <wp:comment_date_gmt>
          2009-05-04 06:34:36
        </wp:comment_date_gmt>
        <wp:comment_content>
          how do i make sure the lazy loading on a collection of one of the
          collections is false? greets
        </wp:comment_content>
        <wp:comment_approved>
          1
        </wp:comment_approved>
      </wp:comment>
      <wp:comment>
        <wp:comment_id>
          292
        </wp:comment_id>
        <wp:comment_author>
          gabriel.schenker
        </wp:comment_author>
        <wp:comment_author_url>
          http://nhforge.org/members/gabriel.schenker/default.aspx
        </wp:comment_author_url>
        <wp:comment_author_email/>
        <wp:comment_author_IP/>
        <wp:comment_date_gmt>
          2009-05-05 05:25:38
        </wp:comment_date_gmt>
        <wp:comment_content>
          @santo 2: you might have a look at e.g. this post:
          http://nhforge.org/blogs/nhibernate/archive/2009/04/13/nhibernate-mapping-lt-set-gt.aspx
        </wp:comment_content>
        <wp:comment_approved>
          1
        </wp:comment_approved>
      </wp:comment>
      <wp:comment>
        <wp:comment_id>
          294
        </wp:comment_id>
        <wp:comment_author>
          k03123
        </wp:comment_author>
        <wp:comment_author_url>
          http://nhforge.org/members/k03123/default.aspx
        </wp:comment_author_url>
        <wp:comment_author_email/>
        <wp:comment_author_IP/>
        <wp:comment_date_gmt>
          2009-05-06 02:54:58
        </wp:comment_date_gmt>
        <wp:comment_content>
          in the example above lets say Post has Comments. is it still possible
          to eagerly load Blog with all the Posts and Comments? thanks
        </wp:comment_content>
        <wp:comment_approved>
          1
        </wp:comment_approved>
      </wp:comment>
      <wp:comment>
        <wp:comment_id>
          295
        </wp:comment_id>
        <wp:comment_author>
          gabriel.schenker
        </wp:comment_author>
        <wp:comment_author_url>
          http://nhforge.org/members/gabriel.schenker/default.aspx
        </wp:comment_author_url>
        <wp:comment_author_email/>
        <wp:comment_author_IP/>
        <wp:comment_date_gmt>
          2009-05-06 05:53:00
        </wp:comment_date_gmt>
        <wp:comment_content>
          @k03123 In general I would avoid such queries... they don&apos;t
          scale. Perhaps you can just show the number of comments per post and
          only retrieve the comments when the user drills down to an individual
          post.
        </wp:comment_content>
        <wp:comment_approved>
          1
        </wp:comment_approved>
      </wp:comment>
      <wp:comment>
        <wp:comment_id>
          296
        </wp:comment_id>
        <wp:comment_author>
          k03123
        </wp:comment_author>
        <wp:comment_author_url>
          http://nhforge.org/members/k03123/default.aspx
        </wp:comment_author_url>
        <wp:comment_author_email/>
        <wp:comment_author_IP/>
        <wp:comment_date_gmt>
          2009-05-06 06:31:36
        </wp:comment_date_gmt>
        <wp:comment_content>
          hi gabriel, thanks for taking time to reply. i was taking Blog, Posts
          and Comments as an example only. in my case i have a Report object
          which is the root and it has Groups which in turn has Regions. while
          displaying the Report, i need all the Regions to perform some
          calculation. btw, somewhere on the internet i found that u can do that
          as: from Blog b inner join fetch b.Posts p inner join fetch p.Comments
          c but this returns cartesan products and u need to use Set instead of
          bag for collection. so i was wondering if it is possible to do it
          using multiquery/multicriteria. thanks
        </wp:comment_content>
        <wp:comment_approved>
          1
        </wp:comment_approved>
      </wp:comment>
    </item>
    <item>
      <title>
        Soft Deletes
      </title>
      <link>
        http://nhibernate.github.io/blogs/nhibernate/archive/2008/09/06/soft-deletes.html
      </link>
      <dsq:thread_identifier>
        blogs_nhibernate_archive_2008_09_06_soft-deletes
      </dsq:thread_identifier>
      <wp:post_date_gmt>
        2008-09-06 17:25:00
      </wp:post_date_gmt>
    </item>
    <item>
      <title>
        A fluent interface to NHibernate - Part 4 - Configuration
      </title>
      <link>
        http://nhibernate.github.io/blogs/nhibernate/archive/2008/09/06/a-fluent-interface-to-nhibernate-part-4-configuration.html
      </link>
      <dsq:thread_identifier>
        blogs_nhibernate_archive_2008_09_06_a-fluent-interface-to-nhibernate-part-4-configuration
      </dsq:thread_identifier>
      <wp:post_date_gmt>
        2008-09-06 20:45:31
      </wp:post_date_gmt>
    </item>
    <item>
      <title>
        Manage SQL Databases
      </title>
      <link>
        http://nhibernate.github.io/blogs/nhibernate/archive/2008/09/06/manage-sql-databases.html
      </link>
      <dsq:thread_identifier>
        blogs_nhibernate_archive_2008_09_06_manage-sql-databases
      </dsq:thread_identifier>
      <wp:post_date_gmt>
        2008-09-06 20:54:15
      </wp:post_date_gmt>
    </item>
    <item>
      <title>
        Identity Field, Equality and Hash Code
      </title>
      <link>
        http://nhibernate.github.io/blogs/nhibernate/archive/2008/09/06/identity-field-equality-and-hash-code.html
      </link>
      <dsq:thread_identifier>
        blogs_nhibernate_archive_2008_09_06_identity-field-equality-and-hash-code
      </dsq:thread_identifier>
      <wp:post_date_gmt>
        2008-09-06 21:02:27
      </wp:post_date_gmt>
      <wp:comment>
        <wp:comment_id>
          505
        </wp:comment_id>
        <wp:comment_author>
          Felix Gartsman
        </wp:comment_author>
        <wp:comment_author_url>
          http://nhforge.org/members/felixg/default.aspx
        </wp:comment_author_url>
        <wp:comment_author_email/>
        <wp:comment_author_IP/>
        <wp:comment_date_gmt>
          2009-09-13 17:16:31
        </wp:comment_date_gmt>
        <wp:comment_content>
          According to
          http://msdn.microsoft.com/en-us/library/system.object.gethashcode.aspx
          this implementation does not meet consistency requirements. The
          requirement is: If two objects compare as equal, the GetHashCode
          method for each object must return the same value. Consider object A
          was transient and saved its hashcode. Then was persisted and assigned
          Id=X. Afterward we load object B for identity X. Now we get A==B, but
          their hashcodes differ! According to this &quot;The GetHashCode method
          for an object must consistently return the same hash code as long as
          there is no modification to the object state that determines the
          return value of the object&apos;s Equals method.&quot; you actually
          can change the hashcode, though it&apos;ll probably mess things up.
        </wp:comment_content>
        <wp:comment_approved>
          1
        </wp:comment_approved>
      </wp:comment>
      <wp:comment>
        <wp:comment_id>
          506
        </wp:comment_id>
        <wp:comment_author>
          gabriel.schenker
        </wp:comment_author>
        <wp:comment_author_url>
          http://nhforge.org/members/gabriel.schenker/default.aspx
        </wp:comment_author_url>
        <wp:comment_author_email/>
        <wp:comment_author_IP/>
        <wp:comment_date_gmt>
          2009-09-13 21:41:37
        </wp:comment_date_gmt>
        <wp:comment_content>
          In the article I explicitely write that this is a very specific
          implementation of equality. The equality is based on several
          conventions: a) for a given id only one instance can/shall exists at
          the same time (first level cache!) b) ONLY the id is the relevant for
          comparison if you are talking of &quot;value type&quot; (in the DDD
          sense) comparison then your statement is valid!
        </wp:comment_content>
        <wp:comment_approved>
          1
        </wp:comment_approved>
      </wp:comment>
      <wp:comment>
        <wp:comment_id>
          973
        </wp:comment_id>
        <wp:comment_author>
          Stefan Steinegger
        </wp:comment_author>
        <wp:comment_author_url>
          http://nhforge.org/members/ssteinegger/default.aspx
        </wp:comment_author_url>
        <wp:comment_author_email/>
        <wp:comment_author_IP/>
        <wp:comment_date_gmt>
          2011-08-29 13:50:09
        </wp:comment_date_gmt>
        <wp:comment_content>
          @Felix Gartsman: This shouldn&apos;t ever be a problem. There
          can&apos;t be two objects with the same id in the same session -
          except one is the proxy of the other. But in the case of proxy, it is
          not possible that one is persistent and the other is not.
          Additionally, the proxy calls the object&apos;s GetHashCode and Equals
          methods, so they return the same values. Whatever you do to get two
          objects with the same id (you need to take it from another session),
          you&apos;ll get a problem. I don&apos;t think that an Equals or
          GetHashCode method could ever avoid this problem. And I can&apos;t
          think of any scenario where it would make sense.
        </wp:comment_content>
        <wp:comment_approved>
          1
        </wp:comment_approved>
      </wp:comment>
    </item>
    <item>
      <title>
        How to configure Log4Net for use with NHibernate
      </title>
      <link>
        http://nhibernate.github.io/blogs/nhibernate/archive/2008/09/06/how-to-configure-log4net-for-use-with-nhibernate.html
      </link>
      <dsq:thread_identifier>
        blogs_nhibernate_archive_2008_09_06_how-to-configure-log4net-for-use-with-nhibernate
      </dsq:thread_identifier>
      <wp:post_date_gmt>
        2008-09-06 21:12:50
      </wp:post_date_gmt>
    </item>
    <item>
      <title>
        Prepare your system for NHibernate
      </title>
      <link>
        http://nhibernate.github.io/blogs/nhibernate/archive/2008/09/06/prepare-your-system-for-nhibernate.html
      </link>
      <dsq:thread_identifier>
        blogs_nhibernate_archive_2008_09_06_prepare-your-system-for-nhibernate
      </dsq:thread_identifier>
      <wp:post_date_gmt>
        2008-09-06 22:12:52
      </wp:post_date_gmt>
      <wp:comment>
        <wp:comment_id>
          52
        </wp:comment_id>
        <wp:comment_author>
          yannick
        </wp:comment_author>
        <wp:comment_author_url>
          http://www.nhforge.org/members/yannick/default.aspx
        </wp:comment_author_url>
        <wp:comment_author_email/>
        <wp:comment_author_IP/>
        <wp:comment_date_gmt>
          2008-09-09 07:11:09
        </wp:comment_date_gmt>
        <wp:comment_content>
          how about including the link to the svn repo to copy and paste?
          https://nhibernate.svn.sourceforge.net/svnroot/nhibernate/trunk also
          it would be nice to have this link on the front page or some other
          more accessible place. i had to search quite a while for it. thanks y
        </wp:comment_content>
        <wp:comment_approved>
          1
        </wp:comment_approved>
      </wp:comment>
      <wp:comment>
        <wp:comment_id>
          53
        </wp:comment_id>
        <wp:comment_author>
          Dario Quintana
        </wp:comment_author>
        <wp:comment_author_url>
          http://www.nhforge.org/members/darioquintana/default.aspx
        </wp:comment_author_url>
        <wp:comment_author_email/>
        <wp:comment_author_IP/>
        <wp:comment_date_gmt>
          2008-09-10 04:21:36
        </wp:comment_date_gmt>
        <wp:comment_content>
          Hi Be patience, we are shaping the site, maybe in a future, the most
          important resources would be available in a easier fashion. Best
          regards
        </wp:comment_content>
        <wp:comment_approved>
          1
        </wp:comment_approved>
      </wp:comment>
    </item>
    <item>
      <title>
        NHIbernate Grok! 
      </title>
      <link>
        http://nhibernate.github.io/blogs/nhibernate/archive/2008/09/08/nhibernate-resource-search-site.html
      </link>
      <dsq:thread_identifier>
        blogs_nhibernate_archive_2008_09_08_nhibernate-resource-search-site
      </dsq:thread_identifier>
      <wp:post_date_gmt>
        2008-09-08 09:55:00
      </wp:post_date_gmt>
      <wp:comment>
        <wp:comment_id>
          50
        </wp:comment_id>
        <wp:comment_author>
          Fabio Maulo
        </wp:comment_author>
        <wp:comment_author_url>
          http://www.nhforge.org/members/fabiomaulo/default.aspx
        </wp:comment_author_url>
        <wp:comment_author_email/>
        <wp:comment_author_IP/>
        <wp:comment_date_gmt>
          2008-09-08 14:27:54
        </wp:comment_date_gmt>
        <wp:comment_content>
          Why don&apos;t integrate it NHforge ? ;)
        </wp:comment_content>
        <wp:comment_approved>
          1
        </wp:comment_approved>
      </wp:comment>
      <wp:comment>
        <wp:comment_id>
          51
        </wp:comment_id>
        <wp:comment_author>
          tobinharris
        </wp:comment_author>
        <wp:comment_author_url>
          http://www.nhforge.org/members/tobinharris/default.aspx
        </wp:comment_author_url>
        <wp:comment_author_email/>
        <wp:comment_author_IP/>
        <wp:comment_date_gmt>
          2008-09-08 19:37:53
        </wp:comment_date_gmt>
        <wp:comment_content>
          Just to follow up on this, Fabio and I are discussing this option.
          Putting it under NHForge makes LOADS of sense, and will help guarantee
          that the search is maintained and valuable for a long time to come.
        </wp:comment_content>
        <wp:comment_approved>
          1
        </wp:comment_approved>
      </wp:comment>
    </item>
    <item>
      <title>
        Visit the &amp;quot;How To&amp;quot; section
      </title>
      <link>
        http://nhibernate.github.io/blogs/nhibernate/archive/2008/09/12/visit-the-quot-how-to-quot-section.html
      </link>
      <dsq:thread_identifier>
        blogs_nhibernate_archive_2008_09_12_visit-the-quot-how-to-quot-section
      </dsq:thread_identifier>
      <wp:post_date_gmt>
        2008-09-12 17:42:00
      </wp:post_date_gmt>
    </item>
    <item>
      <title>
        Value objects
      </title>
      <link>
        http://nhibernate.github.io/blogs/nhibernate/archive/2008/09/17/value-objects.html
      </link>
      <dsq:thread_identifier>
        blogs_nhibernate_archive_2008_09_17_value-objects
      </dsq:thread_identifier>
      <wp:post_date_gmt>
        2008-09-17 11:29:56
      </wp:post_date_gmt>
    </item>
    <item>
      <title>
        Extending NHibernate&apos;s DriverConnectionProvider
      </title>
      <link>
        http://nhibernate.github.io/blogs/nhibernate/archive/2008/09/18/extending-nhibernate-s-driverconnectionprovider.html
      </link>
      <dsq:thread_identifier>
        blogs_nhibernate_archive_2008_09_18_extending-nhibernate-s-driverconnectionprovider
      </dsq:thread_identifier>
      <wp:post_date_gmt>
        2008-09-18 14:48:00
      </wp:post_date_gmt>
    </item>
    <item>
      <title>
        Introducing NHibernate ProxyGenerators
      </title>
      <link>
        http://nhibernate.github.io/blogs/nhibernate/archive/2008/09/22/introducing-nhibernate-proxygenerators.html
      </link>
      <dsq:thread_identifier>
        blogs_nhibernate_archive_2008_09_22_introducing-nhibernate-proxygenerators
      </dsq:thread_identifier>
      <wp:post_date_gmt>
        2008-09-23 04:28:22
      </wp:post_date_gmt>
      <wp:comment>
        <wp:comment_id>
          61
        </wp:comment_id>
        <wp:comment_author>
          wibber
        </wp:comment_author>
        <wp:comment_author_url>
          http://www.nhforge.org/members/kenwiebke/default.aspx
        </wp:comment_author_url>
        <wp:comment_author_email/>
        <wp:comment_author_IP/>
        <wp:comment_date_gmt>
          2008-09-24 17:36:00
        </wp:comment_date_gmt>
        <wp:comment_content>
          Can&apos;t wait to try this out. I was about to jump to a different
          hosting provider because of the issues you mention. 
        </wp:comment_content>
        <wp:comment_approved>
          1
        </wp:comment_approved>
      </wp:comment>
    </item>
    <item>
      <title>
        The month of NH Forge
      </title>
      <link>
        http://nhibernate.github.io/blogs/nhibernate/archive/2008/09/29/the-month-of-nh-forge.html
      </link>
      <dsq:thread_identifier>
        blogs_nhibernate_archive_2008_09_29_the-month-of-nh-forge
      </dsq:thread_identifier>
      <wp:post_date_gmt>
        2008-09-29 18:55:00
      </wp:post_date_gmt>
    </item>
    <item>
      <title>
        NHibernate Validator 1.0.0 GA released !
      </title>
      <link>
        http://nhibernate.github.io/blogs/nhibernate/archive/2008/09/29/nhibernate-validator-1-0-0-ga-released.html
      </link>
      <dsq:thread_identifier>
        blogs_nhibernate_archive_2008_09_29_nhibernate-validator-1-0-0-ga-released
      </dsq:thread_identifier>
      <wp:post_date_gmt>
        2008-09-30 00:44:00
      </wp:post_date_gmt>
    </item>
    <item>
      <title>
        NHibernate.Spatial 1.0.0 Beta1 released
      </title>
      <link>
        http://nhibernate.github.io/blogs/nhibernate/archive/2008/10/01/nhibernate-spatial-1-0-0-beta1-released.html
      </link>
      <dsq:thread_identifier>
        blogs_nhibernate_archive_2008_10_01_nhibernate-spatial-1-0-0-beta1-released
      </dsq:thread_identifier>
      <wp:post_date_gmt>
        2008-10-01 04:44:00
      </wp:post_date_gmt>
    </item>
    <item>
      <title>
        The best way to solve NHibernate bugs? Submit good unit test
      </title>
      <link>
        http://nhibernate.github.io/blogs/nhibernate/archive/2008/10/04/the-best-way-to-solve-nhibernate-bugs-submit-good-unit-test.html
      </link>
      <dsq:thread_identifier>
        blogs_nhibernate_archive_2008_10_04_the-best-way-to-solve-nhibernate-bugs-submit-good-unit-test
      </dsq:thread_identifier>
      <wp:post_date_gmt>
        2008-10-04 07:04:00
      </wp:post_date_gmt>
      <wp:comment>
        <wp:comment_id>
          72
        </wp:comment_id>
        <wp:comment_author>
          tehlike
        </wp:comment_author>
        <wp:comment_author_url>
          http://
        </wp:comment_author_url>
        <wp:comment_author_email/>
        <wp:comment_author_IP/>
        <wp:comment_date_gmt>
          2008-10-04 17:08:16
        </wp:comment_date_gmt>
        <wp:comment_content>
          Good article, Crad! I suggest executing the test cases against the
          trunk because it may already be fixed but not yet released. If I am to
          summary what to do, 1. Download the trunk, use it always(even if one
          isn&apos;t going to create patch) 2. Search jira for similar issues,
          and if there is nothing similar and you still think that it is a bug
          to be fixed, create a jira issue. 3. Create NHxyzt folder(xyzt being
          the bug number). 4. Add your domain classes and then
          mappings(Mappings.hbm.xml) 5. Create the test code which illustrates
          the problem. Override OnSetUp and OnTearDown for your initial data and
          other initializations. 6. Run the test case see if it is failing. 7.
          If you know how to fix, then fix it in NHibernate project, if not, it
          still fine. 8. Create the patch against src folder using Right Click
          &quot;src&quot; folder and go to Tortoise SVN-&gt;Create Patch. Make
          sure it doesn&apos;t contain any dll&apos;s(A test case doesn&apos;t
          need compiled file, source is fine) and contain the files you have
          modified, don&apos;t forget to include .csproj files. 9. Add the patch
          to Jira. 
        </wp:comment_content>
        <wp:comment_approved>
          1
        </wp:comment_approved>
      </wp:comment>
      <wp:comment>
        <wp:comment_id>
          73
        </wp:comment_id>
        <wp:comment_author>
          tehlike
        </wp:comment_author>
        <wp:comment_author_url>
          http://
        </wp:comment_author_url>
        <wp:comment_author_email/>
        <wp:comment_author_IP/>
        <wp:comment_date_gmt>
          2008-10-04 18:34:17
        </wp:comment_date_gmt>
        <wp:comment_content>
          And I think we need to define coding standards. Things like camelCase
          for fields, etc.
        </wp:comment_content>
        <wp:comment_approved>
          1
        </wp:comment_approved>
      </wp:comment>
      <wp:comment>
        <wp:comment_id>
          74
        </wp:comment_id>
        <wp:comment_author>
          Fabio Maulo
        </wp:comment_author>
        <wp:comment_author_url>
          http://www.nhforge.org/members/fabiomaulo/default.aspx
        </wp:comment_author_url>
        <wp:comment_author_email/>
        <wp:comment_author_IP/>
        <wp:comment_date_gmt>
          2008-10-04 18:34:18
        </wp:comment_date_gmt>
        <wp:comment_content>
          - The patch is better in a specific separate file. About
          &quot;Download the trunk&quot; it is enough with &quot;Download the
          last available version&quot;, for somebody &quot;trunk&quot; is an
          heavy world. Another point is: If you find a similar issue but it was
          closed, please, create a new one with your specific test if the old
          one was closed as fixed.
        </wp:comment_content>
        <wp:comment_approved>
          1
        </wp:comment_approved>
      </wp:comment>
      <wp:comment>
        <wp:comment_id>
          77
        </wp:comment_id>
        <wp:comment_author>
          jnapier
        </wp:comment_author>
        <wp:comment_author_url>
          http://www.nhforge.org/members/jnapier/default.aspx
        </wp:comment_author_url>
        <wp:comment_author_email/>
        <wp:comment_author_IP/>
        <wp:comment_date_gmt>
          2008-10-06 17:00:12
        </wp:comment_date_gmt>
        <wp:comment_content>
          I think information contained in this article should be included in
          this post. This article describes exactly what should be done to get
          started creating a test for a jira issue and I dont believe this is
          referenced anywhere through out the wiki
          http://www.hibernate.org/428.html
        </wp:comment_content>
        <wp:comment_approved>
          1
        </wp:comment_approved>
      </wp:comment>
      <wp:comment>
        <wp:comment_id>
          78
        </wp:comment_id>
        <wp:comment_author>
          Dario Quintana
        </wp:comment_author>
        <wp:comment_author_url>
          http://www.nhforge.org/members/darioquintana/default.aspx
        </wp:comment_author_url>
        <wp:comment_author_email/>
        <wp:comment_author_IP/>
        <wp:comment_date_gmt>
          2008-10-07 13:53:01
        </wp:comment_date_gmt>
        <wp:comment_content>
          Nobody is maintaining nhibernate.org domain. You should find here at
          NHForge for every NHibernate info. Best regards
        </wp:comment_content>
        <wp:comment_approved>
          1
        </wp:comment_approved>
      </wp:comment>
      <wp:comment>
        <wp:comment_id>
          86
        </wp:comment_id>
        <wp:comment_author>
          jnapier
        </wp:comment_author>
        <wp:comment_author_url>
          http://www.nhforge.org/members/jnapier/default.aspx
        </wp:comment_author_url>
        <wp:comment_author_email/>
        <wp:comment_author_IP/>
        <wp:comment_date_gmt>
          2008-10-11 02:02:14
        </wp:comment_date_gmt>
        <wp:comment_content>
          Dario, My point was, that there is valuable information in this link,
          www.hibernate.org/428.html, that is not mentioned here and hopefully
          it can be pulled over into this post. For example there is information
          on how to configure nhibernate for your test environment without
          changing app.config. 
        </wp:comment_content>
        <wp:comment_approved>
          1
        </wp:comment_approved>
      </wp:comment>
      <wp:comment>
        <wp:comment_id>
          87
        </wp:comment_id>
        <wp:comment_author>
          Fabio Maulo
        </wp:comment_author>
        <wp:comment_author_url>
          http://www.nhforge.org/members/fabiomaulo/default.aspx
        </wp:comment_author_url>
        <wp:comment_author_email/>
        <wp:comment_author_IP/>
        <wp:comment_date_gmt>
          2008-10-11 05:55:15
        </wp:comment_date_gmt>
        <wp:comment_content>
          @jnapier Info on how configure NH are available here
          http://www.nhforge.org/wikis/howtonh/your-first-nhibernate-based-application.aspx The ways to configure NH is outside the scope of this blog-post
        </wp:comment_content>
        <wp:comment_approved>
          1
        </wp:comment_approved>
      </wp:comment>
      <wp:comment>
        <wp:comment_id>
          128
        </wp:comment_id>
        <wp:comment_author>
          Adrian
        </wp:comment_author>
        <wp:comment_author_url>
          http://nhforge.org/members/HappyNomad/default.aspx
        </wp:comment_author_url>
        <wp:comment_author_email/>
        <wp:comment_author_IP/>
        <wp:comment_date_gmt>
          2008-11-22 08:11:00
        </wp:comment_date_gmt>
        <wp:comment_content>
          I suggest moving this post over to the Wiki. It covers an issue of
          central importance to NH and, obvious from comments above, many people
          are interested in improving upon it. Moving it over would make it
          possible to incorporate these, and other, improvements into the
          original article. 
        </wp:comment_content>
        <wp:comment_approved>
          1
        </wp:comment_approved>
      </wp:comment>
      <wp:comment>
        <wp:comment_id>
          129
        </wp:comment_id>
        <wp:comment_author>
          Fabio Maulo
        </wp:comment_author>
        <wp:comment_author_url>
          http://nhforge.org/members/fabiomaulo/default.aspx
        </wp:comment_author_url>
        <wp:comment_author_email/>
        <wp:comment_author_IP/>
        <wp:comment_date_gmt>
          2008-11-22 13:19:46
        </wp:comment_date_gmt>
        <wp:comment_content>
          You are right.
        </wp:comment_content>
        <wp:comment_approved>
          1
        </wp:comment_approved>
      </wp:comment>
      <wp:comment>
        <wp:comment_id>
          363
        </wp:comment_id>
        <wp:comment_author>
          darius.damalakas@gmail.com
        </wp:comment_author>
        <wp:comment_author_url>
          http://nhforge.org/members/darius.damalakas_4000_gmail.com/default.aspx
        </wp:comment_author_url>
        <wp:comment_author_email/>
        <wp:comment_author_IP/>
        <wp:comment_date_gmt>
          2009-06-09 07:29:21
        </wp:comment_date_gmt>
        <wp:comment_content>
          Fabio, very good post. And i agree that you expressed your opinion
          actively on NH-1818. That kind of bug report is not good, i wastes
          lots of NH supporters time. 
        </wp:comment_content>
        <wp:comment_approved>
          1
        </wp:comment_approved>
      </wp:comment>
      <wp:comment>
        <wp:comment_id>
          703
        </wp:comment_id>
        <wp:comment_author>
          kanderson
        </wp:comment_author>
        <wp:comment_author_url>
          http://nhforge.org/members/kanderson/default.aspx
        </wp:comment_author_url>
        <wp:comment_author_email/>
        <wp:comment_author_IP/>
        <wp:comment_date_gmt>
          2010-08-06 18:00:53
        </wp:comment_date_gmt>
        <wp:comment_content>
          The links to download the sample test projects
          (http://www.nhforge.org/media/p/70.aspx) give Access Denied errors.
        </wp:comment_content>
        <wp:comment_approved>
          1
        </wp:comment_approved>
      </wp:comment>
      <wp:comment>
        <wp:comment_id>
          729
        </wp:comment_id>
        <wp:comment_author>
          Nexus
        </wp:comment_author>
        <wp:comment_author_url>
          http://nhforge.org/members/tommarien/default.aspx
        </wp:comment_author_url>
        <wp:comment_author_email/>
        <wp:comment_author_IP/>
        <wp:comment_date_gmt>
          2010-11-08 11:06:05
        </wp:comment_date_gmt>
        <wp:comment_content>
          Please update this post as it seems test project is no longer
          available and i have no clue how to get trunk building. I&apos;d like
          to submit a bug and a fix :)
        </wp:comment_content>
        <wp:comment_approved>
          1
        </wp:comment_approved>
      </wp:comment>
    </item>
    <item>
      <title>
        Querying With NHibernate
      </title>
      <link>
        http://nhibernate.github.io/blogs/nhibernate/archive/2008/10/05/querying-with-nhibernate.html
      </link>
      <dsq:thread_identifier>
        blogs_nhibernate_archive_2008_10_05_querying-with-nhibernate
      </dsq:thread_identifier>
      <wp:post_date_gmt>
        2008-10-05 11:00:00
      </wp:post_date_gmt>
    </item>
    <item>
      <title>
        NHibernate ProxyGenerators 1.0.0 Beta Released
      </title>
      <link>
        http://nhibernate.github.io/blogs/nhibernate/archive/2008/10/07/nhibernate-proxygenerators-1-0-0-beta-released.html
      </link>
      <dsq:thread_identifier>
        blogs_nhibernate_archive_2008_10_07_nhibernate-proxygenerators-1-0-0-beta-released
      </dsq:thread_identifier>
      <wp:post_date_gmt>
        2008-10-07 14:44:21
      </wp:post_date_gmt>
    </item>
    <item>
      <title>
        NHibernate.Spatial 1.0.0 Beta2 released
      </title>
      <link>
        http://nhibernate.github.io/blogs/nhibernate/archive/2008/10/08/nhibernate-spatial-1-0-0-beta2-released.html
      </link>
      <dsq:thread_identifier>
        blogs_nhibernate_archive_2008_10_08_nhibernate-spatial-1-0-0-beta2-released
      </dsq:thread_identifier>
      <wp:post_date_gmt>
        2008-10-08 13:36:00
      </wp:post_date_gmt>
      <wp:comment>
        <wp:comment_id>
          702
        </wp:comment_id>
        <wp:comment_author>
          chief007
        </wp:comment_author>
        <wp:comment_author_url>
          http://nhforge.org/members/chief007/default.aspx
        </wp:comment_author_url>
        <wp:comment_author_email/>
        <wp:comment_author_IP/>
        <wp:comment_date_gmt>
          2010-08-05 08:10:51
        </wp:comment_date_gmt>
        <wp:comment_content>
          anything is possible
        </wp:comment_content>
        <wp:comment_approved>
          1
        </wp:comment_approved>
      </wp:comment>
      <wp:comment>
        <wp:comment_id>
          713
        </wp:comment_id>
        <wp:comment_author>
          sherazmustafa
        </wp:comment_author>
        <wp:comment_author_url>
          http://nhforge.org/members/sherazmustafa/default.aspx
        </wp:comment_author_url>
        <wp:comment_author_email/>
        <wp:comment_author_IP/>
        <wp:comment_date_gmt>
          2010-09-22 10:53:46
        </wp:comment_date_gmt>
        <wp:comment_content>
          Receive Access Denied Message when try to download NHibernate.Spatial
          1.0.0 Beta2
        </wp:comment_content>
        <wp:comment_approved>
          1
        </wp:comment_approved>
      </wp:comment>
    </item>
    <item>
      <title>
        NH2.1.0: Reference to Castle removed
      </title>
      <link>
        http://nhibernate.github.io/blogs/nhibernate/archive/2008/10/11/nh2-1-0-reference-to-castle-removed.html
      </link>
      <dsq:thread_identifier>
        blogs_nhibernate_archive_2008_10_11_nh2-1-0-reference-to-castle-removed
      </dsq:thread_identifier>
      <wp:post_date_gmt>
        2008-10-11 22:58:44
      </wp:post_date_gmt>
    </item>
    <item>
      <title>
        Less than “Few” is GoF
      </title>
      <link>
        http://nhibernate.github.io/blogs/nhibernate/archive/2008/10/12/less-than-few-is-gof.html
      </link>
      <dsq:thread_identifier>
        blogs_nhibernate_archive_2008_10_12_less-than-few-is-gof
      </dsq:thread_identifier>
      <wp:post_date_gmt>
        2008-10-12 20:40:00
      </wp:post_date_gmt>
    </item>
    <item>
      <title>
        Persisting custom values for enums
      </title>
      <link>
        http://nhibernate.github.io/blogs/nhibernate/archive/2008/10/13/persisting-custom-values-for-enums.html
      </link>
      <dsq:thread_identifier>
        blogs_nhibernate_archive_2008_10_13_persisting-custom-values-for-enums
      </dsq:thread_identifier>
      <wp:post_date_gmt>
        2008-10-13 00:17:00
      </wp:post_date_gmt>
    </item>
    <item>
      <title>
        Less than GoF is hbm
      </title>
      <link>
        http://nhibernate.github.io/blogs/nhibernate/archive/2008/10/16/less-than-gof-is-hbm.html
      </link>
      <dsq:thread_identifier>
        blogs_nhibernate_archive_2008_10_16_less-than-gof-is-hbm
      </dsq:thread_identifier>
      <wp:post_date_gmt>
        2008-10-16 17:30:00
      </wp:post_date_gmt>
      <wp:comment>
        <wp:comment_id>
          106
        </wp:comment_id>
        <wp:comment_author>
          ssteinegger
        </wp:comment_author>
        <wp:comment_author_url>
          http://
        </wp:comment_author_url>
        <wp:comment_author_email/>
        <wp:comment_author_IP/>
        <wp:comment_date_gmt>
          2008-11-14 10:30:36
        </wp:comment_date_gmt>
        <wp:comment_content>
          Did you read about the new C# 4 features? There you can access
          properties that are &quot;created&quot; at runtime. I think this is
          also a kind of a Dictionary behind the scenes and could probably
          easily supported by NHibernate (when it is released).
        </wp:comment_content>
        <wp:comment_approved>
          1
        </wp:comment_approved>
      </wp:comment>
      <wp:comment>
        <wp:comment_id>
          108
        </wp:comment_id>
        <wp:comment_author>
          Fabio Maulo
        </wp:comment_author>
        <wp:comment_author_url>
          http://nhforge.org/members/fabiomaulo/default.aspx
        </wp:comment_author_url>
        <wp:comment_author_email/>
        <wp:comment_author_IP/>
        <wp:comment_date_gmt>
          2008-11-14 12:51:14
        </wp:comment_date_gmt>
        <wp:comment_content>
          Yes I know. Even LinFu DynamicObject (in .Net 2.0 and 3.5 support it)
        </wp:comment_content>
        <wp:comment_approved>
          1
        </wp:comment_approved>
      </wp:comment>
    </item>
    <item>
      <title>
        How Test your mappings: the Ghostbuster
      </title>
      <link>
        http://nhibernate.github.io/blogs/nhibernate/archive/2008/10/20/how-test-your-mappings-the-ghostbuster.html
      </link>
      <dsq:thread_identifier>
        blogs_nhibernate_archive_2008_10_20_how-test-your-mappings-the-ghostbuster
      </dsq:thread_identifier>
      <wp:post_date_gmt>
        2008-10-20 13:48:00
      </wp:post_date_gmt>
      <wp:comment>
        <wp:comment_id>
          107
        </wp:comment_id>
        <wp:comment_author>
          ssteinegger
        </wp:comment_author>
        <wp:comment_author_url>
          http://nhforge.org/members/ssteinegger/default.aspx
        </wp:comment_author_url>
        <wp:comment_author_email/>
        <wp:comment_author_IP/>
        <wp:comment_date_gmt>
          2008-11-14 12:40:56
        </wp:comment_date_gmt>
        <wp:comment_content>
          Interesting approach. I also wrote a MappingTester, that works quite
          different. Probably because our project is different. We generate the
          tables from the mapping files. We have to test if the mapping matches
          to the entities. I write a test for each class graph
          (&quot;tree&quot;). The tester takes the type of the &quot;root&quot;
          object. Then it - creates an instance of the type, populating all
          properties using reflection. - stores the entity (and some referenced
          entities that are configured to be not cascading) - reloads the entity
          in a new transaction - compares all properties using reflection. -
          Assures that a given list of types has been tested In most cases,
          there is little to write, like &quot;ignore this property&quot; and
          cascading issues. Example (pseudo-code) tester = new
          MappingTester(typeof(Person)) tester.Configure&lt;Person&gt;()
          .NonCascading(&quot;Employer&quot;)
          .DontGenerate(&quot;AnnualWage&quot;) // calculated from Salary
          .DontTest(&quot;State&quot;); // transient
          tester.Configure&lt;Address&gt;() .NonCascading(&quot;City&quot;);
          tester.test(); tester.AssertTypesTested( typeof(Person),
          typeof(Address), typeof(City), typeof(Company)); Finds errors like: -
          Mapping-parsing errors - create schema errors (rare) - When storing:
          many, many possible mistakes, missing mapping file (simple, but
          common), type mismatches and so on - When comparing: a list of
          properties that are not equal after persisting It&apos;s pretty easy.
          The tests are set up within minutes, I write them before I write the
          mapping file and use the test result as &quot;task-list&quot;. When it
          runs, I&apos;m pretty sure that everything is alright. Because of the
          excluding nature of the configuration, new properties in the entities
          let the test break, until they are either mapped or excluded (using
          DontTest which needs a good reason). The configurations could be held
          on a central place, because they are not test-specific, but
          entity-specific (If the same entity is reference from another test,
          you need the same configuration for it) The most complex part of the
          tester is the TestDataGenerator, that creates fully populated
          instances of object graphs, which saves one of writing hundreds of
          lines of code. It could be used independent from the mapping test.
          When I enhance it, I would implement that the same property is tested
          with two different values, which is important for booleans (until now,
          only true is tested). Another enhancment would be testing the deletion
          (and cascades like with update). But in my experience, a high
          percentage of common mistakes is already covered.
        </wp:comment_content>
        <wp:comment_approved>
          1
        </wp:comment_approved>
      </wp:comment>
      <wp:comment>
        <wp:comment_id>
          109
        </wp:comment_id>
        <wp:comment_author>
          Fabio Maulo
        </wp:comment_author>
        <wp:comment_author_url>
          http://nhforge.org/members/fabiomaulo/default.aspx
        </wp:comment_author_url>
        <wp:comment_author_email/>
        <wp:comment_author_IP/>
        <wp:comment_date_gmt>
          2008-11-14 13:00:29
        </wp:comment_date_gmt>
        <wp:comment_content>
          ObjectMother, and you can do it in the method PopulateDb. What we are
          testing here is something else... to be sure try to change a type of
          an enum (the same example I&apos;m doing here) in your tests and take
          a look if some test fail.
        </wp:comment_content>
        <wp:comment_approved>
          1
        </wp:comment_approved>
      </wp:comment>
      <wp:comment>
        <wp:comment_id>
          111
        </wp:comment_id>
        <wp:comment_author>
          ssteinegger
        </wp:comment_author>
        <wp:comment_author_url>
          http://nhforge.org/members/ssteinegger/default.aspx
        </wp:comment_author_url>
        <wp:comment_author_email/>
        <wp:comment_author_IP/>
        <wp:comment_date_gmt>
          2008-11-16 00:32:57
        </wp:comment_date_gmt>
        <wp:comment_content>
          I know that you are testing something else. I don&apos;t question your
          approach. The &quot;Get-Flush&quot; ghostbuster should probably also
          be part of my test. (You could easily use a mock as interceptor).
          I&apos;m not sure if I understand your ObjectMother remark. You mean,
          that you write a method that creates objects hardcoded (instead of
          using a generic library or helper class)? If this is what you mean,
          you have to admit that you can&apos;t create a whole object graph
          (consisting of many classes) within four lines of code. You&apos;ll
          get hundreds of lines of code in your project, which is hard to
          maintain.
        </wp:comment_content>
        <wp:comment_approved>
          1
        </wp:comment_approved>
      </wp:comment>
      <wp:comment>
        <wp:comment_id>
          112
        </wp:comment_id>
        <wp:comment_author>
          Fabio Maulo
        </wp:comment_author>
        <wp:comment_author_url>
          http://nhforge.org/members/fabiomaulo/default.aspx
        </wp:comment_author_url>
        <wp:comment_author_email/>
        <wp:comment_author_IP/>
        <wp:comment_date_gmt>
          2008-11-16 20:47:10
        </wp:comment_date_gmt>
        <wp:comment_content>
          Try to follow the link of ObjectMother and/or TestDataBuilder I put in
          the post.
        </wp:comment_content>
        <wp:comment_approved>
          1
        </wp:comment_approved>
      </wp:comment>
      <wp:comment>
        <wp:comment_id>
          141
        </wp:comment_id>
        <wp:comment_author>
          Giovanni as PadovaBoy
        </wp:comment_author>
        <wp:comment_author_url>
          http://nhforge.org/members/Giovanni-as-PadovaBoy/default.aspx
        </wp:comment_author_url>
        <wp:comment_author_email/>
        <wp:comment_author_IP/>
        <wp:comment_date_gmt>
          2008-12-03 12:42:53
        </wp:comment_date_gmt>
        <wp:comment_content>
          Hi Fabio ;) Tnx a lot for this peace of code! I have some suggest: In
          PersistingMappings method there are 2 problem: 1) the name of
          persistentClass.EntityName can contain the namespaces ...so u check
          something like
          &quot;pippo.Contains(MySpace.Domain.Preferred.Degustibus.Pippo) ...and
          yep: there is no story :P My BRUTAL suggestion: where
          entitiesFilter.Contains(
          persistentClass.EntityName.Split(&apos;.&apos;)[persistentClass.EntityName.Split(&apos;.&apos;).Length - 1]) (brutal but it work!) 2) for the Id key: i don&apos;t know why, but i use a &quot;personal&quot; Primary Key Name for every entity. Like IdUser, IdBill etc... So i change the code (raw mode on): (From Line 80): if (entitiesFilter == null) { var entitiesToCheck = from persistentClass in _config.ClassMappings select new { Name = persistentClass.EntityName, IdName = persistentClass.IdentifierProperty.Name }; foreach (var entity in entitiesToCheck) { EntityPersistenceTest(invalidUpdates, entity.Name, entity.IdName, nop); } } else { var entitiesToCheck = from persistentClass in _config.ClassMappings where entitiesFilter.Contains( persistentClass.EntityName.Split(&apos;.&apos;)[persistentClass.EntityName.Split(&apos;.&apos;).Length - 1]) select new {Name = persistentClass.EntityName, IdName = persistentClass.IdentifierProperty.Name}; foreach (var entity in entitiesToCheck) { EntityPersistenceTest(invalidUpdates, entity.Name, entity.IdName, nop); } } And obviusly the firm of EntityPersistenceTest: private void EntityPersistenceTest(ICollection&lt;string&gt; invalidUpdates, string entityName, string idName, IInterceptor nop) And use: string queryString = string.Format(queryTemplate, idName, entityName); I hope this help somone ...if u understand what i wrote
        </wp:comment_content>
        <wp:comment_approved>
          1
        </wp:comment_approved>
      </wp:comment>
      <wp:comment>
        <wp:comment_id>
          142
        </wp:comment_id>
        <wp:comment_author>
          Giovanni as PadovaBoy
        </wp:comment_author>
        <wp:comment_author_url>
          http://nhforge.org/members/Giovanni-as-PadovaBoy/default.aspx
        </wp:comment_author_url>
        <wp:comment_author_email/>
        <wp:comment_author_IP/>
        <wp:comment_date_gmt>
          2008-12-03 13:02:21
        </wp:comment_date_gmt>
        <wp:comment_content>
          AARGH My post was lost! ARGH. Ok I retry: First: thanks a lot to Fabio
          for another cool peace of code! Second: I have some suggestions: 1) a
          problem with filter in PersistingMappings: i compare something like:
          pippoEntity.Contains(MyNameSpace.Domain.Land.Preferred.Walt.Disney.PippoEntity). Somethins go wrong... so it&apos;s my BRUTAL solution: where entitiesFilter.Contains( persistentClass.EntityName.Split(&apos;.&apos;)[persistentClass.EntityName.Split(&apos;.&apos;).Length - 1]) 2) the Primary Key Name problem: for reason that i don&apos;t understand, i still use &quot;personalize&quot; id name for my entities. Like IdUser, IdBill, IdDrugs... so i change the call of EntityPersistenceTest: if (entitiesFilter == null) { var entitiesToCheck = from persistentClass in _config.ClassMappings select new { Name = persistentClass.EntityName, IdName = persistentClass.IdentifierProperty.Name }; foreach (var entity in entitiesToCheck) { EntityPersistenceTest(invalidUpdates, entity.Name, entity.IdName, nop); } } else { var entitiesToCheck = from persistentClass in _config.ClassMappings where entitiesFilter.Contains( persistentClass.EntityName.Split(&apos;.&apos;)[persistentClass.EntityName.Split(&apos;.&apos;).Length - 1]) select new {Name = persistentClass.EntityName, IdName = persistentClass.IdentifierProperty.Name}; foreach (var entity in entitiesToCheck) { EntityPersistenceTest(invalidUpdates, entity.Name, entity.IdName, nop); } } and obviusly the EntityPersistenceTest itself with the new firm: private void EntityPersistenceTest(ICollection&lt;string&gt; invalidUpdates, string entityName, string idName, IInterceptor nop) And the line of query builder: string queryString = string.Format(queryTemplate, idName, entityName); 3) if u change ur mapping files at Class definition with this: &lt;class name=&quot;MyBill&quot; table=&quot;Bills&quot; lazy=&quot;true&quot; dynamic-update=&quot;true&quot;&gt; With Dinamyc-update=&quot;true&quot; u can see ONLY the FIELD to adjust! I hope this help someone :P 
        </wp:comment_content>
        <wp:comment_approved>
          1
        </wp:comment_approved>
      </wp:comment>
    </item>
    <item>
      <title>
        entity-name in action: a strongly typed entity
      </title>
      <link>
        http://nhibernate.github.io/blogs/nhibernate/archive/2008/10/21/entity-name-in-action-a-strongly-typed-entity.html
      </link>
      <dsq:thread_identifier>
        blogs_nhibernate_archive_2008_10_21_entity-name-in-action-a-strongly-typed-entity
      </dsq:thread_identifier>
      <wp:post_date_gmt>
        2008-10-21 13:18:00
      </wp:post_date_gmt>
    </item>
    <item>
      <title>
        NHibernate.Burrow 1.0.0 CR2 is released!
      </title>
      <link>
        http://nhibernate.github.io/blogs/nhibernate/archive/2008/10/21/nhibernate-burrow-1-0-0-cr2-is-released.html
      </link>
      <dsq:thread_identifier>
        blogs_nhibernate_archive_2008_10_21_nhibernate-burrow-1-0-0-cr2-is-released
      </dsq:thread_identifier>
      <wp:post_date_gmt>
        2008-10-21 19:28:00
      </wp:post_date_gmt>
    </item>
    <item>
      <title>
        Exploring NHibernate Statistics, Part 1: Simple Data Fetching
      </title>
      <link>
        http://nhibernate.github.io/blogs/nhibernate/archive/2008/10/26/exploring-nhibernate-statistics-part-1-simple-data-fetching.html
      </link>
      <dsq:thread_identifier>
        blogs_nhibernate_archive_2008_10_26_exploring-nhibernate-statistics-part-1-simple-data-fetching
      </dsq:thread_identifier>
      <wp:post_date_gmt>
        2008-10-26 18:52:00
      </wp:post_date_gmt>
    </item>
    <item>
      <title>
        Batching NHibernate’s DML Statements
      </title>
      <link>
        http://nhibernate.github.io/blogs/nhibernate/archive/2008/10/27/batching-nhibernate-s-dml-statements.html
      </link>
      <dsq:thread_identifier>
        blogs_nhibernate_archive_2008_10_27_batching-nhibernate-s-dml-statements
      </dsq:thread_identifier>
      <wp:post_date_gmt>
        2008-10-27 15:23:00
      </wp:post_date_gmt>
    </item>
    <item>
      <title>
        Bulk Data Operations With NHibernate&apos;s Stateless Sessions
      </title>
      <link>
        http://nhibernate.github.io/blogs/nhibernate/archive/2008/10/30/bulk-data-operations-with-nhibernate-s-stateless-sessions.html
      </link>
      <dsq:thread_identifier>
        blogs_nhibernate_archive_2008_10_30_bulk-data-operations-with-nhibernate-s-stateless-sessions
      </dsq:thread_identifier>
      <wp:post_date_gmt>
        2008-10-30 20:28:00
      </wp:post_date_gmt>
      <wp:comment>
        <wp:comment_id>
          100
        </wp:comment_id>
        <wp:comment_author>
          Fabio Maulo
        </wp:comment_author>
        <wp:comment_author_url>
          http://nhforge.org/members/fabiomaulo/default.aspx
        </wp:comment_author_url>
        <wp:comment_author_email/>
        <wp:comment_author_IP/>
        <wp:comment_date_gmt>
          2008-10-31 17:54:33
        </wp:comment_date_gmt>
        <wp:comment_content>
          Another way for BulkUpdate without use ADO.NET directly is
          IQuery.ExecuteUpdate() (so far available only for native SQL).
        </wp:comment_content>
        <wp:comment_approved>
          1
        </wp:comment_approved>
      </wp:comment>
      <wp:comment>
        <wp:comment_id>
          160
        </wp:comment_id>
        <wp:comment_author>
          sqhua
        </wp:comment_author>
        <wp:comment_author_url>
          http://nhforge.org/members/sqhua/default.aspx
        </wp:comment_author_url>
        <wp:comment_author_email/>
        <wp:comment_author_IP/>
        <wp:comment_date_gmt>
          2009-02-01 04:36:07
        </wp:comment_date_gmt>
        <wp:comment_content>
          我發現測試數據要超過5W才能體現無狀態Session的優勢： NHibernate.IStatelessSession 無狀態 =
          Sessions.GetStatelessSession(); NHibernate.ISession 有狀態 =
          Sessions.GetSession(); int testNumber = 100000; Stopwatch stopwatch =
          new Stopwatch(); IList&lt;Test&gt; list = new List&lt;Test&gt;(); for
          (int i = 0; i &lt; testNumber; i++) { Test t = new Test(); t.ID = i;
          t.Name = &quot;批量加载&quot; + i.ToString(); list.Add(t); }
          stopwatch.Start(); NHibernate.ITransaction tran =
          無狀態.BeginTransaction(); foreach (Test t in list) 無狀態.Insert(t);
          tran.Commit(); stopwatch.Stop(); lb_insert.Text = &quot;无状态插入:&quot; +
          stopwatch.ElapsedMilliseconds.ToString(); 無狀態.Close(); //list =
          NHHelper&lt;Test&gt;.GetIList(&quot;from Test&quot;); //無狀態 =
          Sessions.GetStatelessSession(); //stopwatch.Reset();
          //stopwatch.Start(); //foreach (Test tmp in list) // 無狀態.Delete(tmp);
          //無狀態.Close(); //stopwatch.Stop(); //lb_delete.Text =
          &quot;无状态刪除:&quot; + stopwatch.ElapsedMilliseconds.ToString();
          list.Clear(); for (int i = 0; i &lt; testNumber; i++) { Test t = new
          Test(); t.ID = i; t.Name = &quot;批量加载&quot; + i.ToString();
          list.Add(t); } stopwatch = new Stopwatch(); stopwatch.Start(); tran =
          有狀態.BeginTransaction(); foreach (Test t in list) 有狀態.Save(t);
          tran.Commit(); stopwatch.Stop(); 有狀態.Close(); lb_insert_old.Text =
          &quot;有状态插入:&quot; + stopwatch.ElapsedMilliseconds.ToString();
          //NHibernate.ISession s2 = Sessions.GetSession(); //stopwatch.Reset();
          //stopwatch.Start(); //有狀態 = Sessions.GetSession(); //tran =
          有狀態.BeginTransaction(); //int r = 有狀態.Delete(&quot;from Test&quot;);
          //tran.Commit(); //有狀態.Close(); //stopwatch.Stop();
          //lb_delete_old.Text = &quot;有状态刪除:&quot; +
          stopwatch.ElapsedMilliseconds.ToString();
        </wp:comment_content>
        <wp:comment_approved>
          1
        </wp:comment_approved>
      </wp:comment>
      <wp:comment>
        <wp:comment_id>
          161
        </wp:comment_id>
        <wp:comment_author>
          sqhua
        </wp:comment_author>
        <wp:comment_author_url>
          http://nhforge.org/members/sqhua/default.aspx
        </wp:comment_author_url>
        <wp:comment_author_email/>
        <wp:comment_author_IP/>
        <wp:comment_date_gmt>
          2009-02-01 04:39:14
        </wp:comment_date_gmt>
        <wp:comment_content>
          如果只有1K或者更少的對象要處理，無狀態的Session比有狀態的還有慢大概2倍的時間
        </wp:comment_content>
        <wp:comment_approved>
          1
        </wp:comment_approved>
      </wp:comment>
    </item>
    <item>
      <title>
        entity-name in action: Entity Abstraction
      </title>
      <link>
        http://nhibernate.github.io/blogs/nhibernate/archive/2008/10/31/entity-name-in-action-entity-abstraction.html
      </link>
      <dsq:thread_identifier>
        blogs_nhibernate_archive_2008_10_31_entity-name-in-action-entity-abstraction
      </dsq:thread_identifier>
      <wp:post_date_gmt>
        2008-10-31 22:53:00
      </wp:post_date_gmt>
      <wp:comment>
        <wp:comment_id>
          122
        </wp:comment_id>
        <wp:comment_author>
          Graham
        </wp:comment_author>
        <wp:comment_author_url>
          http://nhforge.org/members/bunceg/default.aspx
        </wp:comment_author_url>
        <wp:comment_author_email/>
        <wp:comment_author_IP/>
        <wp:comment_date_gmt>
          2008-11-20 11:41:56
        </wp:comment_date_gmt>
        <wp:comment_content>
          I&apos;m struggling with doing exactly this problem and, close as this
          is, it doesn&apos;t solve it. The problem is the requirement to use
          ISET in my domain specific interfaces ... i.e. a link to NHibernate.
          This breaks the rule of persistance ignorance. I could use IList and a
          Bag but I actually don&apos;t want to use IList. I want to use (e.g.)
          IAnimals because IAnimals also exposes some methods specific to
          dealing with Animal collections. I have yet to find a way around this.
          Even creating my own domain collection class that implements
          IList&lt;T&gt; and IList, that Animals inherits from, throws a
          &quot;cannot cast PersistentBag&quot; exception. Any suggestions?
        </wp:comment_content>
        <wp:comment_approved>
          1
        </wp:comment_approved>
      </wp:comment>
      <wp:comment>
        <wp:comment_id>
          123
        </wp:comment_id>
        <wp:comment_author>
          Fabio Maulo
        </wp:comment_author>
        <wp:comment_author_url>
          http://nhforge.org/members/fabiomaulo/default.aspx
        </wp:comment_author_url>
        <wp:comment_author_email/>
        <wp:comment_author_IP/>
        <wp:comment_date_gmt>
          2008-11-20 12:32:09
        </wp:comment_date_gmt>
        <wp:comment_content>
          ISet don&apos;t is a requirement; It is an extension of the .NET FW.
          In .NET3.5 there is a new implementation but, without an interface.
          BTW you can use any kind of implementation if you domain can expose
          ICollection. About &quot;IAnimals&quot; you can implements your own
          IUserCollectionType; this is required if you want use lazy-loading and
          extra-lazy-loading. If you don&apos;t want do it you can map the
          collection with a field accessor and expose what you want in your
          entity.
        </wp:comment_content>
        <wp:comment_approved>
          1
        </wp:comment_approved>
      </wp:comment>
      <wp:comment>
        <wp:comment_id>
          124
        </wp:comment_id>
        <wp:comment_author>
          Fabio Maulo
        </wp:comment_author>
        <wp:comment_author_url>
          http://nhforge.org/members/fabiomaulo/default.aspx
        </wp:comment_author_url>
        <wp:comment_author_email/>
        <wp:comment_author_IP/>
        <wp:comment_date_gmt>
          2008-11-20 12:50:13
        </wp:comment_date_gmt>
        <wp:comment_content>
          Ah... another little thing... the use of ISet don&apos;t require a
          reference to NHibernate assembly but a reference to Iesi.Collections.
        </wp:comment_content>
        <wp:comment_approved>
          1
        </wp:comment_approved>
      </wp:comment>
      <wp:comment>
        <wp:comment_id>
          125
        </wp:comment_id>
        <wp:comment_author>
          bunceg
        </wp:comment_author>
        <wp:comment_author_url>
          http://nhforge.org/members/bunceg/default.aspx
        </wp:comment_author_url>
        <wp:comment_author_email/>
        <wp:comment_author_IP/>
        <wp:comment_date_gmt>
          2008-11-20 14:17:47
        </wp:comment_date_gmt>
        <wp:comment_content>
          Thanks for the reply Fabio. I am really stuck on this, as IList
          extends ICollection so by default IAnimal, which implements IList also
          implements ICollection... unless I misunderstand something
          fundamental. Regardess, even if I added ICollection to IAnimal (e.g.
          IAnimal : IList&lt;T&gt;, IList, ICollection it still didn&apos;t
          work. If you say it does (and I am using .NET 3.5) then at least I
          know I&apos;m making a mistake somewhere, but an update to your
          example doing something like that (i.e. pure OO with Interfaces... no
          dependency on ISet or IUserCollectionType, and using something like
          IAnimals instead of IList or IList&lt;T&gt;) would help me a lot :) In
          my example, IAnimals is implemented by a specialised domain class that
          wraps an internal List&lt;T&gt; by the way. This class implements all
          IList, IList&lt;T&gt;, ICollection, IAnimals interfaces... something
          that I don&apos;t think is too crazy? :) As regards Iesi.Collections
          and IUserCollectionType... I take your point but they are still part
          of the NHibernate API .. hence a dependency on the NHibernate product
          and, a far I consider it, breaks Persistence Ignorance
        </wp:comment_content>
        <wp:comment_approved>
          1
        </wp:comment_approved>
      </wp:comment>
      <wp:comment>
        <wp:comment_id>
          126
        </wp:comment_id>
        <wp:comment_author>
          Fabio Maulo
        </wp:comment_author>
        <wp:comment_author_url>
          http://nhforge.org/members/fabiomaulo/default.aspx
        </wp:comment_author_url>
        <wp:comment_author_email/>
        <wp:comment_author_IP/>
        <wp:comment_date_gmt>
          2008-11-20 15:29:47
        </wp:comment_date_gmt>
        <wp:comment_content>
          I hope that your doctor don&apos;t said you to use ISet. The
          Iesi.Collection.Set is a specialized collection and an implementation
          of something similar is available in .NET3.5 unfortunately without an
          appropriate interface. The use of ISet don&apos;t mean to have a
          reference to NH. You can create the same example of this post using
          IList&lt;T&gt; or ICollection&lt;T&gt; or IEnumerable&lt;T&gt;. About
          IAnimals... do you can send me, in a private mail, two Collections
          interface needed by your domain ? I know various BO FW and I
          don&apos;t saw specialized collection for each collection used in the
          domain. About IUserCollectionType... probably you don&apos;t know what
          it is, because use it don&apos;t mean that you will have a reference
          to NH in your domain.
        </wp:comment_content>
        <wp:comment_approved>
          1
        </wp:comment_approved>
      </wp:comment>
      <wp:comment>
        <wp:comment_id>
          127
        </wp:comment_id>
        <wp:comment_author>
          bunceg
        </wp:comment_author>
        <wp:comment_author_url>
          http://nhforge.org/members/bunceg/default.aspx
        </wp:comment_author_url>
        <wp:comment_author_email/>
        <wp:comment_author_IP/>
        <wp:comment_date_gmt>
          2008-11-21 19:03:33
        </wp:comment_date_gmt>
        <wp:comment_content>
          Thanks Fabio, started a private conversation thread.
        </wp:comment_content>
        <wp:comment_approved>
          1
        </wp:comment_approved>
      </wp:comment>
      <wp:comment>
        <wp:comment_id>
          495
        </wp:comment_id>
        <wp:comment_author>
          Konstantin
        </wp:comment_author>
        <wp:comment_author_url>
          http://nhforge.org/members/wetlook/default.aspx
        </wp:comment_author_url>
        <wp:comment_author_email/>
        <wp:comment_author_IP/>
        <wp:comment_date_gmt>
          2009-08-28 10:48:10
        </wp:comment_date_gmt>
        <wp:comment_content>
          Hello, Fabio! Entity-Name with Poco is the cool stuff. Can i use this
          feature to map one class to the several tables in one hbm.xml? Like
          this: &lt;class entity-name=&quot;ObjectType.TableRecordClass1&quot;
          name=&quot;TableRecordClass&quot;
          table=&quot;DirectoriesSection1&quot;&gt; &lt;id
          name=&quot;Id&quot;&gt; &lt;column name=&quot;Id&quot;
          sql-type=&quot;bigint&quot; not-null=&quot;true&quot; /&gt;
          &lt;generator class=&quot;native&quot;&gt;&lt;/generator&gt;
          &lt;/id&gt; &lt;property name=&quot;Name&quot;&gt; &lt;column
          name=&quot;Name&quot; length=&quot;50&quot; not-null=&quot;true&quot;
          /&gt; &lt;/property&gt; &lt;property name=&quot;Type&quot; /&gt;
          &lt;property name=&quot;ParentId&quot; /&gt; &lt;/class&gt; &lt;class
          entity-name=&quot;ObjectClass.TableRecordClass1&quot;
          name=&quot;TableRecordClass&quot;
          table=&quot;DocumentsSection1&quot;&gt; &lt;id name=&quot;Id&quot;&gt;
          &lt;column name=&quot;Id&quot; sql-type=&quot;bigint&quot;
          not-null=&quot;true&quot; /&gt; &lt;generator
          class=&quot;native&quot;&gt;&lt;/generator&gt; &lt;/id&gt;
          &lt;property name=&quot;Name&quot;&gt; &lt;column
          name=&quot;Name&quot; length=&quot;50&quot; not-null=&quot;true&quot;
          /&gt; &lt;/property&gt; &lt;property name=&quot;Type&quot; /&gt;
          &lt;property name=&quot;ParentId&quot; /&gt; &lt;/class&gt; &lt;class
          entity-name=&quot;ObjectClass.TableRecordClass2&quot;
          name=&quot;TableRecordClass&quot;
          table=&quot;DocumentsSection2&quot;&gt; &lt;id name=&quot;Id&quot;&gt;
          &lt;column name=&quot;Id&quot; sql-type=&quot;bigint&quot;
          not-null=&quot;true&quot; /&gt; &lt;generator
          class=&quot;native&quot;&gt;&lt;/generator&gt; &lt;/id&gt;
          &lt;property name=&quot;Name&quot;&gt; &lt;column
          name=&quot;Name&quot; length=&quot;50&quot; not-null=&quot;true&quot;
          /&gt; &lt;/property&gt; &lt;property name=&quot;Type&quot; /&gt;
          &lt;property name=&quot;ParentId&quot; /&gt; &lt;/class&gt;
        </wp:comment_content>
        <wp:comment_approved>
          1
        </wp:comment_approved>
      </wp:comment>
      <wp:comment>
        <wp:comment_id>
          496
        </wp:comment_id>
        <wp:comment_author>
          Fabio Maulo
        </wp:comment_author>
        <wp:comment_author_url>
          http://nhforge.org/members/fabiomaulo/default.aspx
        </wp:comment_author_url>
        <wp:comment_author_email/>
        <wp:comment_author_IP/>
        <wp:comment_date_gmt>
          2009-08-28 21:40:37
        </wp:comment_date_gmt>
        <wp:comment_content>
          No.
        </wp:comment_content>
        <wp:comment_approved>
          1
        </wp:comment_approved>
      </wp:comment>
    </item>
    <item>
      <title>
        NHibernate.Burrow 1.0.0 GA is released!
      </title>
      <link>
        http://nhibernate.github.io/blogs/nhibernate/archive/2008/11/08/nhibernate-burrow-1-0-0-ga-is-released.html
      </link>
      <dsq:thread_identifier>
        blogs_nhibernate_archive_2008_11_08_nhibernate-burrow-1-0-0-ga-is-released
      </dsq:thread_identifier>
      <wp:post_date_gmt>
        2008-11-08 20:10:00
      </wp:post_date_gmt>
    </item>
    <item>
      <title>
        NH2.1.0: Bytecode providers
      </title>
      <link>
        http://nhibernate.github.io/blogs/nhibernate/archive/2008/11/09/nh2-1-0-bytecode-providers.html
      </link>
      <dsq:thread_identifier>
        blogs_nhibernate_archive_2008_11_09_nh2-1-0-bytecode-providers
      </dsq:thread_identifier>
      <wp:post_date_gmt>
        2008-11-09 15:04:00
      </wp:post_date_gmt>
      <wp:comment>
        <wp:comment_id>
          105
        </wp:comment_id>
        <wp:comment_author>
          Tommaso Caldarola
        </wp:comment_author>
        <wp:comment_author_url>
          http://nhforge.org/members/Tommaso-Caldarola/default.aspx
        </wp:comment_author_url>
        <wp:comment_author_email/>
        <wp:comment_author_IP/>
        <wp:comment_date_gmt>
          2008-11-10 10:13:19
        </wp:comment_date_gmt>
        <wp:comment_content>
          Wow, great feature.
        </wp:comment_content>
        <wp:comment_approved>
          1
        </wp:comment_approved>
      </wp:comment>
      <wp:comment>
        <wp:comment_id>
          226
        </wp:comment_id>
        <wp:comment_author>
          jnoody
        </wp:comment_author>
        <wp:comment_author_url>
          http://
        </wp:comment_author_url>
        <wp:comment_author_email/>
        <wp:comment_author_IP/>
        <wp:comment_date_gmt>
          2009-04-01 20:47:50
        </wp:comment_date_gmt>
        <wp:comment_content>
          Would you mind elaborating as to why one would want to change the
          underlying proxy implementation? I&apos;m not suggesting that
          it&apos;s not nice or even necessary. I am simply trying to understand
          of what benefit this is? It was suggested in the dev google group that
          an example could be seen in NHibernate.ByteCode.Castle.Tests, but I
          still don&apos;t understand. Thanks. 
        </wp:comment_content>
        <wp:comment_approved>
          1
        </wp:comment_approved>
      </wp:comment>
      <wp:comment>
        <wp:comment_id>
          227
        </wp:comment_id>
        <wp:comment_author>
          Fabio Maulo
        </wp:comment_author>
        <wp:comment_author_url>
          http://fabiomaulo.blogspot.com/
        </wp:comment_author_url>
        <wp:comment_author_email/>
        <wp:comment_author_IP/>
        <wp:comment_date_gmt>
          2009-04-01 21:02:14
        </wp:comment_date_gmt>
        <wp:comment_content>
          @jnoody For us the benefit is remove a strong reference to a specific
          implementation of DynamicProxy, this is, may be, the only one benefit
          so far (note &quot;so far&quot;). Who use Castle as IoC, as a lot of
          NH users, have another benefit (Castle and NH now don&apos;t have a
          circular reference). There are others benefit but to large to explain,
          if you want you can start a thread in the nh-user group.
        </wp:comment_content>
        <wp:comment_approved>
          1
        </wp:comment_approved>
      </wp:comment>
      <wp:comment>
        <wp:comment_id>
          228
        </wp:comment_id>
        <wp:comment_author>
          jnoody
        </wp:comment_author>
        <wp:comment_author_url>
          http://
        </wp:comment_author_url>
        <wp:comment_author_email/>
        <wp:comment_author_IP/>
        <wp:comment_date_gmt>
          2009-04-01 21:24:51
        </wp:comment_date_gmt>
        <wp:comment_content>
          Thanks Fabio. Here&apos;s my post:
          http://groups.google.com/group/nhusers/browse_thread/thread/2f78857456bde8d6
        </wp:comment_content>
        <wp:comment_approved>
          1
        </wp:comment_approved>
      </wp:comment>
    </item>
    <item>
      <title>
        NHibernate.Burrow 1.0.1 GA is released! 
      </title>
      <link>
        http://nhibernate.github.io/blogs/nhibernate/archive/2008/11/14/nhibernate-burrow-1-0-1-ga-is-released.html
      </link>
      <dsq:thread_identifier>
        blogs_nhibernate_archive_2008_11_14_nhibernate-burrow-1-0-1-ga-is-released
      </dsq:thread_identifier>
      <wp:post_date_gmt>
        2008-11-14 22:45:00
      </wp:post_date_gmt>
    </item>
    <item>
      <title>
        Mapping Source: How map a class without use nothing
      </title>
      <link>
        http://nhibernate.github.io/blogs/nhibernate/archive/2008/11/16/mapping-source-how-map-a-class-without-use-nothing.html
      </link>
      <dsq:thread_identifier>
        blogs_nhibernate_archive_2008_11_16_mapping-source-how-map-a-class-without-use-nothing
      </dsq:thread_identifier>
      <wp:post_date_gmt>
        2008-11-17 00:13:00
      </wp:post_date_gmt>
      <wp:comment>
        <wp:comment_id>
          114
        </wp:comment_id>
        <wp:comment_author>
          HielkeHoeve
        </wp:comment_author>
        <wp:comment_author_url>
          http://nhforge.org/members/HielkeHoeve/default.aspx
        </wp:comment_author_url>
        <wp:comment_author_email/>
        <wp:comment_author_IP/>
        <wp:comment_date_gmt>
          2008-11-17 11:19:30
        </wp:comment_date_gmt>
        <wp:comment_content>
          It&apos;s also possible to use NHibernate Attributes and then use the
          Configuration and SchemaExport class to map your classes to an sql
          file. You&apos;ll never have to deal with xml files again!!! :D
        </wp:comment_content>
        <wp:comment_approved>
          1
        </wp:comment_approved>
      </wp:comment>
      <wp:comment>
        <wp:comment_id>
          115
        </wp:comment_id>
        <wp:comment_author>
          Fabio Maulo
        </wp:comment_author>
        <wp:comment_author_url>
          http://nhforge.org/members/fabiomaulo/default.aspx
        </wp:comment_author_url>
        <wp:comment_author_email/>
        <wp:comment_author_IP/>
        <wp:comment_date_gmt>
          2008-11-17 11:50:13
        </wp:comment_date_gmt>
        <wp:comment_content>
          NHMA is good but a little bit invasive as any other FW based on
          attributes. NHMA is based on XML generation.
        </wp:comment_content>
        <wp:comment_approved>
          1
        </wp:comment_approved>
      </wp:comment>
    </item>
    <item>
      <title>
        NHibernate SchemaValidator
      </title>
      <link>
        http://nhibernate.github.io/blogs/nhibernate/archive/2008/11/22/nhibernate-schemavalidator.html
      </link>
      <dsq:thread_identifier>
        blogs_nhibernate_archive_2008_11_22_nhibernate-schemavalidator
      </dsq:thread_identifier>
      <wp:post_date_gmt>
        2008-11-22 21:55:00
      </wp:post_date_gmt>
    </item>
    <item>
      <title>
        NHibernate hbm2ddl
      </title>
      <link>
        http://nhibernate.github.io/blogs/nhibernate/archive/2008/11/23/nhibernate-hbm2ddl.html
      </link>
      <dsq:thread_identifier>
        blogs_nhibernate_archive_2008_11_23_nhibernate-hbm2ddl
      </dsq:thread_identifier>
      <wp:post_date_gmt>
        2008-11-22 22:04:00
      </wp:post_date_gmt>
      <wp:comment>
        <wp:comment_id>
          198
        </wp:comment_id>
        <wp:comment_author>
          sushanty2k5
        </wp:comment_author>
        <wp:comment_author_url>
          http://nhforge.org/members/sushanty2k5/default.aspx
        </wp:comment_author_url>
        <wp:comment_author_email/>
        <wp:comment_author_IP/>
        <wp:comment_date_gmt>
          2009-03-15 20:40:39
        </wp:comment_date_gmt>
        <wp:comment_content>
          I&apos;m using Fluent NH for mapping and NH as ORM in my C#
          application.. The problem is with schemaupdate class.. if I create an
          instance of that.. using the configuration I got from my
          exposeconfiguration function.. It doesnot update the schema.. I need
          some better documentation on SchemaUpdate class.. or might be..
          setting the configuration to accomodate the new schema in an old
          database.. for versioning purposes.. I have tried a lot of variations
          but no DDL command is reflected on the actual database using
          SchemaUpdate :( is this my problem:
          http://code.google.com/p/fluent-nhibernate/issues/detail?id=55 ?
        </wp:comment_content>
        <wp:comment_approved>
          1
        </wp:comment_approved>
      </wp:comment>
      <wp:comment>
        <wp:comment_id>
          199
        </wp:comment_id>
        <wp:comment_author>
          Tuna Toksoz
        </wp:comment_author>
        <wp:comment_author_url>
          http://devlicio.us/blogs/tuna_toksoz
        </wp:comment_author_url>
        <wp:comment_author_email/>
        <wp:comment_author_IP/>
        <wp:comment_date_gmt>
          2009-03-15 20:52:43
        </wp:comment_date_gmt>
        <wp:comment_content>
          Hello sushanty2k5 Can you please raise the issue at
          fluent-nhibernate[AT HERE]googlegroups.com I believe this has been
          implemented in FNH but not sure. 
        </wp:comment_content>
        <wp:comment_approved>
          1
        </wp:comment_approved>
      </wp:comment>
      <wp:comment>
        <wp:comment_id>
          203
        </wp:comment_id>
        <wp:comment_author>
          sushanty2k5
        </wp:comment_author>
        <wp:comment_author_url>
          http://nhforge.org/members/sushanty2k5/default.aspx
        </wp:comment_author_url>
        <wp:comment_author_email/>
        <wp:comment_author_IP/>
        <wp:comment_date_gmt>
          2009-03-16 07:24:28
        </wp:comment_date_gmt>
        <wp:comment_content>
          I already have done that.. I just wanted to know how it works.. as
          in.. If I expose the configuration from : private static
          ISessionFactory CreateSessionFactory() { return Fluently.Configure()
          .Database(SQLiteConfiguration.Standard .UsingFile(basefile))
          .Mappings(m =&gt; m.FluentMappings.AddFromAssemblyOf&lt;Program&gt;())
          .ExposeConfiguration(BuildSchema) .BuildSessionFactory(); } and use it
          here : private static void BuildSchema(NHibernate.Cfg.Configuration
          cfg) { config = cfg; } private static void update_the_schema() { new
          SchemaUpdate(config).Execute(true, true); } //Here config is that
          static configuration variable obtained from ExposeConfiguration
          method... 
        </wp:comment_content>
        <wp:comment_approved>
          1
        </wp:comment_approved>
      </wp:comment>
      <wp:comment>
        <wp:comment_id>
          520
        </wp:comment_id>
        <wp:comment_author>
          HappyNomad
        </wp:comment_author>
        <wp:comment_author_url>
          http://happynomad121.blogspot.com/
        </wp:comment_author_url>
        <wp:comment_author_email/>
        <wp:comment_author_IP/>
        <wp:comment_date_gmt>
          2009-10-02 18:28:35
        </wp:comment_date_gmt>
        <wp:comment_content>
          In my tests, the &quot;create-drop&quot; option doesn&apos;t reliably
          drop the tables... Also, does NH support an import.sql file as
          described here?
          http://www.jroller.com/eyallupu/entry/hibernate_s_hbm2ddl_tool 
        </wp:comment_content>
        <wp:comment_approved>
          1
        </wp:comment_approved>
      </wp:comment>
    </item>
    <item>
      <title>
        Populating Entities From Stored Procedures With NHibernate
      </title>
      <link>
        http://nhibernate.github.io/blogs/nhibernate/archive/2008/11/23/populating-entities-from-stored-procedures-with-nhibernate.html
      </link>
      <dsq:thread_identifier>
        blogs_nhibernate_archive_2008_11_23_populating-entities-from-stored-procedures-with-nhibernate
      </dsq:thread_identifier>
      <wp:post_date_gmt>
        2008-11-23 14:37:00
      </wp:post_date_gmt>
    </item>
    <item>
      <title>
        Populating Entities With Associations From Stored Procedures With
        NHibernate
      </title>
      <link>
        http://nhibernate.github.io/blogs/nhibernate/archive/2008/11/24/populating-entities-with-associations-from-stored-procedures-with-nhibernate.html
      </link>
      <dsq:thread_identifier>
        blogs_nhibernate_archive_2008_11_24_populating-entities-with-associations-from-stored-procedures-with-nhibernate
      </dsq:thread_identifier>
      <wp:post_date_gmt>
        2008-11-24 02:27:00
      </wp:post_date_gmt>
      <wp:comment>
        <wp:comment_id>
          627
        </wp:comment_id>
        <wp:comment_author>
          sougandhpavithran
        </wp:comment_author>
        <wp:comment_author_url>
          http://nhforge.org/members/sougandhpavithran/default.aspx
        </wp:comment_author_url>
        <wp:comment_author_email/>
        <wp:comment_author_IP/>
        <wp:comment_date_gmt>
          2010-04-25 03:47:32
        </wp:comment_date_gmt>
        <wp:comment_content>
          Suppose we have a one-to-many relationship between class [product] and
          class [productcategory] defined using an IList. And suppose, we have
          this relationship neatly mapped in our [product.hbm.xml] file. Now,
          will the products fetched using this stored procedure automatically
          hydrate the [productcategories] IList in product class also?
        </wp:comment_content>
        <wp:comment_approved>
          1
        </wp:comment_approved>
      </wp:comment>
      <wp:comment>
        <wp:comment_id>
          636
        </wp:comment_id>
        <wp:comment_author>
          seeriuss
        </wp:comment_author>
        <wp:comment_author_url>
          http://nhforge.org/members/seeriuss/default.aspx
        </wp:comment_author_url>
        <wp:comment_author_email/>
        <wp:comment_author_IP/>
        <wp:comment_date_gmt>
          2010-05-17 20:00:19
        </wp:comment_date_gmt>
        <wp:comment_content>
          I&apos;ve been trying this method, but always seem to get the error
          &apos;errors in named queries&apos;. 
        </wp:comment_content>
        <wp:comment_approved>
          1
        </wp:comment_approved>
      </wp:comment>
    </item>
    <item>
      <title>
        NH with Multiple Assembly versions in GAC
      </title>
      <link>
        http://nhibernate.github.io/blogs/nhibernate/archive/2008/11/27/nh-with-multiple-assembly-versions-in-gac.html
      </link>
      <dsq:thread_identifier>
        blogs_nhibernate_archive_2008_11_27_nh-with-multiple-assembly-versions-in-gac
      </dsq:thread_identifier>
      <wp:post_date_gmt>
        2008-11-27 15:32:00
      </wp:post_date_gmt>
    </item>
    <item>
      <title>
        Entities behavior injection
      </title>
      <link>
        http://nhibernate.github.io/blogs/nhibernate/archive/2008/12/12/entities-behavior-injection.html
      </link>
      <dsq:thread_identifier>
        blogs_nhibernate_archive_2008_12_12_entities-behavior-injection
      </dsq:thread_identifier>
      <wp:post_date_gmt>
        2008-12-12 11:50:00
      </wp:post_date_gmt>
    </item>
    <item>
      <title>
        Customizing Schema Export with schema-action
      </title>
      <link>
        http://nhibernate.github.io/blogs/nhibernate/archive/2008/12/15/customizing-schema-export-with-schema-action.html
      </link>
      <dsq:thread_identifier>
        blogs_nhibernate_archive_2008_12_15_customizing-schema-export-with-schema-action
      </dsq:thread_identifier>
      <wp:post_date_gmt>
        2008-12-16 00:50:00
      </wp:post_date_gmt>
      <wp:comment>
        <wp:comment_id>
          222
        </wp:comment_id>
        <wp:comment_author>
          csokun
        </wp:comment_author>
        <wp:comment_author_url>
          http://chornsokun.wordpress.com/
        </wp:comment_author_url>
        <wp:comment_author_email/>
        <wp:comment_author_IP/>
        <wp:comment_date_gmt>
          2009-03-29 08:37:57
        </wp:comment_date_gmt>
        <wp:comment_content>
          I&apos;ve gone through the NH code but it doesn&apos;t seem to have a
          good explanation for these options and how it affect schema export.
          Could you elaborate a bit more?
        </wp:comment_content>
        <wp:comment_approved>
          1
        </wp:comment_approved>
      </wp:comment>
    </item>
    <item>
      <title>
        Identity: The never ending story
      </title>
      <link>
        http://nhibernate.github.io/blogs/nhibernate/archive/2008/12/21/identity-the-never-ending-story.html
      </link>
      <dsq:thread_identifier>
        blogs_nhibernate_archive_2008_12_21_identity-the-never-ending-story
      </dsq:thread_identifier>
      <wp:post_date_gmt>
        2008-12-21 12:38:00
      </wp:post_date_gmt>
      <wp:comment>
        <wp:comment_id>
          165
        </wp:comment_id>
        <wp:comment_author>
          tobinharris
        </wp:comment_author>
        <wp:comment_author_url>
          http://nhforge.org/members/tobinharris/default.aspx
        </wp:comment_author_url>
        <wp:comment_author_email/>
        <wp:comment_author_IP/>
        <wp:comment_date_gmt>
          2009-02-07 00:10:16
        </wp:comment_date_gmt>
        <wp:comment_content>
          Good points there. Using database-assigned identity is very popular
          because it&apos;s simple. What&apos;s your favourite alternative? I
          like GUIDs because they&apos;re unique across servers, and
          master-master replication-proof. But ugly to look at :) Hi-Lo seems
          good too, but harder to set up. 
        </wp:comment_content>
        <wp:comment_approved>
          1
        </wp:comment_approved>
      </wp:comment>
      <wp:comment>
        <wp:comment_id>
          166
        </wp:comment_id>
        <wp:comment_author>
          Fabio Maulo
        </wp:comment_author>
        <wp:comment_author_url>
          http://nhforge.org/members/fabiomaulo/default.aspx
        </wp:comment_author_url>
        <wp:comment_author_email/>
        <wp:comment_author_IP/>
        <wp:comment_date_gmt>
          2009-02-07 05:23:10
        </wp:comment_date_gmt>
        <wp:comment_content>
          It depend on the app and my customer preference. Personally I prefer
          HiLo, where possible, or guid.comb. BTW the war is lost... I know it
          and for that soon you will see some unexpected feature implementations
          &quot;identity oriented&quot;.
        </wp:comment_content>
        <wp:comment_approved>
          1
        </wp:comment_approved>
      </wp:comment>
      <wp:comment>
        <wp:comment_id>
          167
        </wp:comment_id>
        <wp:comment_author>
          tobinharris
        </wp:comment_author>
        <wp:comment_author_url>
          http://nhforge.org/members/tobinharris/default.aspx
        </wp:comment_author_url>
        <wp:comment_author_email/>
        <wp:comment_author_IP/>
        <wp:comment_date_gmt>
          2009-02-07 13:42:17
        </wp:comment_date_gmt>
        <wp:comment_content>
          How do you mean &quot;identity oriented&quot;? Are you saying that
          identity is on it&apos;s way out?
        </wp:comment_content>
        <wp:comment_approved>
          1
        </wp:comment_approved>
      </wp:comment>
      <wp:comment>
        <wp:comment_id>
          168
        </wp:comment_id>
        <wp:comment_author>
          Fabio Maulo
        </wp:comment_author>
        <wp:comment_author_url>
          http://nhforge.org/members/fabiomaulo/default.aspx
        </wp:comment_author_url>
        <wp:comment_author_email/>
        <wp:comment_author_IP/>
        <wp:comment_date_gmt>
          2009-02-07 14:40:07
        </wp:comment_date_gmt>
        <wp:comment_content>
          be patient
        </wp:comment_content>
        <wp:comment_approved>
          1
        </wp:comment_approved>
      </wp:comment>
      <wp:comment>
        <wp:comment_id>
          213
        </wp:comment_id>
        <wp:comment_author>
          Stefan Steinegger
        </wp:comment_author>
        <wp:comment_author_url>
          http://nhforge.org/members/ssteinegger/default.aspx
        </wp:comment_author_url>
        <wp:comment_author_email/>
        <wp:comment_author_IP/>
        <wp:comment_date_gmt>
          2009-03-19 09:57:10
        </wp:comment_date_gmt>
        <wp:comment_content>
          I&apos;m starting to understand. We are using identity all over the
          place. I&apos;m considering to replace it some day. Does it make any
          difference if you store (also insert) entities using Merge?
        </wp:comment_content>
        <wp:comment_approved>
          1
        </wp:comment_approved>
      </wp:comment>
    </item>
    <item>
      <title>
        Typesafe ICriteria using Lambda Expressions
      </title>
      <link>
        http://nhibernate.github.io/blogs/nhibernate/archive/2009/01/07/typesafe-icriteria-using-lambda-expressions.html
      </link>
      <dsq:thread_identifier>
        blogs_nhibernate_archive_2009_01_07_typesafe-icriteria-using-lambda-expressions
      </dsq:thread_identifier>
      <wp:post_date_gmt>
        2009-01-07 10:08:00
      </wp:post_date_gmt>
      <wp:comment>
        <wp:comment_id>
          150
        </wp:comment_id>
        <wp:comment_author>
          bunceg
        </wp:comment_author>
        <wp:comment_author_url>
          http://nhforge.org/members/bunceg/default.aspx
        </wp:comment_author_url>
        <wp:comment_author_email/>
        <wp:comment_author_IP/>
        <wp:comment_date_gmt>
          2009-01-12 16:49:24
        </wp:comment_date_gmt>
        <wp:comment_content>
          Nice idea, thanks!
        </wp:comment_content>
        <wp:comment_approved>
          1
        </wp:comment_approved>
      </wp:comment>
      <wp:comment>
        <wp:comment_id>
          154
        </wp:comment_id>
        <wp:comment_author>
          ssteinegger
        </wp:comment_author>
        <wp:comment_author_url>
          http://nhforge.org/members/ssteinegger/default.aspx
        </wp:comment_author_url>
        <wp:comment_author_email/>
        <wp:comment_author_IP/>
        <wp:comment_date_gmt>
          2009-01-27 12:31:32
        </wp:comment_date_gmt>
        <wp:comment_content>
          Looks great. But how can you find out which property is meant by the
          lamda expression? I thought that it is not possible to &quot;see&quot;
          the content of an expression, that you only can execute it. (This
          would return the value of the property, not its name or PropertyInfo)
          By the way, the Documentation link is broken somehow. It tries to
          download it. (Same on your project page.)
        </wp:comment_content>
        <wp:comment_approved>
          1
        </wp:comment_approved>
      </wp:comment>
      <wp:comment>
        <wp:comment_id>
          155
        </wp:comment_id>
        <wp:comment_author>
          Richard Brown
        </wp:comment_author>
        <wp:comment_author_url>
          http://broloco.blogspot.com/
        </wp:comment_author_url>
        <wp:comment_author_email/>
        <wp:comment_author_IP/>
        <wp:comment_date_gmt>
          2009-01-27 12:42:38
        </wp:comment_date_gmt>
        <wp:comment_content>
          ssteinegger, LambdaExpressions are not evaluated until runtime, so you
          are able to retrieve the PropertyInfo at runtime too. The docs are
          hosted from the Google Project downloads sections - Google adds a
          host-header that makes IE prompt for download, but you should still
          just be able to &apos;open&apos; it (it&apos;s just a regular HTML
          page).
        </wp:comment_content>
        <wp:comment_approved>
          1
        </wp:comment_approved>
      </wp:comment>
      <wp:comment>
        <wp:comment_id>
          169
        </wp:comment_id>
        <wp:comment_author>
          ssteinegger
        </wp:comment_author>
        <wp:comment_author_url>
          http://nhforge.org/members/ssteinegger/default.aspx
        </wp:comment_author_url>
        <wp:comment_author_email/>
        <wp:comment_author_IP/>
        <wp:comment_date_gmt>
          2009-02-09 19:21:48
        </wp:comment_date_gmt>
        <wp:comment_content>
          This is pretty cool. I have to try it for my mapping tester
          configuration, where I use property names in strings. Docs: I&apos;m
          using Firefox. I can choose Firefox as the application to open the
          file, but then I see the HTML tags. 
        </wp:comment_content>
        <wp:comment_approved>
          1
        </wp:comment_approved>
      </wp:comment>
      <wp:comment>
        <wp:comment_id>
          171
        </wp:comment_id>
        <wp:comment_author>
          Richard Brown
        </wp:comment_author>
        <wp:comment_author_url>
          http://broloco.blogspot.com/
        </wp:comment_author_url>
        <wp:comment_author_email/>
        <wp:comment_author_IP/>
        <wp:comment_date_gmt>
          2009-02-09 22:38:26
        </wp:comment_date_gmt>
        <wp:comment_content>
          Ah, sorry, I can&apos;t control how the Google downloads return the
          headers. I tried it in Firefox, and if you save it to disk you&apos;re
          fine. Also the docs are in the .zip download too; the separate
          download is just for convenience.
        </wp:comment_content>
        <wp:comment_approved>
          1
        </wp:comment_approved>
      </wp:comment>
    </item>
    <item>
      <title>
        NHibernate and Future Queries
      </title>
      <link>
        http://nhibernate.github.io/blogs/nhibernate/archive/2009/01/25/nhibernate-and-future-queries.html
      </link>
      <dsq:thread_identifier>
        blogs_nhibernate_archive_2009_01_25_nhibernate-and-future-queries
      </dsq:thread_identifier>
      <wp:post_date_gmt>
        2009-01-25 12:08:00
      </wp:post_date_gmt>
      <wp:comment>
        <wp:comment_id>
          152
        </wp:comment_id>
        <wp:comment_author>
          Giovanni
        </wp:comment_author>
        <wp:comment_author_url>
          http://nhforge.org/members/PadovaBoy/default.aspx
        </wp:comment_author_url>
        <wp:comment_author_email/>
        <wp:comment_author_IP/>
        <wp:comment_date_gmt>
          2009-01-26 10:36:50
        </wp:comment_date_gmt>
        <wp:comment_content>
          Simply Wonderful! Guys ur the bests! Tnx!
        </wp:comment_content>
        <wp:comment_approved>
          1
        </wp:comment_approved>
      </wp:comment>
      <wp:comment>
        <wp:comment_id>
          153
        </wp:comment_id>
        <wp:comment_author>
          ssteinegger
        </wp:comment_author>
        <wp:comment_author_url>
          http://nhforge.org/members/ssteinegger/default.aspx
        </wp:comment_author_url>
        <wp:comment_author_email/>
        <wp:comment_author_IP/>
        <wp:comment_date_gmt>
          2009-01-27 10:44:00
        </wp:comment_date_gmt>
        <wp:comment_content>
          Looks awful. But how can you find out which property is meant by the
          lamda expression? I thought that it is not possible to &quot;see&quot;
          the content of an expression, that you only can execute it. (This
          would return the value of the property, not its name or PropertyInfo)
        </wp:comment_content>
        <wp:comment_approved>
          1
        </wp:comment_approved>
      </wp:comment>
    </item>
    <item>
      <title>
        Future&amp;lt;T&amp;gt; Queries with HQL and Criteria
      </title>
      <link>
        http://nhibernate.github.io/blogs/nhibernate/archive/2009/01/30/futuret_2D00_queries_2D00_with_2D00_hql_2D00_and_2D00_criteria.html
      </link>
      <dsq:thread_identifier>
        blogs_nhibernate_archive_2009_01_30_futuret_2D00_queries_2D00_with_2D00_hql_2D00_and_2D00_criteria
      </dsq:thread_identifier>
      <wp:post_date_gmt>
        2009-01-30 16:10:00
      </wp:post_date_gmt>
      <wp:comment>
        <wp:comment_id>
          164
        </wp:comment_id>
        <wp:comment_author>
          tobinharris
        </wp:comment_author>
        <wp:comment_author_url>
          http://nhforge.org/members/tobinharris/default.aspx
        </wp:comment_author_url>
        <wp:comment_author_email/>
        <wp:comment_author_IP/>
        <wp:comment_date_gmt>
          2009-02-07 00:04:24
        </wp:comment_date_gmt>
        <wp:comment_content>
          Awesome :) That&apos;s a really good explanation of the Future pattern
          too.
        </wp:comment_content>
        <wp:comment_approved>
          1
        </wp:comment_approved>
      </wp:comment>
      <wp:comment>
        <wp:comment_id>
          183
        </wp:comment_id>
        <wp:comment_author>
          Carlos Peix
        </wp:comment_author>
        <wp:comment_author_url>
          http://nhforge.org/members/cpeix/default.aspx
        </wp:comment_author_url>
        <wp:comment_author_email/>
        <wp:comment_author_IP/>
        <wp:comment_date_gmt>
          2009-02-27 20:38:27
        </wp:comment_date_gmt>
        <wp:comment_content>
          Hi Dario, nice example. Glad to see your English is getting better as
          well :-)
        </wp:comment_content>
        <wp:comment_approved>
          1
        </wp:comment_approved>
      </wp:comment>
    </item>
    <item>
      <title>
        NHibernate in Action Book is Out!
      </title>
      <link>
        http://nhibernate.github.io/blogs/nhibernate/archive/2009/02/06/nhibernate-in-action-book-is-out.html
      </link>
      <dsq:thread_identifier>
        blogs_nhibernate_archive_2009_02_06_nhibernate-in-action-book-is-out
      </dsq:thread_identifier>
      <wp:post_date_gmt>
        2009-02-06 06:40:00
      </wp:post_date_gmt>
      <wp:comment>
        <wp:comment_id>
          582
        </wp:comment_id>
        <wp:comment_author>
          davidpizon
        </wp:comment_author>
        <wp:comment_author_url>
          http://nhforge.org/members/davidpizon/default.aspx
        </wp:comment_author_url>
        <wp:comment_author_email/>
        <wp:comment_author_IP/>
        <wp:comment_date_gmt>
          2009-12-22 17:31:17
        </wp:comment_date_gmt>
        <wp:comment_content>
          Does anyone have any other book recommendations? I&apos;m looking into
          this book but would also like to hear about any other NHibernate
          books.
        </wp:comment_content>
        <wp:comment_approved>
          1
        </wp:comment_approved>
      </wp:comment>
      <wp:comment>
        <wp:comment_id>
          583
        </wp:comment_id>
        <wp:comment_author>
          bunceg
        </wp:comment_author>
        <wp:comment_author_url>
          http://
        </wp:comment_author_url>
        <wp:comment_author_email/>
        <wp:comment_author_IP/>
        <wp:comment_date_gmt>
          2009-12-22 17:42:21
        </wp:comment_date_gmt>
        <wp:comment_content>
          Google (Bing) is your friend... Detailed documentation on NH is
          sparse. There are lots of blogs but its always hard to find stuff
          later (this site is an example... loads of useful stuff in blogs but
          not alot in a way that&apos;s easy to correlate with each other).
          Biggest problem for NH IMO.... and most open source TBH. Programmers
          don&apos;t like writing docs.
        </wp:comment_content>
        <wp:comment_approved>
          1
        </wp:comment_approved>
      </wp:comment>
      <wp:comment>
        <wp:comment_id>
          587
        </wp:comment_id>
        <wp:comment_author>
          lending
        </wp:comment_author>
        <wp:comment_author_url>
          http://nhforge.org/members/lending/default.aspx
        </wp:comment_author_url>
        <wp:comment_author_email/>
        <wp:comment_author_IP/>
        <wp:comment_date_gmt>
          2010-01-04 08:32:51
        </wp:comment_date_gmt>
        <wp:comment_content>
          what this book is about?
        </wp:comment_content>
        <wp:comment_approved>
          1
        </wp:comment_approved>
      </wp:comment>
    </item>
    <item>
      <title>
        uNHaddins Persistence Conversation – Part 1: Configuration
      </title>
      <link>
        http://nhibernate.github.io/blogs/nhibernate/archive/2009/02/06/unhaddins-persistence-conversation-part-1-configuration.html
      </link>
      <dsq:thread_identifier>
        blogs_nhibernate_archive_2009_02_06_unhaddins-persistence-conversation-part-1-configuration
      </dsq:thread_identifier>
      <wp:post_date_gmt>
        2009-02-06 16:33:00
      </wp:post_date_gmt>
    </item>
    <item>
      <title>
        Quickly Setting Up And Using NHibernate&apos;s Second Level Cache
      </title>
      <link>
        http://nhibernate.github.io/blogs/nhibernate/archive/2009/02/09/quickly-setting-up-and-using-nhibernate-s-second-level-cache.html
      </link>
      <dsq:thread_identifier>
        blogs_nhibernate_archive_2009_02_09_quickly-setting-up-and-using-nhibernate-s-second-level-cache
      </dsq:thread_identifier>
      <wp:post_date_gmt>
        2009-02-09 22:19:00
      </wp:post_date_gmt>
    </item>
    <item>
      <title>
        NH2.1.0: New generators
      </title>
      <link>
        http://nhibernate.github.io/blogs/nhibernate/archive/2009/02/09/nh2-1-0-new-generators.html
      </link>
      <dsq:thread_identifier>
        blogs_nhibernate_archive_2009_02_09_nh2-1-0-new-generators
      </dsq:thread_identifier>
      <wp:post_date_gmt>
        2009-02-10 00:12:00
      </wp:post_date_gmt>
      <wp:comment>
        <wp:comment_id>
          342
        </wp:comment_id>
        <wp:comment_author>
          zoechi
        </wp:comment_author>
        <wp:comment_author_url>
          http://nhforge.org/members/zoechi/default.aspx
        </wp:comment_author_url>
        <wp:comment_author_email/>
        <wp:comment_author_IP/>
        <wp:comment_date_gmt>
          2009-05-30 13:28:26
        </wp:comment_date_gmt>
        <wp:comment_content>
          I wonder while the HiLo generator is working in such a weird way. The
          next_hi column is incremented only by 1 no matter which value is set
          for max_lo. The generated ids are somewhat of a multiply of next_hi
          and max_lo. Why isn&apos;t the the last reserved id or alternatively
          the next available id stored in the HiLo table next_hi column
          incremented by max_lo on each access? This way it would be easy to
          share the number sequence for id generation with other applications
          sharing the same database. The max_lo may be set differently in each
          class mapping file. Which one is effectively taken for the calculation
          of the generated id? I have found very few posts complaining about
          this (the first one about 2004) and consider it a bug, as I do. I
          wonder why this isn&apos;t a problem for more other NHibernate users. 
        </wp:comment_content>
        <wp:comment_approved>
          1
        </wp:comment_approved>
      </wp:comment>
      <wp:comment>
        <wp:comment_id>
          394
        </wp:comment_id>
        <wp:comment_author>
          swtmin
        </wp:comment_author>
        <wp:comment_author_url>
          http://
        </wp:comment_author_url>
        <wp:comment_author_email/>
        <wp:comment_author_IP/>
        <wp:comment_date_gmt>
          2009-06-26 21:29:09
        </wp:comment_date_gmt>
        <wp:comment_content>
          I have tried using trigger-identity with Oracle, and the SQL generated
          is missing the RETURNING keyword, so it fails. Example: INSERT INTO
          BANK_ACK_FILE (DATA, UPLOAD_ID, SUB_TYPE_ID, ENTITY_ID, DATA_TYPE_ID)
          VALUES (:p0, :p1, :p2, :p3, :p4);:p0 = &apos;Iz in your bank ack
          phile. Now can haz loan?&apos;, :p1 = 1, :p2 = 2006, :p3 = 3070, :p4 =
          1019, :nhIdOutParam = NULL Note the presence of the Id out parameter,
          but again the RETURNING syntax is missing. Mapping file has: &lt;id
          name=&quot;Id&quot; column=&quot;ID&quot; type=&quot;Int64&quot;&gt;
          &lt;generator class=&quot;trigger-identity&quot;&gt;
          &lt;/generator&gt; &lt;/id&gt; Am I doing something wrong, or is this
          a bug?
        </wp:comment_content>
        <wp:comment_approved>
          1
        </wp:comment_approved>
      </wp:comment>
      <wp:comment>
        <wp:comment_id>
          396
        </wp:comment_id>
        <wp:comment_author>
          swtmin
        </wp:comment_author>
        <wp:comment_author_url>
          http://
        </wp:comment_author_url>
        <wp:comment_author_email/>
        <wp:comment_author_IP/>
        <wp:comment_date_gmt>
          2009-06-26 22:32:55
        </wp:comment_date_gmt>
        <wp:comment_content>
          Should probably have include my config: &lt;?xml
          version=&quot;1.0&quot; encoding=&quot;utf-8&quot; ?&gt;
          &lt;hibernate-configuration
          xmlns=&quot;urn:nhibernate-configuration-2.2&quot; &gt;
          &lt;session-factory&gt; &lt;property
          name=&quot;connection.provider&quot;&gt;NHibernate.Connection.DriverConnectionProvider&lt;/property&gt; &lt;property name=&quot;connection.driver_class&quot;&gt;NHibernate.Driver.OracleDataClientDriver&lt;/property&gt; &lt;property name=&quot;connection.connection_string&quot;&gt;Data Source=dev;User ID=xxxx;password=******;Connection Timeout=45;Max Pool Size=25;Incr Pool Size=2; Decr Pool Size=2&lt;/property&gt; &lt;property name=&quot;show_sql&quot;&gt;false&lt;/property&gt; &lt;property name=&quot;dialect&quot;&gt;NHibernate.Dialect.Oracle10gDialect&lt;/property&gt; &lt;property name=&quot;connection.release_mode&quot;&gt;after_transaction&lt;/property&gt; &lt;property name=&quot;proxyfactory.factory_class&quot;&gt;NHibernate.ByteCode.Castle.ProxyFactoryFactory, NHibernate.ByteCode.Castle&lt;/property&gt; &lt;mapping assembly=&quot;Sfs.Efc.Core.DataModel&quot;/&gt; &lt;/session-factory&gt; &lt;/hibernate-configuration&gt;
        </wp:comment_content>
        <wp:comment_approved>
          1
        </wp:comment_approved>
      </wp:comment>
    </item>
    <item>
      <title>
        uNHAddins Persistence Conversation – Part 2: Configuring the
        conversation
      </title>
      <link>
        http://nhibernate.github.io/blogs/nhibernate/archive/2009/02/10/unhaddins-persistence-conversation-part-2-configuring-the-conversation.html
      </link>
      <dsq:thread_identifier>
        blogs_nhibernate_archive_2009_02_10_unhaddins-persistence-conversation-part-2-configuring-the-conversation
      </dsq:thread_identifier>
      <wp:post_date_gmt>
        2009-02-10 07:17:00
      </wp:post_date_gmt>
    </item>
    <item>
      <title>
        NH-Forge News
      </title>
      <link>
        http://nhibernate.github.io/blogs/nhibernate/archive/2009/02/15/nh-forge-news.html
      </link>
      <dsq:thread_identifier>
        blogs_nhibernate_archive_2009_02_15_nh-forge-news
      </dsq:thread_identifier>
      <wp:post_date_gmt>
        2009-02-15 17:47:00
      </wp:post_date_gmt>
    </item>
    <item>
      <title>
        NHibernate.Validator: fluent-interface configuration
      </title>
      <link>
        http://nhibernate.github.io/blogs/nhibernate/archive/2009/02/18/nhibernate-validator-fluent-interface-configuration.html
      </link>
      <dsq:thread_identifier>
        blogs_nhibernate_archive_2009_02_18_nhibernate-validator-fluent-interface-configuration
      </dsq:thread_identifier>
      <wp:post_date_gmt>
        2009-02-18 15:00:00
      </wp:post_date_gmt>
    </item>
    <item>
      <title>
        NHibernate.Burrow 1.0.2 GA is released!
      </title>
      <link>
        http://nhibernate.github.io/blogs/nhibernate/archive/2009/02/19/nhibernate-burrow-1-0-2-ga-is-released.html
      </link>
      <dsq:thread_identifier>
        blogs_nhibernate_archive_2009_02_19_nhibernate-burrow-1-0-2-ga-is-released
      </dsq:thread_identifier>
      <wp:post_date_gmt>
        2009-02-19 21:10:00
      </wp:post_date_gmt>
      <wp:comment>
        <wp:comment_id>
          373
        </wp:comment_id>
        <wp:comment_author>
          africazheng
        </wp:comment_author>
        <wp:comment_author_url>
          http://nhforge.org/members/africazheng/default.aspx
        </wp:comment_author_url>
        <wp:comment_author_email/>
        <wp:comment_author_IP/>
        <wp:comment_date_gmt>
          2009-06-15 08:19:09
        </wp:comment_date_gmt>
        <wp:comment_content>
          hi,Burrow is great. And now I have a question about burrow when I used
          it in my asp.net project. I use jquery post a asp.net form to save
          some info, just like the following: $(document).ready(function() { var
          options = { beforeSubmit: showRequest, success: showResponse, url:
          &quot;Handler/AddCustomerHandler.ashx&quot;, data:
          {func:&quot;SaveCustomer&quot;} };
          $(&apos;#aspnetForm&apos;).submit(function() {
          $(this).ajaxSubmit(options); }); }); n the ashx file,I need access
          form data and save them.when I just save the Customer (use
          customerDao),it&apos;s success.But when I save the Customer info and
          save Customer phone info in the save time( use CustomerDao and
          CustoemrPhoneDao),the page client can not access any response text.
          public void ProcessRequest(HttpContext context) {
          ..................................... if (function ==
          &quot;SaveCustomer&quot;) { Customer customer = SaveCustomer(context);
          context.Response.Write(customer.Serialno.ToString() + &quot; - &quot;
          + customer.Name); } ............................. } private Customer
          SaveCustomer(HttpContext context) { string customerName =
          context.Request.Form[&quot;customer_name&quot;]; string
          customerCategory =
          context.Request.Form[&quot;customer_category&quot;];
          .............................. //set some properties
          ................................... CustomerDao customerDao = new
          CustomerDao(); customerDao.Save(customer); CustomerPhoneDao phoneDao =
          new CustomerPhoneDao(); CustomerPhone phone = new CustomerPhone();
          .......................... set some properties
          ........................................ phone.Customer = customer;
          phoneDao.Save(phone); return customer; } btw: at unit test ,the same
          time to save two entity is passed.So I have no idea now ~ 
        </wp:comment_content>
        <wp:comment_approved>
          1
        </wp:comment_approved>
      </wp:comment>
      <wp:comment>
        <wp:comment_id>
          374
        </wp:comment_id>
        <wp:comment_author>
          kailuowang
        </wp:comment_author>
        <wp:comment_author_url>
          http://nhforge.org/members/kailuowang/default.aspx
        </wp:comment_author_url>
        <wp:comment_author_email/>
        <wp:comment_author_IP/>
        <wp:comment_date_gmt>
          2009-06-15 14:05:22
        </wp:comment_date_gmt>
        <wp:comment_content>
          africazheng, you have to make sure that you see error messages. In
          your unit test, did you use Burrow? If not please do. please check
          burrow faq for how. 
        </wp:comment_content>
        <wp:comment_approved>
          1
        </wp:comment_approved>
      </wp:comment>
      <wp:comment>
        <wp:comment_id>
          588
        </wp:comment_id>
        <wp:comment_author>
          Banks
        </wp:comment_author>
        <wp:comment_author_url>
          http://nhforge.org/members/Banks/default.aspx
        </wp:comment_author_url>
        <wp:comment_author_email/>
        <wp:comment_author_IP/>
        <wp:comment_date_gmt>
          2010-01-04 23:26:36
        </wp:comment_date_gmt>
        <wp:comment_content>
          Documentation and examples are available at http://NHForge.net
        </wp:comment_content>
        <wp:comment_approved>
          1
        </wp:comment_approved>
      </wp:comment>
    </item>
    <item>
      <title>
        Encrypting password (or other strings) in NHibernate
      </title>
      <link>
        http://nhibernate.github.io/blogs/nhibernate/archive/2009/02/22/encrypting-password-or-other-strings-in-nhibernate.html
      </link>
      <dsq:thread_identifier>
        blogs_nhibernate_archive_2009_02_22_encrypting-password-or-other-strings-in-nhibernate
      </dsq:thread_identifier>
      <wp:post_date_gmt>
        2009-02-22 05:18:00
      </wp:post_date_gmt>
    </item>
    <item>
      <title>
        uNHAddins conversation additions
      </title>
      <link>
        http://nhibernate.github.io/blogs/nhibernate/archive/2009/02/22/unhaddins-conversation-additions.html
      </link>
      <dsq:thread_identifier>
        blogs_nhibernate_archive_2009_02_22_unhaddins-conversation-additions
      </dsq:thread_identifier>
      <wp:post_date_gmt>
        2009-02-22 05:18:00
      </wp:post_date_gmt>
    </item>
    <item>
      <title>
        NHibernate HQL AST Parser
      </title>
      <link>
        http://nhibernate.github.io/blogs/nhibernate/archive/2009/02/22/nhibernate_2D00_hql_2D00_ast_2D00_parser.html
      </link>
      <dsq:thread_identifier>
        blogs_nhibernate_archive_2009_02_22_nhibernate_2D00_hql_2D00_ast_2D00_parser
      </dsq:thread_identifier>
      <wp:post_date_gmt>
        2009-02-22 20:12:58
      </wp:post_date_gmt>
    </item>
    <item>
      <title>
        Diving in NHibernate.Validator
      </title>
      <link>
        http://nhibernate.github.io/blogs/nhibernate/archive/2009/02/26/diving-in-nhibernate-validator.html
      </link>
      <dsq:thread_identifier>
        blogs_nhibernate_archive_2009_02_26_diving-in-nhibernate-validator
      </dsq:thread_identifier>
      <wp:post_date_gmt>
        2009-02-26 14:46:00
      </wp:post_date_gmt>
    </item>
    <item>
      <title>
        Rolling out an update of Castle just got a whole lot easier
      </title>
      <link>
        http://nhibernate.github.io/blogs/nhibernate/archive/2009/03/02/rolling-out-an-update-of-castle-just-got-a-whole-lot-easier.html
      </link>
      <dsq:thread_identifier>
        blogs_nhibernate_archive_2009_03_02_rolling-out-an-update-of-castle-just-got-a-whole-lot-easier
      </dsq:thread_identifier>
      <wp:post_date_gmt>
        2009-03-02 21:36:00
      </wp:post_date_gmt>
    </item>
    <item>
      <title>
        NHibernate with Spring.NET
      </title>
      <link>
        http://nhibernate.github.io/blogs/nhibernate/archive/2009/03/03/nhibernate-with-spring-net.html
      </link>
      <dsq:thread_identifier>
        blogs_nhibernate_archive_2009_03_03_nhibernate-with-spring-net
      </dsq:thread_identifier>
      <wp:post_date_gmt>
        2009-03-03 21:00:00
      </wp:post_date_gmt>
    </item>
    <item>
      <title>
        NHibernate and Ms Sql Server 2008: Date, Time, DateTime2 and
        DateTimeOffset
      </title>
      <link>
        http://nhibernate.github.io/blogs/nhibernate/archive/2009/03/11/nhibernate-and-ms-sql-server-2008-date-time-datetime2-and-datetimeoffset.html
      </link>
      <dsq:thread_identifier>
        blogs_nhibernate_archive_2009_03_11_nhibernate-and-ms-sql-server-2008-date-time-datetime2-and-datetimeoffset
      </dsq:thread_identifier>
      <wp:post_date_gmt>
        2009-03-12 00:44:00
      </wp:post_date_gmt>
    </item>
    <item>
      <title>
        Registering FREETEXT or CONTAINS functions into a NHibernate dialect
      </title>
      <link>
        http://nhibernate.github.io/blogs/nhibernate/archive/2009/03/13/registering-freetext-or-contains-functions-into-a-nhibernate-dialect.html
      </link>
      <dsq:thread_identifier>
        blogs_nhibernate_archive_2009_03_13_registering-freetext-or-contains-functions-into-a-nhibernate-dialect
      </dsq:thread_identifier>
      <wp:post_date_gmt>
        2009-03-13 13:04:00
      </wp:post_date_gmt>
      <wp:comment>
        <wp:comment_id>
          395
        </wp:comment_id>
        <wp:comment_author>
          jobou
        </wp:comment_author>
        <wp:comment_author_url>
          http://nhforge.org/members/jobou/default.aspx
        </wp:comment_author_url>
        <wp:comment_author_email/>
        <wp:comment_author_IP/>
        <wp:comment_date_gmt>
          2009-06-26 21:30:36
        </wp:comment_date_gmt>
        <wp:comment_content>
          Hi, I have tried to use Nhibernate ( 2.1.0.1001 ) and ActiveRecord
          (1.0.3) to use Sql Server 2005 Full-Text Search just like you are
          using it but I receive an error and I cannot fix it. I think that the
          SQL function are not registered because I receive the same error if I
          put the dialect MsSql2005Dialect to my custom dialect or my custom
          dialect. ERROR : NHibernate.QueryException : Incorrect query syntax
          [FROM ChronoSteril.Application.Model.Instrument as Instrument where
          contains(Instrument.DescriptionEnFrancais,&apos;something&apos;)]
          ----&gt; System.ArgumentOutOfRangeException : Index was out of range.
          Must be non-negative and less than the size of the collection.
          Parameter name: index at
          NHibernate.Hql.Classic.QueryTranslator.Compile() at
          NHibernate.Hql.Classic.QueryTranslator.Compile(IDictionary`2
          replacements, Boolean scalar) at
          NHibernate.Engine.Query.HQLQueryPlan..ctor(String hql, String
          collectionRole, Boolean shallow, IDictionary`2 enabledFilters,
          ISessionFactoryImplementor factory) at
          NHibernate.Engine.Query.QueryPlanCache.GetHQLQueryPlan(String
          queryString, Boolean shallow, IDictionary`2 enabledFilters) at
          NHibernate.Impl.AbstractSessionImpl.GetHQLQueryPlan(String query,
          Boolean shallow) at
          NHibernate.Impl.AbstractSessionImpl.CreateQuery(String queryString)
          C:\jbouillon\ATMS\trunk\ChronoSteril.NET\ChronoSteril.Application.IntegrationTests\Repositories\InstrumentRepositoryFixture.cs(189,0): at ChronoSteril.Application.IntegrationTests.Repositories.InstrumentRepositoryFixture.FindInstrumentFts(String searchString) C:\jbouillon\ATMS\trunk\ChronoSteril.NET\ChronoSteril.Application.IntegrationTests\Repositories\InstrumentRepositoryFixture.cs(175,0): at ChronoSteril.Application.IntegrationTests.Repositories.InstrumentRepositoryFixture.FindFtsByDescription_avec_recherche_par_description_en_anglais_lorsque_existe_1_instrument_et_1_instruments_correspond_a_la_recherche_expect_retourne_1_instrument() --ArgumentOutOfRangeException at System.ThrowHelper.ThrowArgumentOutOfRangeException(ExceptionArgument argument, ExceptionResource resource) at System.ThrowHelper.ThrowArgumentOutOfRangeException() at System.Collections.Generic.List`1.get_Item(Int32 index) at NHibernate.Hql.Classic.WhereParser.CloseExpression(QueryTranslator q, String lcToken) at NHibernate.Hql.Classic.WhereParser.Token(String token, QueryTranslator q) at NHibernate.Hql.Classic.WhereParser.End(QueryTranslator q) at NHibernate.Hql.Classic.ClauseParser.EndChild(QueryTranslator q) at NHibernate.Hql.Classic.ClauseParser.End(QueryTranslator q) at NHibernate.Hql.Classic.PreprocessingParser.End(QueryTranslator q) at NHibernate.Hql.Classic.ParserHelper.Parse(IParser p, String text, String seperators, QueryTranslator q) at NHibernate.Hql.Classic.QueryTranslator.Compile() ---------------------------------------------------------------------------- public static IList FindInstrumentFts(string searchString) { ISession session = ActiveRecordMediator.GetSessionFactoryHolder().CreateSession(typeof (Instrument)); session.CreateQuery(&quot;FROM Instrument as Instrument where contains(Instrument.DescriptionEnFrancais,&apos;something&apos;)&quot;) .List(); } ---------------------------------------------------------------------- using NHibernate.Dialect; using NHibernate.Dialect.Function; namespace ChronoSteril.Application.IntegrationTests { public class SQLServer2005DialectWithFTS : MsSql2005Dialect { public SQLServer2005DialectWithFTS() { RegisterFunction(&quot;freetext&quot;, new StandardSQLFunction(&quot;freetext&quot;, null)); RegisterFunction(&quot;contains&quot;, new StandardSQLFunction(&quot;contains&quot;, null)); } } } ------------------------------------------------------------------ 
        </wp:comment_content>
        <wp:comment_approved>
          1
        </wp:comment_approved>
      </wp:comment>
      <wp:comment>
        <wp:comment_id>
          399
        </wp:comment_id>
        <wp:comment_author>
          Dario Quintana
        </wp:comment_author>
        <wp:comment_author_url>
          http://nhforge.org/members/darioquintana/default.aspx
        </wp:comment_author_url>
        <wp:comment_author_email/>
        <wp:comment_author_IP/>
        <wp:comment_date_gmt>
          2009-07-01 19:15:39
        </wp:comment_date_gmt>
        <wp:comment_content>
          I see you&apos;re using the Classic-Query-Translator and it&apos;s
          working this feature for that case:
          https://nhibernate.svn.sourceforge.net/svnroot/nhibernate/trunk/nhibernate/src/NHibernate.Test/NHSpecificTest/NH645/HQLFunctionFixture.cs If you still getting problems with this, submit a ticket to our Jira: jira.nhforge.org
        </wp:comment_content>
        <wp:comment_approved>
          1
        </wp:comment_approved>
      </wp:comment>
      <wp:comment>
        <wp:comment_id>
          536
        </wp:comment_id>
        <wp:comment_author>
          mhnyborg
        </wp:comment_author>
        <wp:comment_author_url>
          http://nhforge.org/members/mhnyborg/default.aspx
        </wp:comment_author_url>
        <wp:comment_author_email/>
        <wp:comment_author_IP/>
        <wp:comment_date_gmt>
          2009-10-26 19:59:48
        </wp:comment_date_gmt>
        <wp:comment_content>
          Is it possible to use CONTAINSTABLE and RANK with HQL. The native sql
          goes like this: string sql = string.Format(@&quot;SELECT * FROM
          tblSite AS S inner join tblStatus ST on S.CalculatedStatusId =
          ST.StatusId INNER JOIN CONTAINSTABLE (tblSite, ({0}), :SearchString)
          AS KEY_TBL ON S.siteId = KEY_TBL.[KEY] WHERE KEY_TBL.RANK &gt; 10
          ORDER BY KEY_TBL.RANK DESC&quot;, searchFields); the tblSite and
          tblStatus is mapped. The problem is the KEY_TBL created from the
          CONTAINSTABLE function. Hope you can help. The end goal is to have the
          result mapped to class Sitebase.
        </wp:comment_content>
        <wp:comment_approved>
          1
        </wp:comment_approved>
      </wp:comment>
    </item>
    <item>
      <title>
        An improvement on SessionFactory Initialization
      </title>
      <link>
        http://nhibernate.github.io/blogs/nhibernate/archive/2009/03/13/an-improvement-on-sessionfactory-initialization.html
      </link>
      <dsq:thread_identifier>
        blogs_nhibernate_archive_2009_03_13_an-improvement-on-sessionfactory-initialization
      </dsq:thread_identifier>
      <wp:post_date_gmt>
        2009-03-13 19:18:00
      </wp:post_date_gmt>
      <wp:comment>
        <wp:comment_id>
          192
        </wp:comment_id>
        <wp:comment_author>
          Jonathon Rossi
        </wp:comment_author>
        <wp:comment_author_url>
          http://
        </wp:comment_author_url>
        <wp:comment_author_email/>
        <wp:comment_author_IP/>
        <wp:comment_date_gmt>
          2009-03-14 07:40:16
        </wp:comment_date_gmt>
        <wp:comment_content>
          I updated NHibernate on the Castle trunk to r4123 a few days ago. I
          can&apos;t see any since then you would need.
        </wp:comment_content>
        <wp:comment_approved>
          1
        </wp:comment_approved>
      </wp:comment>
      <wp:comment>
        <wp:comment_id>
          193
        </wp:comment_id>
        <wp:comment_author>
          Tuna Toksoz
        </wp:comment_author>
        <wp:comment_author_url>
          http://nhforge.org/members/tehlike/default.aspx
        </wp:comment_author_url>
        <wp:comment_author_email/>
        <wp:comment_author_IP/>
        <wp:comment_date_gmt>
          2009-03-14 09:45:21
        </wp:comment_date_gmt>
        <wp:comment_content>
          I should have missed this, Jonathon. Thanks for the information!
        </wp:comment_content>
        <wp:comment_approved>
          1
        </wp:comment_approved>
      </wp:comment>
      <wp:comment>
        <wp:comment_id>
          194
        </wp:comment_id>
        <wp:comment_author>
          Tuna Toksoz
        </wp:comment_author>
        <wp:comment_author_url>
          http://devlicio.us/blogs/tuna_toksoz
        </wp:comment_author_url>
        <wp:comment_author_email/>
        <wp:comment_author_IP/>
        <wp:comment_date_gmt>
          2009-03-14 21:31:59
        </wp:comment_date_gmt>
        <wp:comment_content>
          I have committed the changes. Thank you Jonathon!
        </wp:comment_content>
        <wp:comment_approved>
          1
        </wp:comment_approved>
      </wp:comment>
      <wp:comment>
        <wp:comment_id>
          371
        </wp:comment_id>
        <wp:comment_author>
          antoschka
        </wp:comment_author>
        <wp:comment_author_url>
          http://
        </wp:comment_author_url>
        <wp:comment_author_email/>
        <wp:comment_author_IP/>
        <wp:comment_date_gmt>
          2009-06-13 11:57:29
        </wp:comment_date_gmt>
        <wp:comment_content>
          you didn&apos;t explain much about the way how accelerated the
          startup, in a scenario not using castle. What do you mean by
          &quot;serialization of configuration&quot;. Could you explain a little
          more on that. I face a lot of problems during startup of an
          application. I still use hbms for mapping (seperate ones for each
          entity). What do you recommand to speed up the starting process?
          Thanks for your reply antoschka
        </wp:comment_content>
        <wp:comment_approved>
          1
        </wp:comment_approved>
      </wp:comment>
      <wp:comment>
        <wp:comment_id>
          372
        </wp:comment_id>
        <wp:comment_author>
          Tuna Toksoz
        </wp:comment_author>
        <wp:comment_author_url>
          http://tunatoksoz.com
        </wp:comment_author_url>
        <wp:comment_author_email/>
        <wp:comment_author_IP/>
        <wp:comment_date_gmt>
          2009-06-13 12:02:35
        </wp:comment_date_gmt>
        <wp:comment_content>
          Hi @antoschka This is not specific to castle. All you need is to have
          a configuration that has mappings loaded, then you&apos;ll need to
          serialize it into a file. This is for the first time. Later all you
          need to do is deserialize the configuration and you&apos;ll be good to
          go.
        </wp:comment_content>
        <wp:comment_approved>
          1
        </wp:comment_approved>
      </wp:comment>
      <wp:comment>
        <wp:comment_id>
          862
        </wp:comment_id>
        <wp:comment_author>
          hace
        </wp:comment_author>
        <wp:comment_author_url>
          http://www.mellekoning.nl
        </wp:comment_author_url>
        <wp:comment_author_email/>
        <wp:comment_author_IP/>
        <wp:comment_date_gmt>
          2011-04-11 11:43:21
        </wp:comment_date_gmt>
        <wp:comment_content>
          Small issue in the code above: FileInfo dependency = new
          FileInfo(dependencies); should be: FileInfo dependency = new
          FileInfo(dependencies[i]);
        </wp:comment_content>
        <wp:comment_approved>
          1
        </wp:comment_approved>
      </wp:comment>
    </item>
    <item>
      <title>
        NHibernate 2.1.0 on the road
      </title>
      <link>
        http://nhibernate.github.io/blogs/nhibernate/archive/2009/03/15/nhibernate-2-1-0-on-the-road.html
      </link>
      <dsq:thread_identifier>
        blogs_nhibernate_archive_2009_03_15_nhibernate-2-1-0-on-the-road
      </dsq:thread_identifier>
      <wp:post_date_gmt>
        2009-03-15 13:29:00
      </wp:post_date_gmt>
      <wp:comment>
        <wp:comment_id>
          200
        </wp:comment_id>
        <wp:comment_author>
          lb008d
        </wp:comment_author>
        <wp:comment_author_url>
          http://nhforge.org/members/lb008d/default.aspx
        </wp:comment_author_url>
        <wp:comment_author_email/>
        <wp:comment_author_IP/>
        <wp:comment_date_gmt>
          2009-03-15 23:06:39
        </wp:comment_date_gmt>
        <wp:comment_content>
          I just downloaded this to hopefully fix a bug I&apos;m experiencing
          (NH-1297) and the &quot;Required_Bins&quot; directory has
          &quot;NHibernate.Test.dll&quot; in it instead of
          &quot;NHibernate.dll&quot; Going to compile from source ...
        </wp:comment_content>
        <wp:comment_approved>
          1
        </wp:comment_approved>
      </wp:comment>
      <wp:comment>
        <wp:comment_id>
          201
        </wp:comment_id>
        <wp:comment_author>
          Fabio Maulo
        </wp:comment_author>
        <wp:comment_author_url>
          http://nhforge.org/members/fabiomaulo/default.aspx
        </wp:comment_author_url>
        <wp:comment_author_email/>
        <wp:comment_author_IP/>
        <wp:comment_date_gmt>
          2009-03-16 03:54:38
        </wp:comment_date_gmt>
        <wp:comment_content>
          fixed thanks.
        </wp:comment_content>
        <wp:comment_approved>
          1
        </wp:comment_approved>
      </wp:comment>
      <wp:comment>
        <wp:comment_id>
          202
        </wp:comment_id>
        <wp:comment_author>
          lb008d
        </wp:comment_author>
        <wp:comment_author_url>
          http://nhforge.org/members/lb008d/default.aspx
        </wp:comment_author_url>
        <wp:comment_author_email/>
        <wp:comment_author_IP/>
        <wp:comment_date_gmt>
          2009-03-16 05:33:48
        </wp:comment_date_gmt>
        <wp:comment_content>
          Thanks Fabio!
        </wp:comment_content>
        <wp:comment_approved>
          1
        </wp:comment_approved>
      </wp:comment>
      <wp:comment>
        <wp:comment_id>
          205
        </wp:comment_id>
        <wp:comment_author>
          Paulo Roberto Quicoli
        </wp:comment_author>
        <wp:comment_author_url>
          http://nhforge.org/members/quicoli/default.aspx
        </wp:comment_author_url>
        <wp:comment_author_email/>
        <wp:comment_author_IP/>
        <wp:comment_date_gmt>
          2009-03-16 11:55:23
        </wp:comment_date_gmt>
        <wp:comment_content>
          thanks!!!!
        </wp:comment_content>
        <wp:comment_approved>
          1
        </wp:comment_approved>
      </wp:comment>
    </item>
    <item>
      <title>
        NHibernate Validator 1.2 alpha1 released
      </title>
      <link>
        http://nhibernate.github.io/blogs/nhibernate/archive/2009/03/16/nhibernate-validator-1-2-alpha1-released.html
      </link>
      <dsq:thread_identifier>
        blogs_nhibernate_archive_2009_03_16_nhibernate-validator-1-2-alpha1-released
      </dsq:thread_identifier>
      <wp:post_date_gmt>
        2009-03-16 13:35:00
      </wp:post_date_gmt>
    </item>
    <item>
      <title>
        NHibernate POID Generators revealed
      </title>
      <link>
        http://nhibernate.github.io/blogs/nhibernate/archive/2009/03/20/nhibernate-poid-generators-revealed.html
      </link>
      <dsq:thread_identifier>
        blogs_nhibernate_archive_2009_03_20_nhibernate-poid-generators-revealed
      </dsq:thread_identifier>
      <wp:post_date_gmt>
        2009-03-20 07:49:00
      </wp:post_date_gmt>
      <wp:comment>
        <wp:comment_id>
          216
        </wp:comment_id>
        <wp:comment_author>
          Paulo Roberto Quicoli
        </wp:comment_author>
        <wp:comment_author_url>
          http://nhforge.org/members/quicoli/default.aspx
        </wp:comment_author_url>
        <wp:comment_author_email/>
        <wp:comment_author_IP/>
        <wp:comment_date_gmt>
          2009-03-20 11:43:47
        </wp:comment_date_gmt>
        <wp:comment_content>
          Greate explanation !
        </wp:comment_content>
        <wp:comment_approved>
          1
        </wp:comment_approved>
      </wp:comment>
      <wp:comment>
        <wp:comment_id>
          217
        </wp:comment_id>
        <wp:comment_author>
          mhnyborg
        </wp:comment_author>
        <wp:comment_author_url>
          http://nhforge.org/members/mhnyborg/default.aspx
        </wp:comment_author_url>
        <wp:comment_author_email/>
        <wp:comment_author_IP/>
        <wp:comment_date_gmt>
          2009-03-20 15:16:09
        </wp:comment_date_gmt>
        <wp:comment_content>
          I have googled for an implementation of seghilo and witout success.
          Can use show me the table structure and the extra code you need to
          write to make it work. Thanks
        </wp:comment_content>
        <wp:comment_approved>
          1
        </wp:comment_approved>
      </wp:comment>
      <wp:comment>
        <wp:comment_id>
          218
        </wp:comment_id>
        <wp:comment_author>
          Tuna Toksoz
        </wp:comment_author>
        <wp:comment_author_url>
          http://nhforge.org/members/tehlike/default.aspx
        </wp:comment_author_url>
        <wp:comment_author_email/>
        <wp:comment_author_IP/>
        <wp:comment_date_gmt>
          2009-03-20 21:43:21
        </wp:comment_date_gmt>
        <wp:comment_content>
          @Paulo Thanks @mhnyborg Try setting your generator class in the
          mapping to &lt;generator class=&quot;hilo&quot;/&gt;. NH should create
          the table.
        </wp:comment_content>
        <wp:comment_approved>
          1
        </wp:comment_approved>
      </wp:comment>
      <wp:comment>
        <wp:comment_id>
          219
        </wp:comment_id>
        <wp:comment_author>
          Tolomaus
        </wp:comment_author>
        <wp:comment_author_url>
          http://nhforge.org/members/Tolomaus/default.aspx
        </wp:comment_author_url>
        <wp:comment_author_email/>
        <wp:comment_author_IP/>
        <wp:comment_date_gmt>
          2009-03-21 23:06:58
        </wp:comment_date_gmt>
        <wp:comment_content>
          Hi Tuna, &gt; each Save results in an insert statement against DB I
          don&apos;t have the NHibernate code around at the moment, but I&apos;m
          in the impression that in one of the recent versions a Persist()
          method was added to the session API, in accordance with the java
          version. Calling this method instead of Save() on a transient entity
          should delay the insert statement to where it actually belongs: at
          commit time. Here is the link to the java API:
          http://www.hibernate.org/hib_docs/v3/api/org/hibernate/Session.html
          The identity being the default PK in many databases, it should be easy
          to use in NHibernate in my opinion. Kind regards, Tolomaüs
        </wp:comment_content>
        <wp:comment_approved>
          1
        </wp:comment_approved>
      </wp:comment>
      <wp:comment>
        <wp:comment_id>
          221
        </wp:comment_id>
        <wp:comment_author>
          Tobin Harris
        </wp:comment_author>
        <wp:comment_author_url>
          http://nhforge.org/members/tobinharris/default.aspx
        </wp:comment_author_url>
        <wp:comment_author_email/>
        <wp:comment_author_IP/>
        <wp:comment_date_gmt>
          2009-03-23 14:33:26
        </wp:comment_date_gmt>
        <wp:comment_content>
          Clear post, and I loved the extra detail on the index fragmentation. I
          hadn&apos;t considered that. 
        </wp:comment_content>
        <wp:comment_approved>
          1
        </wp:comment_approved>
      </wp:comment>
      <wp:comment>
        <wp:comment_id>
          232
        </wp:comment_id>
        <wp:comment_author>
          ro.ferraris
        </wp:comment_author>
        <wp:comment_author_url>
          http://nhforge.org/members/ro.ferraris/default.aspx
        </wp:comment_author_url>
        <wp:comment_author_email/>
        <wp:comment_author_IP/>
        <wp:comment_date_gmt>
          2009-04-07 09:36:02
        </wp:comment_date_gmt>
        <wp:comment_content>
          Hi Tuna, First of all thanks for the very interesting post. After that
          a question about HiLo. I&apos;ve used it in a project where the DBMS
          is MySql and all work well as long as I use
          NHibernate.ISession.BeginTransaction, but when in a particular case I
          use a SysstemTransaction.TransacitonScope the HiLo doesn&apos;t work.
          In fact during a save operation I receive a InvalidOperationException
          &quot;Nested transactions are not supported&quot;. It&apos;s possible
          to use HiLo in this context? In NH source code I found that
          TableGenerator.Generate method make an exception for SQLLite in
          creating a new Transaction, do you think it&apos;s possible to include
          a control about the use of TransactionScope in this method? Best
          Regards
        </wp:comment_content>
        <wp:comment_approved>
          1
        </wp:comment_approved>
      </wp:comment>
      <wp:comment>
        <wp:comment_id>
          233
        </wp:comment_id>
        <wp:comment_author>
          Tuna Toksoz
        </wp:comment_author>
        <wp:comment_author_url>
          http://nhforge.org/members/tehlike/default.aspx
        </wp:comment_author_url>
        <wp:comment_author_email/>
        <wp:comment_author_IP/>
        <wp:comment_date_gmt>
          2009-04-07 15:21:28
        </wp:comment_date_gmt>
        <wp:comment_content>
          Hi ro.ferraris Which version of NH are you using? I don&apos;t have a
          mysql running under my hands, but we haven&apos;t heard any problems
          so far. 
        </wp:comment_content>
        <wp:comment_approved>
          1
        </wp:comment_approved>
      </wp:comment>
      <wp:comment>
        <wp:comment_id>
          239
        </wp:comment_id>
        <wp:comment_author>
          ro.ferraris
        </wp:comment_author>
        <wp:comment_author_url>
          http://nhforge.org/members/ro.ferraris/default.aspx
        </wp:comment_author_url>
        <wp:comment_author_email/>
        <wp:comment_author_IP/>
        <wp:comment_date_gmt>
          2009-04-08 08:20:46
        </wp:comment_date_gmt>
        <wp:comment_content>
          Hi Tune, currently I&apos;m using 1.2.0.3002. The problem is MySql in
          conjunction with the use of a TransactionScope. MySQL doesn&apos;t
          support nested transactions, and creating a new connection in a
          current TransactionScope automatically add it to the TransactionScope,
          the following new transaction is nested in the one used in
          TransactionScope, so the error from MySQL. Yesterday I&apos;ve
          implemented a custom generator copying HiloGenerator and
          TableGenerator and simply turning off the connection generation in
          Generate method, like for SQLLite. I&apos;m trying to investigate if
          there is a method to exclude a Connection from a TransactionScope,
          because I understand that theorretically is right to generate new Ids
          in a separate transaction, but I don&apos;t know if thati is possible.
          Thanks for the answer. Roby
        </wp:comment_content>
        <wp:comment_approved>
          1
        </wp:comment_approved>
      </wp:comment>
      <wp:comment>
        <wp:comment_id>
          242
        </wp:comment_id>
        <wp:comment_author>
          Tuna Toksoz
        </wp:comment_author>
        <wp:comment_author_url>
          http://nhforge.org/members/tehlike/default.aspx
        </wp:comment_author_url>
        <wp:comment_author_email/>
        <wp:comment_author_IP/>
        <wp:comment_date_gmt>
          2009-04-08 15:21:39
        </wp:comment_date_gmt>
        <wp:comment_content>
          1.2. is pretty old and there have been some improvements on NH
          regarding to transaction scope. Can you try if it is a problem with
          2.1(the trunk)? BTW, in your generator, you can access to connection
          provider( don&apos;t remember the exact name) or you can get the
          connection and open a new connection so that it will be outside of the
          transaction thingy.
        </wp:comment_content>
        <wp:comment_approved>
          1
        </wp:comment_approved>
      </wp:comment>
      <wp:comment>
        <wp:comment_id>
          245
        </wp:comment_id>
        <wp:comment_author>
          ro.ferraris
        </wp:comment_author>
        <wp:comment_author_url>
          http://nhforge.org/members/ro.ferraris/default.aspx
        </wp:comment_author_url>
        <wp:comment_author_email/>
        <wp:comment_author_IP/>
        <wp:comment_date_gmt>
          2009-04-09 07:49:22
        </wp:comment_date_gmt>
        <wp:comment_content>
          Thank Tuna for the answer. At the momento I use this workaround of
          custom generator because I&apos;ve a deadline, but I think that for
          the next week I can do some other attempt (also trying NH 2.1) and I
          soon as possible I&apos;ll let you know about it. Kind Regards, Roby 
        </wp:comment_content>
        <wp:comment_approved>
          1
        </wp:comment_approved>
      </wp:comment>
      <wp:comment>
        <wp:comment_id>
          264
        </wp:comment_id>
        <wp:comment_author>
          ro.ferraris
        </wp:comment_author>
        <wp:comment_author_url>
          http://nhforge.org/members/ro.ferraris/default.aspx
        </wp:comment_author_url>
        <wp:comment_author_email/>
        <wp:comment_author_IP/>
        <wp:comment_date_gmt>
          2009-04-17 09:33:21
        </wp:comment_date_gmt>
        <wp:comment_content>
          Hi Tuna, I&apos;ve produced a sample solution that use NH 2.0.1 and
          the behaviour is the same. The use of a TransactionScope is
          incompatible with HiLo generator when using MySQL as a database. To
          solve this problem I&apos;ve changed the Generate method of
          NHibernate.Id.TableGenerator changing bool isSQLite =
          session.Factory.Dialect is SQLiteDialect; in bool dontUseNewConnection
          = session.Factory.Dialect is SQLiteDialect || session.Factory.Dialect
          is MySQLDialect &amp;&amp; System.Transactions.Transaction.Current !=
          null; I don&apos;t know if this could be a general solution, but in my
          case it works. Do you think it is better to open a new issue on
          NHibernate? Kind Regards, Roby 
        </wp:comment_content>
        <wp:comment_approved>
          1
        </wp:comment_approved>
      </wp:comment>
      <wp:comment>
        <wp:comment_id>
          265
        </wp:comment_id>
        <wp:comment_author>
          Tuna Toksoz
        </wp:comment_author>
        <wp:comment_author_url>
          http://nhforge.org/members/tehlike/default.aspx
        </wp:comment_author_url>
        <wp:comment_author_email/>
        <wp:comment_author_IP/>
        <wp:comment_date_gmt>
          2009-04-17 16:20:27
        </wp:comment_date_gmt>
        <wp:comment_content>
          Hi Roby, Yes, please create a jira for that.
        </wp:comment_content>
        <wp:comment_approved>
          1
        </wp:comment_approved>
      </wp:comment>
      <wp:comment>
        <wp:comment_id>
          408
        </wp:comment_id>
        <wp:comment_author>
          Steve Strong
        </wp:comment_author>
        <wp:comment_author_url>
          http://nhforge.org/members/srstrong/default.aspx
        </wp:comment_author_url>
        <wp:comment_author_email/>
        <wp:comment_author_IP/>
        <wp:comment_date_gmt>
          2009-07-14 18:19:25
        </wp:comment_date_gmt>
        <wp:comment_content>
          We normally use GUIDs, and aim for sequential ones where possible
          since the index fragmentation is a real killer on high throughput
          systems. However, does anyone have a good GUID generation strategy
          when there are multiple app servers? Obviously a post-insert approach
          would work, but we&apos;d like to avoid that for all the reasons
          stated above. Currently, we have a GUID generation service that is
          shared between all of the app servers, but it is clearly a single
          point of failure...
        </wp:comment_content>
        <wp:comment_approved>
          1
        </wp:comment_approved>
      </wp:comment>
      <wp:comment>
        <wp:comment_id>
          1000
        </wp:comment_id>
        <wp:comment_author>
          Maxim
        </wp:comment_author>
        <wp:comment_author_url>
          http://nhforge.org/members/Maxim/default.aspx
        </wp:comment_author_url>
        <wp:comment_author_email/>
        <wp:comment_author_IP/>
        <wp:comment_date_gmt>
          2011-11-07 22:49:36
        </wp:comment_date_gmt>
        <wp:comment_content>
          I would like very much to use &quot;hilo&quot; generator but there is
          no any example how to create &quot;specific&quot; table and which
          values pass to it. &lt;id name=&quot;Id&quot; &gt; &lt;column
          name=&quot;CatId&quot; sql-type=&quot;Int64&quot;
          not-null=&quot;true&quot;/&gt; &lt;generator
          class=&quot;hilo&quot;/&gt; &lt;/id&gt; Doesn&apos;t create anything
          in the database. Guid.Comb - gives 96% of fragmentation when I added
          in a loop 20K cat objects (from your tutorial). Could you please make
          an example of &quot;hilo&quot; implementation? Thanks.
        </wp:comment_content>
        <wp:comment_approved>
          1
        </wp:comment_approved>
      </wp:comment>
    </item>
    <item>
      <title>
        NH-1711 – Inappropriate error handling with NH 2.1 Alpha 1 when
        distributed transaction fails can cause application crashes
      </title>
      <link>
        http://nhibernate.github.io/blogs/nhibernate/archive/2009/03/22/nh_2D00_1711_2D00_ndash_2D00_inappropriate_2D00_error_2D00_handling_2D00_with_2D00_nh_2D00_2.1_2D00_alpha_2D00_1.html
      </link>
      <dsq:thread_identifier>
        blogs_nhibernate_archive_2009_03_22_nh_2D00_1711_2D00_ndash_2D00_inappropriate_2D00_error_2D00_handling_2D00_with_2D00_nh_2D00_2.1_2D00_alpha_2D00_1
      </dsq:thread_identifier>
      <wp:post_date_gmt>
        2009-03-22 14:23:22
      </wp:post_date_gmt>
    </item>
    <item>
      <title>
        NHibernate 2.1.0.Alpha2 is released
      </title>
      <link>
        http://nhibernate.github.io/blogs/nhibernate/archive/2009/03/29/nhibernate-2-1-0-alpha2-is-released.html
      </link>
      <dsq:thread_identifier>
        blogs_nhibernate_archive_2009_03_29_nhibernate-2-1-0-alpha2-is-released
      </dsq:thread_identifier>
      <wp:post_date_gmt>
        2009-03-29 17:01:00
      </wp:post_date_gmt>
      <wp:comment>
        <wp:comment_id>
          225
        </wp:comment_id>
        <wp:comment_author>
          Dario Quintana
        </wp:comment_author>
        <wp:comment_author_url>
          http://nhforge.org/members/darioquintana/default.aspx
        </wp:comment_author_url>
        <wp:comment_author_email/>
        <wp:comment_author_IP/>
        <wp:comment_date_gmt>
          2009-03-29 19:56:43
        </wp:comment_date_gmt>
        <wp:comment_content>
          This is an updated table with the date/time types, check it out.
          http://nhforge.org/blogs/nhibernate/archive/2009/03/11/nhibernate-and-ms-sql-server-2008-date-time-datetime2-and-datetimeoffset.aspx
        </wp:comment_content>
        <wp:comment_approved>
          1
        </wp:comment_approved>
      </wp:comment>
    </item>
    <item>
      <title>
        NHibernate Validator 1.2 alpha3
      </title>
      <link>
        http://nhibernate.github.io/blogs/nhibernate/archive/2009/03/29/nhibernate-validator-1-2-alpha3.html
      </link>
      <dsq:thread_identifier>
        blogs_nhibernate_archive_2009_03_29_nhibernate-validator-1-2-alpha3
      </dsq:thread_identifier>
      <wp:post_date_gmt>
        2009-03-29 19:47:00
      </wp:post_date_gmt>
    </item>
    <item>
      <title>
        NHibernate Validator and Asp.Net MVC
      </title>
      <link>
        http://nhibernate.github.io/blogs/nhibernate/archive/2009/04/02/nhibernate-validator-and-asp-net-mvc.html
      </link>
      <dsq:thread_identifier>
        blogs_nhibernate_archive_2009_04_02_nhibernate-validator-and-asp-net-mvc
      </dsq:thread_identifier>
      <wp:post_date_gmt>
        2009-04-03 00:07:00
      </wp:post_date_gmt>
    </item>
    <item>
      <title>
        Ensuring updates on Flush
      </title>
      <link>
        http://nhibernate.github.io/blogs/nhibernate/archive/2009/04/03/ensuring-updates-on-flush.html
      </link>
      <dsq:thread_identifier>
        blogs_nhibernate_archive_2009_04_03_ensuring-updates-on-flush
      </dsq:thread_identifier>
      <wp:post_date_gmt>
        2009-04-03 15:01:00
      </wp:post_date_gmt>
    </item>
    <item>
      <title>
        NHibernate Mapping - &amp;lt;property/&amp;gt;
      </title>
      <link>
        http://nhibernate.github.io/blogs/nhibernate/archive/2009/04/08/nhibernate-mapping-lt-property-gt.html
      </link>
      <dsq:thread_identifier>
        blogs_nhibernate_archive_2009_04_08_nhibernate-mapping-lt-property-gt
      </dsq:thread_identifier>
      <wp:post_date_gmt>
        2009-04-08 02:07:13
      </wp:post_date_gmt>
      <wp:comment>
        <wp:comment_id>
          240
        </wp:comment_id>
        <wp:comment_author>
          ssteinegger
        </wp:comment_author>
        <wp:comment_author_url>
          http://nhforge.org/members/ssteinegger/default.aspx
        </wp:comment_author_url>
        <wp:comment_author_email/>
        <wp:comment_author_IP/>
        <wp:comment_date_gmt>
          2009-04-08 09:32:04
        </wp:comment_date_gmt>
        <wp:comment_content>
          Thanks a lot Ayende! I&apos;m looking forward to your next mapping
          blog :-)
        </wp:comment_content>
        <wp:comment_approved>
          1
        </wp:comment_approved>
      </wp:comment>
      <wp:comment>
        <wp:comment_id>
          241
        </wp:comment_id>
        <wp:comment_author>
          YJingLee
        </wp:comment_author>
        <wp:comment_author_url>
          http://nhforge.org/members/YJingLee/default.aspx
        </wp:comment_author_url>
        <wp:comment_author_email/>
        <wp:comment_author_IP/>
        <wp:comment_date_gmt>
          2009-04-08 12:36:17
        </wp:comment_date_gmt>
        <wp:comment_content>
          Thanks you post
        </wp:comment_content>
        <wp:comment_approved>
          1
        </wp:comment_approved>
      </wp:comment>
      <wp:comment>
        <wp:comment_id>
          244
        </wp:comment_id>
        <wp:comment_author>
          Kytto
        </wp:comment_author>
        <wp:comment_author_url>
          http://
        </wp:comment_author_url>
        <wp:comment_author_email/>
        <wp:comment_author_IP/>
        <wp:comment_date_gmt>
          2009-04-09 07:31:00
        </wp:comment_date_gmt>
        <wp:comment_content>
          There is some difference about performance if the optional parameters
          are specified or not? For example is it better specified every time
          the type, column, insert, update..., also are like the default? Until
          now I explicit everything because if the default change between two
          version my mapping continue to work, but only for this. 
        </wp:comment_content>
        <wp:comment_approved>
          1
        </wp:comment_approved>
      </wp:comment>
      <wp:comment>
        <wp:comment_id>
          246
        </wp:comment_id>
        <wp:comment_author>
          Dario Quintana
        </wp:comment_author>
        <wp:comment_author_url>
          http://nhforge.org/members/darioquintana/default.aspx
        </wp:comment_author_url>
        <wp:comment_author_email/>
        <wp:comment_author_IP/>
        <wp:comment_date_gmt>
          2009-04-09 12:58:46
        </wp:comment_date_gmt>
        <wp:comment_content>
          @Cristiano it&apos;s the same... also using defaults your eyes hurts
          less :-)
        </wp:comment_content>
        <wp:comment_approved>
          1
        </wp:comment_approved>
      </wp:comment>
      <wp:comment>
        <wp:comment_id>
          309
        </wp:comment_id>
        <wp:comment_author>
          Srinivas_NHibernate_Rookie
        </wp:comment_author>
        <wp:comment_author_url>
          http://nhforge.org/members/Srinivas_5F00_NHibernate_5F00_Rookie/default.aspx
        </wp:comment_author_url>
        <wp:comment_author_email/>
        <wp:comment_author_IP/>
        <wp:comment_date_gmt>
          2009-05-18 09:18:50
        </wp:comment_date_gmt>
        <wp:comment_content>
          Hi Guys , If attribute &quot;Formula&quot; returns more than one Row
          how best we can handle this in Mappings? Can we use an Array type so
          that i can hold multiple rows to the mapped field ? 
        </wp:comment_content>
        <wp:comment_approved>
          1
        </wp:comment_approved>
      </wp:comment>
      <wp:comment>
        <wp:comment_id>
          310
        </wp:comment_id>
        <wp:comment_author>
          Ayende
        </wp:comment_author>
        <wp:comment_author_url>
          http://nhforge.org/members/Ayende/default.aspx
        </wp:comment_author_url>
        <wp:comment_author_email/>
        <wp:comment_author_IP/>
        <wp:comment_date_gmt>
          2009-05-18 09:30:07
        </wp:comment_date_gmt>
        <wp:comment_content>
          You will get an error, there is no way SQL can return several rows
          inside a column
        </wp:comment_content>
        <wp:comment_approved>
          1
        </wp:comment_approved>
      </wp:comment>
      <wp:comment>
        <wp:comment_id>
          311
        </wp:comment_id>
        <wp:comment_author>
          Srinivas_NHibernate_Rookie
        </wp:comment_author>
        <wp:comment_author_url>
          http://nhforge.org/members/Srinivas_5F00_NHibernate_5F00_Rookie/default.aspx
        </wp:comment_author_url>
        <wp:comment_author_email/>
        <wp:comment_author_IP/>
        <wp:comment_date_gmt>
          2009-05-18 12:53:50
        </wp:comment_date_gmt>
        <wp:comment_content>
          @Ayende Thanks for the Reply Ayende In my application i am using a
          property as shown below: &lt;property name=&quot;x&quot;
          access=&quot;field&quot; formula=&quot;(select T.Col1 from Table_1 T
          where T.col2&gt;0 )&quot; type=&quot;Decimal&quot;/&gt; My
          formula=&quot;(select T.Col1 from Table_1 T where T.col2&gt;0 )&quot;
          would result in more than one row (i mean multiple values) In this
          scenario how could i use the property ? Do i need to change the type
          to Array if so could you pls let guide me .
        </wp:comment_content>
        <wp:comment_approved>
          1
        </wp:comment_approved>
      </wp:comment>
      <wp:comment>
        <wp:comment_id>
          312
        </wp:comment_id>
        <wp:comment_author>
          Ayende
        </wp:comment_author>
        <wp:comment_author_url>
          http://nhforge.org/members/Ayende/default.aspx
        </wp:comment_author_url>
        <wp:comment_author_email/>
        <wp:comment_author_IP/>
        <wp:comment_date_gmt>
          2009-05-18 13:01:40
        </wp:comment_date_gmt>
        <wp:comment_content>
          It is not possible. Try to execute this SQL, and you&apos;ll get an
          error at the database level.
        </wp:comment_content>
        <wp:comment_approved>
          1
        </wp:comment_approved>
      </wp:comment>
      <wp:comment>
        <wp:comment_id>
          313
        </wp:comment_id>
        <wp:comment_author>
          Srinivas_NHibernate_Rookie
        </wp:comment_author>
        <wp:comment_author_url>
          http://nhforge.org/members/Srinivas_5F00_NHibernate_5F00_Rookie/default.aspx
        </wp:comment_author_url>
        <wp:comment_author_email/>
        <wp:comment_author_IP/>
        <wp:comment_date_gmt>
          2009-05-18 14:06:15
        </wp:comment_date_gmt>
        <wp:comment_content>
          @Ayende Yeah exactly i am getting Error So ,We cannot use a Formula in
          NHibernate if SQL yields more than one row or value If i am not right
          in interpreting this please correct me
        </wp:comment_content>
        <wp:comment_approved>
          1
        </wp:comment_approved>
      </wp:comment>
      <wp:comment>
        <wp:comment_id>
          314
        </wp:comment_id>
        <wp:comment_author>
          Ayende
        </wp:comment_author>
        <wp:comment_author_url>
          http://nhforge.org/members/Ayende/default.aspx
        </wp:comment_author_url>
        <wp:comment_author_email/>
        <wp:comment_author_IP/>
        <wp:comment_date_gmt>
          2009-05-18 14:28:53
        </wp:comment_date_gmt>
        <wp:comment_content>
          The problem is not with NH The problem is that what you are trying to
          do isn&apos;t valid SQL in the relational model.
        </wp:comment_content>
        <wp:comment_approved>
          1
        </wp:comment_approved>
      </wp:comment>
      <wp:comment>
        <wp:comment_id>
          320
        </wp:comment_id>
        <wp:comment_author>
          Srinivas_NHibernate_Rookie
        </wp:comment_author>
        <wp:comment_author_url>
          http://nhforge.org/members/Srinivas_5F00_NHibernate_5F00_Rookie/default.aspx
        </wp:comment_author_url>
        <wp:comment_author_email/>
        <wp:comment_author_IP/>
        <wp:comment_date_gmt>
          2009-05-19 04:03:56
        </wp:comment_date_gmt>
        <wp:comment_content>
          @Ayende Thanks 
        </wp:comment_content>
        <wp:comment_approved>
          1
        </wp:comment_approved>
      </wp:comment>
      <wp:comment>
        <wp:comment_id>
          330
        </wp:comment_id>
        <wp:comment_author>
          Srinivas_NHibernate_Rookie
        </wp:comment_author>
        <wp:comment_author_url>
          http://nhforge.org/members/Srinivas_5F00_NHibernate_5F00_Rookie/default.aspx
        </wp:comment_author_url>
        <wp:comment_author_email/>
        <wp:comment_author_IP/>
        <wp:comment_date_gmt>
          2009-05-26 10:13:50
        </wp:comment_date_gmt>
        <wp:comment_content>
          @Ayende I dont know will it make sense to me posting this question
          here i have a scenario like this &lt;bag name=&quot;Collection1&quot;
          cascade=&quot;all&quot; inverse =&quot;true&quot;&gt; &lt;key
          column=&quot;Col_ID&quot;/&gt; &lt;one-to-many
          class=&quot;Collection1MappingClass&quot;
          not-found=&quot;ignore&quot;/&gt; &lt;/bag&gt; if i want only the
          collection of one particular column in &quot;Collection1&quot; table
          do i need to use &lt;element&gt; tag instead of &lt;one -to many&gt;
          or can i use both inside the bag.
        </wp:comment_content>
        <wp:comment_approved>
          1
        </wp:comment_approved>
      </wp:comment>
      <wp:comment>
        <wp:comment_id>
          331
        </wp:comment_id>
        <wp:comment_author>
          bunceg
        </wp:comment_author>
        <wp:comment_author_url>
          http://
        </wp:comment_author_url>
        <wp:comment_author_email/>
        <wp:comment_author_IP/>
        <wp:comment_date_gmt>
          2009-05-27 12:25:54
        </wp:comment_date_gmt>
        <wp:comment_content>
          Jumping on Ayende&apos;s blog but I think this sort of query should be
          raised in the general help forum that you can find under
          &quot;Groups&quot;. it&apos;s probably better than adding a growing
          list of &quot;how do I do this&quot; questions to the blog post.
        </wp:comment_content>
        <wp:comment_approved>
          1
        </wp:comment_approved>
      </wp:comment>
      <wp:comment>
        <wp:comment_id>
          449
        </wp:comment_id>
        <wp:comment_author>
          NHibernate_Mapping_Queries
        </wp:comment_author>
        <wp:comment_author_url>
          http://nhforge.org/members/Srinivas_5F00_NHibernate_5F00_Rookie/default.aspx
        </wp:comment_author_url>
        <wp:comment_author_email/>
        <wp:comment_author_IP/>
        <wp:comment_date_gmt>
          2009-07-23 14:01:47
        </wp:comment_date_gmt>
        <wp:comment_content>
          Hi Ayende and bunceg i have an issue with &lt;property&gt; mappings i
          am facing some precision problems with Oracle Number datatype and
          NHibernate Double datatype (prperty type is Double for the Oracle
          Column) When i retrive the Oracle Number through NHibernate the value
          is appended by some more precision values . Why is this happening in
          NHibernate is there any issue with the DataTypes i used?
        </wp:comment_content>
        <wp:comment_approved>
          1
        </wp:comment_approved>
      </wp:comment>
      <wp:comment>
        <wp:comment_id>
          450
        </wp:comment_id>
        <wp:comment_author>
          Ayende
        </wp:comment_author>
        <wp:comment_author_url>
          http://nhforge.org/members/Ayende/default.aspx
        </wp:comment_author_url>
        <wp:comment_author_email/>
        <wp:comment_author_IP/>
        <wp:comment_date_gmt>
          2009-07-23 14:34:52
        </wp:comment_date_gmt>
        <wp:comment_content>
          Srinivas, You need to specify precision in the property tag. Please
          ask the question in nh users, for more details.
        </wp:comment_content>
        <wp:comment_approved>
          1
        </wp:comment_approved>
      </wp:comment>
      <wp:comment>
        <wp:comment_id>
          451
        </wp:comment_id>
        <wp:comment_author>
          Srinivas_NHibernate_Rookie
        </wp:comment_author>
        <wp:comment_author_url>
          http://nhforge.org/members/Srinivas_5F00_NHibernate_5F00_Rookie/default.aspx
        </wp:comment_author_url>
        <wp:comment_author_email/>
        <wp:comment_author_IP/>
        <wp:comment_date_gmt>
          2009-07-23 15:58:11
        </wp:comment_date_gmt>
        <wp:comment_content>
          Thanks Ayende for the quick reply 
        </wp:comment_content>
        <wp:comment_approved>
          1
        </wp:comment_approved>
      </wp:comment>
    </item>
    <item>
      <title>
        NHibernate Mapping - &amp;lt;component/&amp;gt;
      </title>
      <link>
        http://nhibernate.github.io/blogs/nhibernate/archive/2009/04/08/nhibernate-mapping-lt-component-gt.html
      </link>
      <dsq:thread_identifier>
        blogs_nhibernate_archive_2009_04_08_nhibernate-mapping-lt-component-gt
      </dsq:thread_identifier>
      <wp:post_date_gmt>
        2009-04-08 14:20:00
      </wp:post_date_gmt>
      <wp:comment>
        <wp:comment_id>
          247
        </wp:comment_id>
        <wp:comment_author>
          Pablo Marambio
        </wp:comment_author>
        <wp:comment_author_url>
          http://http:/pablomarambio.cl
        </wp:comment_author_url>
        <wp:comment_author_email/>
        <wp:comment_author_IP/>
        <wp:comment_date_gmt>
          2009-04-10 22:36:58
        </wp:comment_date_gmt>
        <wp:comment_content>
          Nice.This is quite useful for my object versioning solution, which
          goes like this: generating a &quot;Past&quot; entity for each entity
          that needs versioning. In this case, the &quot;Actual&quot; and
          &quot;Past&quot; entities are completely different objects, so they go
          in diferent tables. I decided not to make them child objects of a
          common parent class, so Components are helping me to reduce code
          redudancy: Every attribute in the &quot;Actual&quot; entity is coded
          inside a component, which is also used in the &quot;Past&quot; entity.
          
        </wp:comment_content>
        <wp:comment_approved>
          1
        </wp:comment_approved>
      </wp:comment>
    </item>
    <item>
      <title>
        NHibernate Mapping - &amp;lt;many-to-one/&amp;gt;
      </title>
      <link>
        http://nhibernate.github.io/blogs/nhibernate/archive/2009/04/09/nhibernate-mapping-lt-many-to-one-gt.html
      </link>
      <dsq:thread_identifier>
        blogs_nhibernate_archive_2009_04_09_nhibernate-mapping-lt-many-to-one-gt
      </dsq:thread_identifier>
      <wp:post_date_gmt>
        2009-04-09 03:22:00
      </wp:post_date_gmt>
      <wp:comment>
        <wp:comment_id>
          243
        </wp:comment_id>
        <wp:comment_author>
          Fabio Maulo
        </wp:comment_author>
        <wp:comment_author_url>
          http://nhforge.org/members/fabiomaulo/default.aspx
        </wp:comment_author_url>
        <wp:comment_author_email/>
        <wp:comment_author_IP/>
        <wp:comment_date_gmt>
          2009-04-09 04:29:56
        </wp:comment_date_gmt>
        <wp:comment_content>
          very good for the wiki reference. It need only a copy&amp;paste of the
          HTML. http://nhforge.org/wikis/reference2-0en/default.aspx 
        </wp:comment_content>
        <wp:comment_approved>
          1
        </wp:comment_approved>
      </wp:comment>
      <wp:comment>
        <wp:comment_id>
          724
        </wp:comment_id>
        <wp:comment_author>
          adherence
        </wp:comment_author>
        <wp:comment_author_url>
          http://nhforge.org/members/adherent_2D00_islam/default.aspx
        </wp:comment_author_url>
        <wp:comment_author_email/>
        <wp:comment_author_IP/>
        <wp:comment_date_gmt>
          2010-10-16 07:29:15
        </wp:comment_date_gmt>
        <wp:comment_content>
          nice blog. i tried this but not working :( please check my problem on
          http://forums.asp.net/p/1612888/4126755.aspx#4126755 please help me
          out 
        </wp:comment_content>
        <wp:comment_approved>
          1
        </wp:comment_approved>
      </wp:comment>
    </item>
    <item>
      <title>
        NHibernate Mapping – Inheritance
      </title>
      <link>
        http://nhibernate.github.io/blogs/nhibernate/archive/2009/04/10/nhibernate-mapping-inheritance.html
      </link>
      <dsq:thread_identifier>
        blogs_nhibernate_archive_2009_04_10_nhibernate-mapping-inheritance
      </dsq:thread_identifier>
      <wp:post_date_gmt>
        2009-04-10 04:43:00
      </wp:post_date_gmt>
    </item>
    <item>
      <title>
        NHibernate Mapping - &amp;lt;dynamic-component/&amp;gt;
      </title>
      <link>
        http://nhibernate.github.io/blogs/nhibernate/archive/2009/04/11/nhibernate-mapping-lt-dynamic-component-gt.html
      </link>
      <dsq:thread_identifier>
        blogs_nhibernate_archive_2009_04_11_nhibernate-mapping-lt-dynamic-component-gt
      </dsq:thread_identifier>
      <wp:post_date_gmt>
        2009-04-11 05:23:00
      </wp:post_date_gmt>
      <wp:comment>
        <wp:comment_id>
          276
        </wp:comment_id>
        <wp:comment_author>
          mamadero
        </wp:comment_author>
        <wp:comment_author_url>
          http://www.miguelmadero.com
        </wp:comment_author_url>
        <wp:comment_author_email/>
        <wp:comment_author_IP/>
        <wp:comment_date_gmt>
          2009-04-25 12:06:11
        </wp:comment_date_gmt>
        <wp:comment_content>
          This sounds really cool, I imagine how this could be used with
          TypeDescriptors in WPF or Converters in Silverlight to databind to
          &quot;dynamically&quot; created properties. 
        </wp:comment_content>
        <wp:comment_approved>
          1
        </wp:comment_approved>
      </wp:comment>
    </item>
    <item>
      <title>
        NHibernate’s Future Queries And Their Fallback Behavior
      </title>
      <link>
        http://nhibernate.github.io/blogs/nhibernate/archive/2009/04/13/nhibernate-s-future-queries-and-their-fallback-behavior.html
      </link>
      <dsq:thread_identifier>
        blogs_nhibernate_archive_2009_04_13_nhibernate-s-future-queries-and-their-fallback-behavior
      </dsq:thread_identifier>
      <wp:post_date_gmt>
        2009-04-13 18:09:00
      </wp:post_date_gmt>
    </item>
    <item>
      <title>
        NHibernate Mapping - &amp;lt;set/&amp;gt;
      </title>
      <link>
        http://nhibernate.github.io/blogs/nhibernate/archive/2009/04/13/nhibernate-mapping-lt-set-gt.html
      </link>
      <dsq:thread_identifier>
        blogs_nhibernate_archive_2009_04_13_nhibernate-mapping-lt-set-gt
      </dsq:thread_identifier>
      <wp:post_date_gmt>
        2009-04-13 20:00:18
      </wp:post_date_gmt>
      <wp:comment>
        <wp:comment_id>
          255
        </wp:comment_id>
        <wp:comment_author>
          zephyrrr
        </wp:comment_author>
        <wp:comment_author_url>
          http://nhforge.org/members/zephyrrr/default.aspx
        </wp:comment_author_url>
        <wp:comment_author_email/>
        <wp:comment_author_IP/>
        <wp:comment_date_gmt>
          2009-04-15 02:15:10
        </wp:comment_date_gmt>
        <wp:comment_content>
          i still wonder what&apos;s the relation of &quot;lazy&quot;,
          &quot;fetch&quot; and &quot;outer-join&quot;, especially
          &quot;fetch&quot; and &quot;outer-join&quot; which can both set join. 
        </wp:comment_content>
        <wp:comment_approved>
          1
        </wp:comment_approved>
      </wp:comment>
      <wp:comment>
        <wp:comment_id>
          277
        </wp:comment_id>
        <wp:comment_author>
          mamadero
        </wp:comment_author>
        <wp:comment_author_url>
          http://nhforge.org/members/mamadero/default.aspx
        </wp:comment_author_url>
        <wp:comment_author_email/>
        <wp:comment_author_IP/>
        <wp:comment_date_gmt>
          2009-04-25 13:01:02
        </wp:comment_date_gmt>
        <wp:comment_content>
          Com&apos;on isn&apos;t fair, you&apos;re giving me a lot to read :( I
          read one post and you refere me to 5 more. Is this ever going to end?
          Great posts BTW!!!!
        </wp:comment_content>
        <wp:comment_approved>
          1
        </wp:comment_approved>
      </wp:comment>
      <wp:comment>
        <wp:comment_id>
          329
        </wp:comment_id>
        <wp:comment_author>
          Srinivas_NHibernate_Rookie
        </wp:comment_author>
        <wp:comment_author_url>
          http://nhforge.org/members/Srinivas_5F00_NHibernate_5F00_Rookie/default.aspx
        </wp:comment_author_url>
        <wp:comment_author_email/>
        <wp:comment_author_IP/>
        <wp:comment_date_gmt>
          2009-05-26 09:23:10
        </wp:comment_date_gmt>
        <wp:comment_content>
          Is &lt;key column=&quot;&quot;/&gt; always a Foreign Key in the
          Collection table? 
        </wp:comment_content>
        <wp:comment_approved>
          1
        </wp:comment_approved>
      </wp:comment>
      <wp:comment>
        <wp:comment_id>
          611
        </wp:comment_id>
        <wp:comment_author>
          Stefan Steinegger
        </wp:comment_author>
        <wp:comment_author_url>
          http://nhforge.org/members/ssteinegger/default.aspx
        </wp:comment_author_url>
        <wp:comment_author_email/>
        <wp:comment_author_IP/>
        <wp:comment_date_gmt>
          2010-02-16 14:07:17
        </wp:comment_date_gmt>
        <wp:comment_content>
          Great Post! I wonder what happens with fetch=&quot;subselect&quot; if
          you had a very complex query before to load the entities (or a lot of
          queries, for instance from another N+1 situation). How will NH create
          the subquery? will batch-size be more efficient for such situations?
        </wp:comment_content>
        <wp:comment_approved>
          1
        </wp:comment_approved>
      </wp:comment>
    </item>
    <item>
      <title>
        NHibernate Mapping - Concurrency
      </title>
      <link>
        http://nhibernate.github.io/blogs/nhibernate/archive/2009/04/15/nhibernate-mapping-concurrency.html
      </link>
      <dsq:thread_identifier>
        blogs_nhibernate_archive_2009_04_15_nhibernate-mapping-concurrency
      </dsq:thread_identifier>
      <wp:post_date_gmt>
        2009-04-14 22:40:00
      </wp:post_date_gmt>
      <wp:comment>
        <wp:comment_id>
          280
        </wp:comment_id>
        <wp:comment_author>
          JuanCho
        </wp:comment_author>
        <wp:comment_author_url>
          http://nhforge.org/members/JuanCho/default.aspx
        </wp:comment_author_url>
        <wp:comment_author_email/>
        <wp:comment_author_IP/>
        <wp:comment_date_gmt>
          2009-04-28 20:21:27
        </wp:comment_date_gmt>
        <wp:comment_content>
          Is this post specifically for NH v2.1? I get schema validation errors
          when I try to define a column element inside the version one:
          &lt;version name=&quot;Version&quot; type=&quot;BinaryBlob&quot;&gt;
          &lt;column name=&quot;Version&quot;
          sql-type=&quot;timestamp&quot;/&gt; &lt;/version&gt;
        </wp:comment_content>
        <wp:comment_approved>
          1
        </wp:comment_approved>
      </wp:comment>
      <wp:comment>
        <wp:comment_id>
          281
        </wp:comment_id>
        <wp:comment_author>
          Ayende
        </wp:comment_author>
        <wp:comment_author_url>
          http://nhforge.org/members/Ayende/default.aspx
        </wp:comment_author_url>
        <wp:comment_author_email/>
        <wp:comment_author_IP/>
        <wp:comment_date_gmt>
          2009-04-29 03:24:55
        </wp:comment_date_gmt>
        <wp:comment_content>
          Juan, Yes, this was done for NH 2.1
        </wp:comment_content>
        <wp:comment_approved>
          1
        </wp:comment_approved>
      </wp:comment>
      <wp:comment>
        <wp:comment_id>
          286
        </wp:comment_id>
        <wp:comment_author>
          JuanCho
        </wp:comment_author>
        <wp:comment_author_url>
          http://nhforge.org/members/JuanCho/default.aspx
        </wp:comment_author_url>
        <wp:comment_author_email/>
        <wp:comment_author_IP/>
        <wp:comment_date_gmt>
          2009-04-29 14:51:08
        </wp:comment_date_gmt>
        <wp:comment_content>
          Thanks, I can also confirm that after using NH 2.1, I was able to make
          it work with oracle via ORA_ROWSCN. If anybody is heading this route
          (supported in oracle 9+) keep in mind the tables need to be created
          with ROWDEPENDENCIES to guarantee unique row version With this, oracle
          will keep the version of the row, similar to the timestamp feature on
          sql server. You now, don&apos;t need to worry about manually
          incrementing the value of a custom version column anymore (via
          sequence, trigger, nhibernate, etc). It will be handled by oracle,
          enabling non-nhibernate processes to interact with the data and
          keeping the NH concurrency under control. NH 2.1 specific: &lt;version
          name=&quot;Version&quot; type=&quot;Int32&quot;
          generated=&quot;always&quot; &gt; &lt;column
          name=&quot;ORA_ROWSCN&quot; sql-type=&quot;Int32&quot; /&gt;
          &lt;/version&gt; NH 2.0 Specifc &lt;version name=&quot;Version&quot;
          type=&quot;Int32&quot; generated=&quot;always&quot;
          column=&quot;ORA_ROWSCN&quot;/&gt; You can find more details on this
          oracle feature at:
          http://asktom.oracle.com/pls/asktom/f?p=100:11:0::::P11_QUESTION_ID:517105100346104196
        </wp:comment_content>
        <wp:comment_approved>
          1
        </wp:comment_approved>
      </wp:comment>
      <wp:comment>
        <wp:comment_id>
          287
        </wp:comment_id>
        <wp:comment_author>
          JuanCho
        </wp:comment_author>
        <wp:comment_author_url>
          http://nhforge.org/members/JuanCho/default.aspx
        </wp:comment_author_url>
        <wp:comment_author_email/>
        <wp:comment_author_IP/>
        <wp:comment_date_gmt>
          2009-04-29 19:55:19
        </wp:comment_date_gmt>
        <wp:comment_content>
          Just added a wiki entry...
          http://nhforge.org/wikis/howtonh/nhibernate-concurrency-with-oracle-s-ora-rowscn.aspx
        </wp:comment_content>
        <wp:comment_approved>
          1
        </wp:comment_approved>
      </wp:comment>
      <wp:comment>
        <wp:comment_id>
          326
        </wp:comment_id>
        <wp:comment_author>
          bai
        </wp:comment_author>
        <wp:comment_author_url>
          http://nhforge.org/members/bai/default.aspx
        </wp:comment_author_url>
        <wp:comment_author_email/>
        <wp:comment_author_IP/>
        <wp:comment_date_gmt>
          2009-05-23 19:09:31
        </wp:comment_date_gmt>
        <wp:comment_content>
          Hi there, thanks for shareing. I have a little problem getting
          dynamic-update=&quot;true&quot; to work on my test project. It has no
          effect unless I also specify select-before-update=&quot;true&quot; Any
          ideas why ? 
        </wp:comment_content>
        <wp:comment_approved>
          1
        </wp:comment_approved>
      </wp:comment>
      <wp:comment>
        <wp:comment_id>
          327
        </wp:comment_id>
        <wp:comment_author>
          Ayende
        </wp:comment_author>
        <wp:comment_author_url>
          http://nhforge.org/members/Ayende/default.aspx
        </wp:comment_author_url>
        <wp:comment_author_email/>
        <wp:comment_author_IP/>
        <wp:comment_date_gmt>
          2009-05-23 23:40:08
        </wp:comment_date_gmt>
        <wp:comment_content>
          No, I don&apos;t. Code + mapping would help, please post it to nh
          users
        </wp:comment_content>
        <wp:comment_approved>
          1
        </wp:comment_approved>
      </wp:comment>
      <wp:comment>
        <wp:comment_id>
          802
        </wp:comment_id>
        <wp:comment_author>
          abhaymamid
        </wp:comment_author>
        <wp:comment_author_url>
          http://nhforge.org/members/abhaymamid/default.aspx
        </wp:comment_author_url>
        <wp:comment_author_email/>
        <wp:comment_author_IP/>
        <wp:comment_date_gmt>
          2011-02-23 19:38:57
        </wp:comment_date_gmt>
        <wp:comment_content>
          Hi There, objNSession = NHibernateHelper.GetCurrentSession();
          objNSession.Lock(item, LockMode.None); The second code line above
          throws an exception, &quot;cannot lock an unsaved transient instance:
          Boeing.IRSP.BL.BusinessLogic.Admin.DL&quot; Can you please help me.
          It&apos;s burning.
        </wp:comment_content>
        <wp:comment_approved>
          1
        </wp:comment_approved>
      </wp:comment>
      <wp:comment>
        <wp:comment_id>
          1018
        </wp:comment_id>
        <wp:comment_author>
          virusswb
        </wp:comment_author>
        <wp:comment_author_url>
          http://nhforge.org/members/virusswb/default.aspx
        </wp:comment_author_url>
        <wp:comment_author_email/>
        <wp:comment_author_IP/>
        <wp:comment_date_gmt>
          2013-05-31 02:03:06
        </wp:comment_date_gmt>
        <wp:comment_content>
          the version node in nh3.3 is not enable, which node do we selected?
          thank you.
        </wp:comment_content>
        <wp:comment_approved>
          1
        </wp:comment_approved>
      </wp:comment>
      <wp:comment>
        <wp:comment_id>
          1019
        </wp:comment_id>
        <wp:comment_author>
          virusswb
        </wp:comment_author>
        <wp:comment_author_url>
          http://nhforge.org/members/virusswb/default.aspx
        </wp:comment_author_url>
        <wp:comment_author_email/>
        <wp:comment_author_IP/>
        <wp:comment_date_gmt>
          2013-05-31 03:01:05
        </wp:comment_date_gmt>
        <wp:comment_content>
          i find the reason. the version tag must keep up with id tag. thank
          you.
        </wp:comment_content>
        <wp:comment_approved>
          1
        </wp:comment_approved>
      </wp:comment>
    </item>
    <item>
      <title>
        NHibernate mapping - &amp;lt;database-object/&amp;gt;
      </title>
      <link>
        http://nhibernate.github.io/blogs/nhibernate/archive/2009/04/16/nhibernate-mapping-lt-database-object-gt.html
      </link>
      <dsq:thread_identifier>
        blogs_nhibernate_archive_2009_04_16_nhibernate-mapping-lt-database-object-gt
      </dsq:thread_identifier>
      <wp:post_date_gmt>
        2009-04-15 22:47:00
      </wp:post_date_gmt>
      <wp:comment>
        <wp:comment_id>
          984
        </wp:comment_id>
        <wp:comment_author>
          Alexandre Lindolfo Vianna
        </wp:comment_author>
        <wp:comment_author_url>
          http://nhforge.org/members/Alexandre/default.aspx
        </wp:comment_author_url>
        <wp:comment_author_email/>
        <wp:comment_author_IP/>
        <wp:comment_date_gmt>
          2011-09-13 00:24:24
        </wp:comment_date_gmt>
        <wp:comment_content>
          Hello, I&apos;m looking for a solution that would let me specify the
          Oracle column comment in the mapping file. Below is an attempt using
          &lt;database- object&gt; but I got that error... 21:13:38.714 DEBUG
          [SchemaExport.Execute] Sistema: comment on column
          Cone_Slab.Id_Cone_Slab IS &apos;Identificador do registro&apos;;
          comment on column Cone_Slab.Id_Slab IS &apos;Identificador da
          placa&apos;; 21:13:38.734 WARN [SchemaExport.Execute] Sistema:
          Unsuccessful: comment on column Cone_Slab.Id_Cone_Slab IS
          &apos;Identificador do registro&apos;; comment on column
          Cone_Slab.Id_Slab IS &apos;Identificador da placa&apos;; 21:13:38.735
          WARN [SchemaExport.Execute] Sistema: ORA-00911: caractere inválido
          &lt;class name=&quot;ConeSlab&quot; table=&quot;Cone_Slab&quot;
          lazy=&quot;false&quot;&gt; &lt;id name=&quot;Id&quot;
          column=&quot;Id_Cone_Slab&quot; type=&quot;Int32&quot;&gt;
          &lt;generator class=&quot;hilo&quot;/&gt; &lt;/id&gt; &lt;many-to-one
          name=&quot;Cone&quot; column=&quot;Id_Cone&quot;
          class=&quot;Cone&quot; cascade=&quot;none&quot; fetch=&quot;join&quot;
          not-null=&quot;true&quot;/&gt; &lt;many-to-one name=&quot;Slab&quot;
          column=&quot;Id_Slab&quot; class=&quot;Slab&quot;
          cascade=&quot;none&quot; fetch=&quot;join&quot;
          not-null=&quot;true&quot;/&gt; &lt;/class&gt; &lt;database-object&gt;
          &lt;create&gt;comment on column Cone_Slab.Id_Cone IS
          &apos;Identificador do cone&apos;; comment on column Cone_Slab.Id_Slab
          IS &apos;Identificador da placa&apos;;&lt;/create&gt;
          &lt;drop&gt;&lt;/drop&gt; &lt;/database-object&gt; How can I fix this?
          
        </wp:comment_content>
        <wp:comment_approved>
          1
        </wp:comment_approved>
      </wp:comment>
    </item>
    <item>
      <title>
        NHibernate Mapping – Named queries &amp;lt;query/&amp;gt; and
        &amp;lt;sql-query/&amp;gt;
      </title>
      <link>
        http://nhibernate.github.io/blogs/nhibernate/archive/2009/04/17/nhibernate-mapping-named-queries-lt-query-gt-and-lt-sql-query-gt.html
      </link>
      <dsq:thread_identifier>
        blogs_nhibernate_archive_2009_04_17_nhibernate-mapping-named-queries-lt-query-gt-and-lt-sql-query-gt
      </dsq:thread_identifier>
      <wp:post_date_gmt>
        2009-04-16 22:55:00
      </wp:post_date_gmt>
      <wp:comment>
        <wp:comment_id>
          282
        </wp:comment_id>
        <wp:comment_author>
          Eddie Gems
        </wp:comment_author>
        <wp:comment_author_url>
          http://nhforge.org/members/Eddie-Gems/default.aspx
        </wp:comment_author_url>
        <wp:comment_author_email/>
        <wp:comment_author_IP/>
        <wp:comment_date_gmt>
          2009-04-29 11:37:33
        </wp:comment_date_gmt>
        <wp:comment_content>
          What about an optimization via native SQL query loading of complex
          entityes? With one-to-one and one-to-many relations? I have such long
          query and I need to set oracle hint to it (/*+ ORDERED */) but I
          don&apos;t want to rewrite query with 20 joins (I use not-lazy loading
          because I know that all the data I need on the entity page).
        </wp:comment_content>
        <wp:comment_approved>
          1
        </wp:comment_approved>
      </wp:comment>
      <wp:comment>
        <wp:comment_id>
          284
        </wp:comment_id>
        <wp:comment_author>
          Ayende
        </wp:comment_author>
        <wp:comment_author_url>
          http://nhforge.org/members/Ayende/default.aspx
        </wp:comment_author_url>
        <wp:comment_author_email/>
        <wp:comment_author_IP/>
        <wp:comment_date_gmt>
          2009-04-29 12:07:34
        </wp:comment_date_gmt>
        <wp:comment_content>
          Eddie, Take a look at the loader element with query-ref
          http://ayende.com/Blog/archive/2006/09/18/UsingNHibernateWithStoredProcedures.aspx 
        </wp:comment_content>
        <wp:comment_approved>
          1
        </wp:comment_approved>
      </wp:comment>
      <wp:comment>
        <wp:comment_id>
          478
        </wp:comment_id>
        <wp:comment_author>
          Joon
        </wp:comment_author>
        <wp:comment_author_url>
          http://nhforge.org/members/Joon/default.aspx
        </wp:comment_author_url>
        <wp:comment_author_email/>
        <wp:comment_author_IP/>
        <wp:comment_date_gmt>
          2009-08-19 04:56:06
        </wp:comment_date_gmt>
        <wp:comment_content>
          Hi Ayende, What if I want to include a db function that is not part of
          Person table but in a property of person class. For eg: &lt;sql-query
          name=&quot;PeopleByName&quot;&gt; &lt;return alias=&quot;person&quot;
          class=&quot;Person&quot;/&gt; SELECT {person.*}, length({person}.Name)
          as Length FROM People {person} WITH(nolock) WHERE {person}.Name LIKE
          :name &lt;/sql-query&gt; The length is one of the property in the
          Person class, but the value can&apos;t be mapped with the above sql.
          It will work if I add a &quot;Length&quot; property in the mapping
          xml, but all other types of query will fail because this column
          can&apos;t be found in the table. Your help is greatly appreciated.
          Regards, Joon 
        </wp:comment_content>
        <wp:comment_approved>
          1
        </wp:comment_approved>
      </wp:comment>
      <wp:comment>
        <wp:comment_id>
          479
        </wp:comment_id>
        <wp:comment_author>
          Ayende
        </wp:comment_author>
        <wp:comment_author_url>
          http://nhforge.org/members/Ayende/default.aspx
        </wp:comment_author_url>
        <wp:comment_author_email/>
        <wp:comment_author_IP/>
        <wp:comment_date_gmt>
          2009-08-19 05:04:18
        </wp:comment_date_gmt>
        <wp:comment_content>
          Joon, That is why you have formula for on properties
        </wp:comment_content>
        <wp:comment_approved>
          1
        </wp:comment_approved>
      </wp:comment>
      <wp:comment>
        <wp:comment_id>
          481
        </wp:comment_id>
        <wp:comment_author>
          Joon
        </wp:comment_author>
        <wp:comment_author_url>
          http://nhforge.org/members/Joon/default.aspx
        </wp:comment_author_url>
        <wp:comment_author_email/>
        <wp:comment_author_IP/>
        <wp:comment_date_gmt>
          2009-08-19 06:02:37
        </wp:comment_date_gmt>
        <wp:comment_content>
          Thanks a lot Ayende, you hit the point.
        </wp:comment_content>
        <wp:comment_approved>
          1
        </wp:comment_approved>
      </wp:comment>
    </item>
    <item>
      <title>
        Tuning NHibernate: Tolerant QueryCache
      </title>
      <link>
        http://nhibernate.github.io/blogs/nhibernate/archive/2009/04/17/tuning-nhibernate-tolerant-querycache.html
      </link>
      <dsq:thread_identifier>
        blogs_nhibernate_archive_2009_04_17_tuning-nhibernate-tolerant-querycache
      </dsq:thread_identifier>
      <wp:post_date_gmt>
        2009-04-18 00:05:00
      </wp:post_date_gmt>
    </item>
    <item>
      <title>
        NHibernate Mapping - &amp;lt;one-to-one/&amp;gt;
      </title>
      <link>
        http://nhibernate.github.io/blogs/nhibernate/archive/2009/04/19/nhibernate-mapping-lt-one-to-one-gt.html
      </link>
      <dsq:thread_identifier>
        blogs_nhibernate_archive_2009_04_19_nhibernate-mapping-lt-one-to-one-gt
      </dsq:thread_identifier>
      <wp:post_date_gmt>
        2009-04-19 01:31:00
      </wp:post_date_gmt>
      <wp:comment>
        <wp:comment_id>
          283
        </wp:comment_id>
        <wp:comment_author>
          Eddie Gems
        </wp:comment_author>
        <wp:comment_author_url>
          http://nhforge.org/members/Eddie-Gems/default.aspx
        </wp:comment_author_url>
        <wp:comment_author_email/>
        <wp:comment_author_IP/>
        <wp:comment_date_gmt>
          2009-04-29 12:03:45
        </wp:comment_date_gmt>
        <wp:comment_content>
          In your examples we map Person property of Employee class via column
          PERSON of EMPLOYEE table.So when we want to get employee from DB we
          create such query: select * from EMPLOYEE e join PERSON p on p.Id =
          e.Person. Right? I think yes. So. When we load person + employee we
          need to use such query: select * from PERSON p left join EMPLOYEE e on
          e.Person = p.Id, but in your mapping for Person class we saw that
          Employee mapped to Person via primary keys, i.e. Employee.Id =
          Person.Id, and I think this is an error. And in your article is
          nothing about &quot;property-ref&quot; attribute. As I understand from
          documentation it&apos;s destination is a little bit odd for me. I try
          to explain/ I case of your mappings I think that the right way to
          define mapping for one-to-one relation to employee from Person class
          would: &lt;one-to-one name=&quot;Employee&quot;
          class=&quot;Employee&quot; property-ref=&quot;Person&quot; /&gt; but
          what if we don&apos;t want property Person at the Employee class? What
          we need specify in the &quot;property-ref&quot; attribute? My opinion
          is that we need &quot;column&quot; attribute for on-to-one element at
          the mapping. Cheers )
        </wp:comment_content>
        <wp:comment_approved>
          1
        </wp:comment_approved>
      </wp:comment>
      <wp:comment>
        <wp:comment_id>
          285
        </wp:comment_id>
        <wp:comment_author>
          Ayende
        </wp:comment_author>
        <wp:comment_author_url>
          http://nhforge.org/members/Ayende/default.aspx
        </wp:comment_author_url>
        <wp:comment_author_email/>
        <wp:comment_author_IP/>
        <wp:comment_date_gmt>
          2009-04-29 12:11:56
        </wp:comment_date_gmt>
        <wp:comment_content>
          Eddie, If you want a column attribute, you might as well use the
          (much) simpler many-to-one.
        </wp:comment_content>
        <wp:comment_approved>
          1
        </wp:comment_approved>
      </wp:comment>
      <wp:comment>
        <wp:comment_id>
          766
        </wp:comment_id>
        <wp:comment_author>
          GLMnet
        </wp:comment_author>
        <wp:comment_author_url>
          http://nhforge.org/members/GLMnet/default.aspx
        </wp:comment_author_url>
        <wp:comment_author_email/>
        <wp:comment_author_IP/>
        <wp:comment_date_gmt>
          2011-01-18 03:36:20
        </wp:comment_date_gmt>
        <wp:comment_content>
          I agree with Eddie, this example should be fixed. It is clear in the
          second sql sreenshot that Person column is not used: SELECT .. FROM
          People person0_ WHERE person0.Id = 1 // We get a person which id is 1
          SELECT .. FROM Employees employee0_ WHERE employee0.Id = 1 // now that
          1 is the Person id, but is &quot;joined&quot; with employee id, so
          this works by coincidence. The query should be: SELECT .. FROM
          Employees employee0_ WHERE employee0.Person = 1 To get NH do that you
          should do the property-ref thing.
        </wp:comment_content>
        <wp:comment_approved>
          1
        </wp:comment_approved>
      </wp:comment>
      <wp:comment>
        <wp:comment_id>
          767
        </wp:comment_id>
        <wp:comment_author>
          GLMnet
        </wp:comment_author>
        <wp:comment_author_url>
          http://nhforge.org/members/GLMnet/default.aspx
        </wp:comment_author_url>
        <wp:comment_author_email/>
        <wp:comment_author_IP/>
        <wp:comment_date_gmt>
          2011-01-18 03:36:49
        </wp:comment_date_gmt>
        <wp:comment_content>
          I agree with Eddie, this example should be fixed. It is clear in the
          second sql sreenshot that Person column is not used: SELECT .. FROM
          People person0_ WHERE person0.Id = 1 // We get a person which id is 1
          SELECT .. FROM Employees employee0_ WHERE employee0.Id = 1 // now that
          1 is the Person id, but is &quot;joined&quot; with employee id, so
          this works by coincidence. The query should be: SELECT .. FROM
          Employees employee0_ WHERE employee0.Person = 1 To get NH do that you
          should do the property-ref thing.
        </wp:comment_content>
        <wp:comment_approved>
          1
        </wp:comment_approved>
      </wp:comment>
    </item>
    <item>
      <title>
        NHibernate Mapping - &amp;lt;join/&amp;gt;
      </title>
      <link>
        http://nhibernate.github.io/blogs/nhibernate/archive/2009/04/20/nhibernate-mapping-lt-join-gt.html
      </link>
      <dsq:thread_identifier>
        blogs_nhibernate_archive_2009_04_20_nhibernate-mapping-lt-join-gt
      </dsq:thread_identifier>
      <wp:post_date_gmt>
        2009-04-20 01:56:00
      </wp:post_date_gmt>
    </item>
    <item>
      <title>
        NHibernate Mapping - &amp;lt;any/&amp;gt;
      </title>
      <link>
        http://nhibernate.github.io/blogs/nhibernate/archive/2009/04/21/nhibernate-mapping-lt-any-gt.html
      </link>
      <dsq:thread_identifier>
        blogs_nhibernate_archive_2009_04_21_nhibernate-mapping-lt-any-gt
      </dsq:thread_identifier>
      <wp:post_date_gmt>
        2009-04-21 03:29:00
      </wp:post_date_gmt>
      <wp:comment>
        <wp:comment_id>
          270
        </wp:comment_id>
        <wp:comment_author>
          bunceg
        </wp:comment_author>
        <wp:comment_author_url>
          http://nhforge.org/members/bunceg/default.aspx
        </wp:comment_author_url>
        <wp:comment_author_email/>
        <wp:comment_author_IP/>
        <wp:comment_date_gmt>
          2009-04-22 10:01:05
        </wp:comment_date_gmt>
        <wp:comment_content>
          This may be a stupid question, but how does it know to use the
          PaymentType column and not the PaymentId column for the meta-data?
          Suppose PaymentId was also a string based column. What then? I
          can&apos;t see where you state PaymentType is the meta-data column to
          use.
        </wp:comment_content>
        <wp:comment_approved>
          1
        </wp:comment_approved>
      </wp:comment>
      <wp:comment>
        <wp:comment_id>
          271
        </wp:comment_id>
        <wp:comment_author>
          Ayende
        </wp:comment_author>
        <wp:comment_author_url>
          http://nhforge.org/members/Ayende/default.aspx
        </wp:comment_author_url>
        <wp:comment_author_email/>
        <wp:comment_author_IP/>
        <wp:comment_date_gmt>
          2009-04-22 14:47:14
        </wp:comment_date_gmt>
        <wp:comment_content>
          bunceg, This is decided by the position. The first column is the type,
          the second is the id.
        </wp:comment_content>
        <wp:comment_approved>
          1
        </wp:comment_approved>
      </wp:comment>
      <wp:comment>
        <wp:comment_id>
          288
        </wp:comment_id>
        <wp:comment_author>
          bunceg
        </wp:comment_author>
        <wp:comment_author_url>
          http://nhforge.org/members/bunceg/default.aspx
        </wp:comment_author_url>
        <wp:comment_author_email/>
        <wp:comment_author_IP/>
        <wp:comment_date_gmt>
          2009-04-30 10:35:00
        </wp:comment_date_gmt>
        <wp:comment_content>
          btw. Thanks for this - I actually needed this today to fix a problem
          another programmer had come across :)
        </wp:comment_content>
        <wp:comment_approved>
          1
        </wp:comment_approved>
      </wp:comment>
    </item>
    <item>
      <title>
        NHibernate Mapping - &amp;lt;many-to-any/&amp;gt;
      </title>
      <link>
        http://nhibernate.github.io/blogs/nhibernate/archive/2009/04/22/nhibernate-mapping-lt-many-to-any-gt.html
      </link>
      <dsq:thread_identifier>
        blogs_nhibernate_archive_2009_04_22_nhibernate-mapping-lt-many-to-any-gt
      </dsq:thread_identifier>
      <wp:post_date_gmt>
        2009-04-22 03:52:00
      </wp:post_date_gmt>
    </item>
    <item>
      <title>
        NHibernate Tidbit – using &amp;lt;set/&amp;gt; without referencing
        Iesi.Collections
      </title>
      <link>
        http://nhibernate.github.io/blogs/nhibernate/archive/2009/04/23/nhibernate-tidbit-using-lt-set-gt-without-referencing-iesi-collections.html
      </link>
      <dsq:thread_identifier>
        blogs_nhibernate_archive_2009_04_23_nhibernate-tidbit-using-lt-set-gt-without-referencing-iesi-collections
      </dsq:thread_identifier>
      <wp:post_date_gmt>
        2009-04-23 04:11:00
      </wp:post_date_gmt>
    </item>
    <item>
      <title>
        New AST Parser as default in 2.1
      </title>
      <link>
        http://nhibernate.github.io/blogs/nhibernate/archive/2009/04/24/new-ast-parser-as-default-in-2-1.html
      </link>
      <dsq:thread_identifier>
        blogs_nhibernate_archive_2009_04_24_new-ast-parser-as-default-in-2-1
      </dsq:thread_identifier>
      <wp:post_date_gmt>
        2009-04-24 06:46:00
      </wp:post_date_gmt>
      <wp:comment>
        <wp:comment_id>
          274
        </wp:comment_id>
        <wp:comment_author>
          Ayende
        </wp:comment_author>
        <wp:comment_author_url>
          http://nhforge.org/members/Ayende/default.aspx
        </wp:comment_author_url>
        <wp:comment_author_email/>
        <wp:comment_author_IP/>
        <wp:comment_date_gmt>
          2009-04-24 07:59:37
        </wp:comment_date_gmt>
        <wp:comment_content>
          It is important to note that no matter how this survey goes, you are
          always going to be able to revert back to the old parser by setting a
          single config value.
        </wp:comment_content>
        <wp:comment_approved>
          1
        </wp:comment_approved>
      </wp:comment>
      <wp:comment>
        <wp:comment_id>
          275
        </wp:comment_id>
        <wp:comment_author>
          Joe
        </wp:comment_author>
        <wp:comment_author_url>
          http://nhforge.org/members/jyoung/default.aspx
        </wp:comment_author_url>
        <wp:comment_author_email/>
        <wp:comment_author_IP/>
        <wp:comment_date_gmt>
          2009-04-24 13:36:43
        </wp:comment_date_gmt>
        <wp:comment_content>
          Could you highlight the differences between the new and old AST
          Parser? I think that would help people cast a more informed vote.
        </wp:comment_content>
        <wp:comment_approved>
          1
        </wp:comment_approved>
      </wp:comment>
    </item>
    <item>
      <title>
        NHibernate 2nd Level Cache
      </title>
      <link>
        http://nhibernate.github.io/blogs/nhibernate/archive/2009/04/24/nhibernate-2nd-level-cache.html
      </link>
      <dsq:thread_identifier>
        blogs_nhibernate_archive_2009_04_24_nhibernate-2nd-level-cache
      </dsq:thread_identifier>
      <wp:post_date_gmt>
        2009-04-24 12:28:00
      </wp:post_date_gmt>
    </item>
    <item>
      <title>
        NHibernate Futures
      </title>
      <link>
        http://nhibernate.github.io/blogs/nhibernate/archive/2009/04/27/nhibernate-futures.html
      </link>
      <dsq:thread_identifier>
        blogs_nhibernate_archive_2009_04_27_nhibernate-futures
      </dsq:thread_identifier>
      <wp:post_date_gmt>
        2009-04-27 05:33:00
      </wp:post_date_gmt>
    </item>
    <item>
      <title>
        NHibernate Unit Testing
      </title>
      <link>
        http://nhibernate.github.io/blogs/nhibernate/archive/2009/04/28/nhibernate-unit-testing.html
      </link>
      <dsq:thread_identifier>
        blogs_nhibernate_archive_2009_04_28_nhibernate-unit-testing
      </dsq:thread_identifier>
      <wp:post_date_gmt>
        2009-04-28 07:32:00
      </wp:post_date_gmt>
      <wp:comment>
        <wp:comment_id>
          278
        </wp:comment_id>
        <wp:comment_author>
          Fred Morrison
        </wp:comment_author>
        <wp:comment_author_url>
          http://nhforge.org/members/fmorriso/default.aspx
        </wp:comment_author_url>
        <wp:comment_author_email/>
        <wp:comment_author_IP/>
        <wp:comment_date_gmt>
          2009-04-28 14:56:01
        </wp:comment_date_gmt>
        <wp:comment_content>
          Is there any type of free alternative to NH Prof? After all, the whole
          point of using things like NHibernate is that they don&apos;t cost
          money, so it&apos;s quite naturual that we would look for a profiler
          that is also does not cost money.
        </wp:comment_content>
        <wp:comment_approved>
          1
        </wp:comment_approved>
      </wp:comment>
      <wp:comment>
        <wp:comment_id>
          279
        </wp:comment_id>
        <wp:comment_author>
          Ayende
        </wp:comment_author>
        <wp:comment_author_url>
          http://nhforge.org/members/Ayende/default.aspx
        </wp:comment_author_url>
        <wp:comment_author_email/>
        <wp:comment_author_IP/>
        <wp:comment_date_gmt>
          2009-04-28 19:28:21
        </wp:comment_date_gmt>
        <wp:comment_content>
          Fred, A few points. a) No, there isn&apos;t. You can try use the log
          file, but the level of experience is on a totally different planet. b)
          I fail to see the logic in saying that NHibernate&apos;s entire eco
          system should be free.
        </wp:comment_content>
        <wp:comment_approved>
          1
        </wp:comment_approved>
      </wp:comment>
      <wp:comment>
        <wp:comment_id>
          324
        </wp:comment_id>
        <wp:comment_author>
          Optimus
        </wp:comment_author>
        <wp:comment_author_url>
          http://nhforge.org/members/optimus/default.aspx
        </wp:comment_author_url>
        <wp:comment_author_email/>
        <wp:comment_author_IP/>
        <wp:comment_date_gmt>
          2009-05-21 18:06:19
        </wp:comment_date_gmt>
        <wp:comment_content>
          &quot;the whole point of using things like NHibernate is that they
          don&apos;t cost money&quot;. Oh yeah! This is *CLEARLY*, *ENTIRELY*
          the *WHOLE* point. The entire NH developer community would like to
          thank you for your incredible lack of tact.
        </wp:comment_content>
        <wp:comment_approved>
          1
        </wp:comment_approved>
      </wp:comment>
      <wp:comment>
        <wp:comment_id>
          325
        </wp:comment_id>
        <wp:comment_author>
          Fabio Maulo
        </wp:comment_author>
        <wp:comment_author_url>
          http://nhforge.org/members/fabiomaulo/default.aspx
        </wp:comment_author_url>
        <wp:comment_author_email/>
        <wp:comment_author_IP/>
        <wp:comment_date_gmt>
          2009-05-21 22:34:17
        </wp:comment_date_gmt>
        <wp:comment_content>
          @Fred Sure there is! The NHibernate log give you all you need... after
          that you should reorganize info and know what mean each thing you are
          seeing. This is completely free of charge. If you want that somebody
          else do the same work for you and then give you some advise and waring
          about how you are using NH you have various alternative starting from
          NH-Prof to consult some professional; as you can imagine this is not
          for free. If you want all for free, please, do something with the
          supermarket where I&apos;m going; they asking me money for each thing
          I&apos;m buying. Thanks.
        </wp:comment_content>
        <wp:comment_approved>
          1
        </wp:comment_approved>
      </wp:comment>
    </item>
    <item>
      <title>
        NHibernate IPreUpdateEventListener &amp;amp; IPreInsertEventListener
      </title>
      <link>
        http://nhibernate.github.io/blogs/nhibernate/archive/2009/04/29/nhibernate-ipreupdateeventlistener-amp-ipreinserteventlistener.html
      </link>
      <dsq:thread_identifier>
        blogs_nhibernate_archive_2009_04_29_nhibernate-ipreupdateeventlistener-amp-ipreinserteventlistener
      </dsq:thread_identifier>
      <wp:post_date_gmt>
        2009-04-29 15:04:00
      </wp:post_date_gmt>
    </item>
    <item>
      <title>
        NHibernate – The difference between Get, Load and querying by id
      </title>
      <link>
        http://nhibernate.github.io/blogs/nhibernate/archive/2009/04/30/nhibernate-the-difference-between-get-load-and-querying-by-id.html
      </link>
      <dsq:thread_identifier>
        blogs_nhibernate_archive_2009_04_30_nhibernate-the-difference-between-get-load-and-querying-by-id
      </dsq:thread_identifier>
      <wp:post_date_gmt>
        2009-04-30 06:55:00
      </wp:post_date_gmt>
    </item>
    <item>
      <title>
        NHibernate Validator
      </title>
      <link>
        http://nhibernate.github.io/blogs/nhibernate/archive/2009/05/01/nhibernate-validator.html
      </link>
      <dsq:thread_identifier>
        blogs_nhibernate_archive_2009_05_01_nhibernate-validator
      </dsq:thread_identifier>
      <wp:post_date_gmt>
        2009-05-01 08:28:00
      </wp:post_date_gmt>
      <wp:comment>
        <wp:comment_id>
          322
        </wp:comment_id>
        <wp:comment_author>
          playtime
        </wp:comment_author>
        <wp:comment_author_url>
          http://nhforge.org/members/playtime/default.aspx
        </wp:comment_author_url>
        <wp:comment_author_email/>
        <wp:comment_author_IP/>
        <wp:comment_date_gmt>
          2009-05-20 01:50:23
        </wp:comment_date_gmt>
        <wp:comment_content>
          What is the advantage of using this over the MS Patterns and Practices
          Validation Block?
        </wp:comment_content>
        <wp:comment_approved>
          1
        </wp:comment_approved>
      </wp:comment>
    </item>
    <item>
      <title>
        NHibernate Filters
      </title>
      <link>
        http://nhibernate.github.io/blogs/nhibernate/archive/2009/05/04/nhibernate-filters.html
      </link>
      <dsq:thread_identifier>
        blogs_nhibernate_archive_2009_05_04_nhibernate-filters
      </dsq:thread_identifier>
      <wp:post_date_gmt>
        2009-05-04 08:33:00
      </wp:post_date_gmt>
      <wp:comment>
        <wp:comment_id>
          290
        </wp:comment_id>
        <wp:comment_author>
          Fred Morrison
        </wp:comment_author>
        <wp:comment_author_url>
          http://
        </wp:comment_author_url>
        <wp:comment_author_email/>
        <wp:comment_author_IP/>
        <wp:comment_date_gmt>
          2009-05-04 16:10:52
        </wp:comment_date_gmt>
        <wp:comment_content>
          Please repost this article. The condition definition in the XML of the
          first example is unreadable because it is right-justified and cut off.
          The second one is also difficult to read because of a similar
          right-justification issue.
        </wp:comment_content>
        <wp:comment_approved>
          1
        </wp:comment_approved>
      </wp:comment>
      <wp:comment>
        <wp:comment_id>
          291
        </wp:comment_id>
        <wp:comment_author>
          Ayende
        </wp:comment_author>
        <wp:comment_author_url>
          http://nhforge.org/members/Ayende/default.aspx
        </wp:comment_author_url>
        <wp:comment_author_email/>
        <wp:comment_author_IP/>
        <wp:comment_date_gmt>
          2009-05-04 22:51:04
        </wp:comment_date_gmt>
        <wp:comment_content>
          Fred, They are not right justified, they are indented. You can also
          try reading it here:
          http://ayende.com/Blog/archive/2009/05/04/nhibernate-filters.aspx 
        </wp:comment_content>
        <wp:comment_approved>
          1
        </wp:comment_approved>
      </wp:comment>
      <wp:comment>
        <wp:comment_id>
          298
        </wp:comment_id>
        <wp:comment_author>
          Fred Morrison
        </wp:comment_author>
        <wp:comment_author_url>
          http://nhforge.org/members/fmorriso/default.aspx
        </wp:comment_author_url>
        <wp:comment_author_email/>
        <wp:comment_author_IP/>
        <wp:comment_date_gmt>
          2009-05-06 18:57:09
        </wp:comment_date_gmt>
        <wp:comment_content>
          Thanks. The alternate location is much more readable.
        </wp:comment_content>
        <wp:comment_approved>
          1
        </wp:comment_approved>
      </wp:comment>
    </item>
    <item>
      <title>
        NH2.1: Executable HQL
      </title>
      <link>
        http://nhibernate.github.io/blogs/nhibernate/archive/2009/05/05/nh2-1-executable-hql.html
      </link>
      <dsq:thread_identifier>
        blogs_nhibernate_archive_2009_05_05_nh2-1-executable-hql
      </dsq:thread_identifier>
      <wp:post_date_gmt>
        2009-05-05 13:54:00
      </wp:post_date_gmt>
      <wp:comment>
        <wp:comment_id>
          297
        </wp:comment_id>
        <wp:comment_author>
          Fred Morrison
        </wp:comment_author>
        <wp:comment_author_url>
          http://nhforge.org/members/fmorriso/default.aspx
        </wp:comment_author_url>
        <wp:comment_author_email/>
        <wp:comment_author_IP/>
        <wp:comment_date_gmt>
          2009-05-06 18:55:39
        </wp:comment_date_gmt>
        <wp:comment_content>
          A welcome addition. Good job. Have a favorite adult beverage and relax
          for a few hours.
        </wp:comment_content>
        <wp:comment_approved>
          1
        </wp:comment_approved>
      </wp:comment>
      <wp:comment>
        <wp:comment_id>
          299
        </wp:comment_id>
        <wp:comment_author>
          bunceg
        </wp:comment_author>
        <wp:comment_author_url>
          http://nhforge.org/members/bunceg/default.aspx
        </wp:comment_author_url>
        <wp:comment_author_email/>
        <wp:comment_author_IP/>
        <wp:comment_date_gmt>
          2009-05-07 08:37:58
        </wp:comment_date_gmt>
        <wp:comment_content>
          Good that 2.1 GA was postponed for this, but any news on how it is
          coming along? Is there an expected date?
        </wp:comment_content>
        <wp:comment_approved>
          1
        </wp:comment_approved>
      </wp:comment>
      <wp:comment>
        <wp:comment_id>
          300
        </wp:comment_id>
        <wp:comment_author>
          Fabio Maulo
        </wp:comment_author>
        <wp:comment_author_url>
          http://nhforge.org/members/fabiomaulo/default.aspx
        </wp:comment_author_url>
        <wp:comment_author_email/>
        <wp:comment_author_IP/>
        <wp:comment_date_gmt>
          2009-05-07 12:46:00
        </wp:comment_date_gmt>
        <wp:comment_content>
          not only for this....&quot;one of the reasons&quot; mean that there
          are some other but it is a matter of the main team.
        </wp:comment_content>
        <wp:comment_approved>
          1
        </wp:comment_approved>
      </wp:comment>
    </item>
    <item>
      <title>
        New Kid on the Block. And some info on Linq to NHibernate
      </title>
      <link>
        http://nhibernate.github.io/blogs/nhibernate/archive/2009/05/07/new-kid-on-the-block-and-some-info-on-linq-to-nhibernate.html
      </link>
      <dsq:thread_identifier>
        blogs_nhibernate_archive_2009_05_07_new-kid-on-the-block-and-some-info-on-linq-to-nhibernate
      </dsq:thread_identifier>
      <wp:post_date_gmt>
        2009-05-07 18:52:00
      </wp:post_date_gmt>
      <wp:comment>
        <wp:comment_id>
          319
        </wp:comment_id>
        <wp:comment_author>
          random0xff
        </wp:comment_author>
        <wp:comment_author_url>
          http://nhforge.org/members/random0xff/default.aspx
        </wp:comment_author_url>
        <wp:comment_author_email/>
        <wp:comment_author_IP/>
        <wp:comment_date_gmt>
          2009-05-18 20:07:09
        </wp:comment_date_gmt>
        <wp:comment_content>
          Not many comments here... I just wanted to let you know that I very
          much appreciate your work! Information about LINQ to NHibernate is
          hard to find, there are many old blog posts and even abandoned
          projects/branches out there (on Ayende&apos;s blog, on SourceForge). I
          understand from your blog it&apos;s a difficult project, best of luck!
        </wp:comment_content>
        <wp:comment_approved>
          1
        </wp:comment_approved>
      </wp:comment>
      <wp:comment>
        <wp:comment_id>
          321
        </wp:comment_id>
        <wp:comment_author>
          Kieran
        </wp:comment_author>
        <wp:comment_author_url>
          http://nhforge.org/members/kieranmaine/default.aspx
        </wp:comment_author_url>
        <wp:comment_author_email/>
        <wp:comment_author_IP/>
        <wp:comment_date_gmt>
          2009-05-19 23:32:18
        </wp:comment_date_gmt>
        <wp:comment_content>
          This sounds like a good move. How would one get involved with this?
        </wp:comment_content>
        <wp:comment_approved>
          1
        </wp:comment_approved>
      </wp:comment>
      <wp:comment>
        <wp:comment_id>
          397
        </wp:comment_id>
        <wp:comment_author>
          Mendelt
        </wp:comment_author>
        <wp:comment_author_url>
          http://mendeltsiebenga.com
        </wp:comment_author_url>
        <wp:comment_author_email/>
        <wp:comment_author_IP/>
        <wp:comment_date_gmt>
          2009-06-29 09:49:46
        </wp:comment_date_gmt>
        <wp:comment_content>
          Cool stuff! How does your work relate to the nhibernate.contrib
          nhibernate linq provider. Will this eventually replace that
          implementation or will they be combined?
        </wp:comment_content>
        <wp:comment_approved>
          1
        </wp:comment_approved>
      </wp:comment>
    </item>
    <item>
      <title>
        Oh… beautiful SQL
      </title>
      <link>
        http://nhibernate.github.io/blogs/nhibernate/archive/2009/05/08/oh-beautiful-sql.html
      </link>
      <dsq:thread_identifier>
        blogs_nhibernate_archive_2009_05_08_oh-beautiful-sql
      </dsq:thread_identifier>
      <wp:post_date_gmt>
        2009-05-08 13:39:00
      </wp:post_date_gmt>
    </item>
    <item>
      <title>
        NHibernate 2.1.0 : Executable queries
      </title>
      <link>
        http://nhibernate.github.io/blogs/nhibernate/archive/2009/05/13/nhibernate-2-1-0-executable-queries.html
      </link>
      <dsq:thread_identifier>
        blogs_nhibernate_archive_2009_05_13_nhibernate-2-1-0-executable-queries
      </dsq:thread_identifier>
      <wp:post_date_gmt>
        2009-05-13 05:00:00
      </wp:post_date_gmt>
      <wp:comment>
        <wp:comment_id>
          343
        </wp:comment_id>
        <wp:comment_author>
          zoechi
        </wp:comment_author>
        <wp:comment_author_url>
          http://devde.bewellup.com
        </wp:comment_author_url>
        <wp:comment_author_email/>
        <wp:comment_author_IP/>
        <wp:comment_date_gmt>
          2009-05-30 13:39:11
        </wp:comment_date_gmt>
        <wp:comment_content>
          I found that NH 2.1.0 1003 has problems when an entity class is named
          &quot;Object&quot;. I got an ANTLR exeption. Sorry but I don&apos;t
          have more specific exeption info at hand. I know Object is a
          suboptimal name for an Entity, but this was not my decision. After
          renaming the class it worked fine.
        </wp:comment_content>
        <wp:comment_approved>
          1
        </wp:comment_approved>
      </wp:comment>
    </item>
    <item>
      <title>
        NHibernate 2.1.0: HQL With clause
      </title>
      <link>
        http://nhibernate.github.io/blogs/nhibernate/archive/2009/05/17/nhibernate-2-1-0-hql-with-clause.html
      </link>
      <dsq:thread_identifier>
        blogs_nhibernate_archive_2009_05_17_nhibernate-2-1-0-hql-with-clause
      </dsq:thread_identifier>
      <wp:post_date_gmt>
        2009-05-17 19:56:00
      </wp:post_date_gmt>
      <wp:comment>
        <wp:comment_id>
          307
        </wp:comment_id>
        <wp:comment_author>
          jsevcik
        </wp:comment_author>
        <wp:comment_author_url>
          http://nhforge.org/members/jsevcik/default.aspx
        </wp:comment_author_url>
        <wp:comment_author_email/>
        <wp:comment_author_IP/>
        <wp:comment_date_gmt>
          2009-05-17 22:42:34
        </wp:comment_date_gmt>
        <wp:comment_content>
          &quot;there are some RDBMS not so smart (guess which one)&quot; Which
          one ? :)
        </wp:comment_content>
        <wp:comment_approved>
          1
        </wp:comment_approved>
      </wp:comment>
      <wp:comment>
        <wp:comment_id>
          337
        </wp:comment_id>
        <wp:comment_author>
          gunteman
        </wp:comment_author>
        <wp:comment_author_url>
          http://nhforge.org/members/gunteman/default.aspx
        </wp:comment_author_url>
        <wp:comment_author_email/>
        <wp:comment_author_IP/>
        <wp:comment_date_gmt>
          2009-05-28 09:19:59
        </wp:comment_date_gmt>
        <wp:comment_content>
          The real relevance comes with an OUTER JOIN, doesn&apos;t it?
        </wp:comment_content>
        <wp:comment_approved>
          1
        </wp:comment_approved>
      </wp:comment>
      <wp:comment>
        <wp:comment_id>
          338
        </wp:comment_id>
        <wp:comment_author>
          bunceg
        </wp:comment_author>
        <wp:comment_author_url>
          http://
        </wp:comment_author_url>
        <wp:comment_author_email/>
        <wp:comment_author_IP/>
        <wp:comment_date_gmt>
          2009-05-28 12:57:46
        </wp:comment_date_gmt>
        <wp:comment_content>
          umm... sorry am I missing something? Very impressive SQL generation
          but what&apos;s the difference between WITH and WHERE in this case?
        </wp:comment_content>
        <wp:comment_approved>
          1
        </wp:comment_approved>
      </wp:comment>
      <wp:comment>
        <wp:comment_id>
          339
        </wp:comment_id>
        <wp:comment_author>
          Min.Han
        </wp:comment_author>
        <wp:comment_author_url>
          http://nhforge.org/members/Min.Han/default.aspx
        </wp:comment_author_url>
        <wp:comment_author_email/>
        <wp:comment_author_IP/>
        <wp:comment_date_gmt>
          2009-05-28 13:52:13
        </wp:comment_date_gmt>
        <wp:comment_content>
          Thank you for the WITH clause. @bunceg, WITH let&apos;s you specify
          additional clauses on the JOINS. There are certain cases where you
          want to be able to do that.
        </wp:comment_content>
        <wp:comment_approved>
          1
        </wp:comment_approved>
      </wp:comment>
    </item>
    <item>
      <title>
        NHibernate Validator Quickstart
      </title>
      <link>
        http://nhibernate.github.io/blogs/nhibernate/archive/2009/05/18/nhibernate-validator-quickstart.html
      </link>
      <dsq:thread_identifier>
        blogs_nhibernate_archive_2009_05_18_nhibernate-validator-quickstart
      </dsq:thread_identifier>
      <wp:post_date_gmt>
        2009-05-18 04:31:00
      </wp:post_date_gmt>
      <wp:comment>
        <wp:comment_id>
          315
        </wp:comment_id>
        <wp:comment_author>
          sravansurabhi
        </wp:comment_author>
        <wp:comment_author_url>
          http://nhforge.org/members/sravansurabhi/default.aspx
        </wp:comment_author_url>
        <wp:comment_author_email/>
        <wp:comment_author_IP/>
        <wp:comment_date_gmt>
          2009-05-18 18:12:44
        </wp:comment_date_gmt>
        <wp:comment_content>
          This is really good. Just curious to know when can we expect the
          Validation Framework to work with WPF
        </wp:comment_content>
        <wp:comment_approved>
          1
        </wp:comment_approved>
      </wp:comment>
      <wp:comment>
        <wp:comment_id>
          316
        </wp:comment_id>
        <wp:comment_author>
          Dario Quintana
        </wp:comment_author>
        <wp:comment_author_url>
          http://nhforge.org/members/darioquintana/default.aspx
        </wp:comment_author_url>
        <wp:comment_author_email/>
        <wp:comment_author_IP/>
        <wp:comment_date_gmt>
          2009-05-18 18:22:13
        </wp:comment_date_gmt>
        <wp:comment_content>
          NHV is ready, somebody with WPF skills has to write an
          example/framework on top NHV to support integration. Btw, without a
          framework you can still using NHV on WPF.
        </wp:comment_content>
        <wp:comment_approved>
          1
        </wp:comment_approved>
      </wp:comment>
      <wp:comment>
        <wp:comment_id>
          317
        </wp:comment_id>
        <wp:comment_author>
          sravansurabhi
        </wp:comment_author>
        <wp:comment_author_url>
          http://nhforge.org/members/sravansurabhi/default.aspx
        </wp:comment_author_url>
        <wp:comment_author_email/>
        <wp:comment_author_IP/>
        <wp:comment_date_gmt>
          2009-05-18 18:47:59
        </wp:comment_date_gmt>
        <wp:comment_content>
          Thanks a lot. It will be good if we have an example similar to
          WinForms example.
        </wp:comment_content>
        <wp:comment_approved>
          1
        </wp:comment_approved>
      </wp:comment>
      <wp:comment>
        <wp:comment_id>
          318
        </wp:comment_id>
        <wp:comment_author>
          sravansurabhi
        </wp:comment_author>
        <wp:comment_author_url>
          http://nhforge.org/members/sravansurabhi/default.aspx
        </wp:comment_author_url>
        <wp:comment_author_email/>
        <wp:comment_author_IP/>
        <wp:comment_date_gmt>
          2009-05-18 18:50:29
        </wp:comment_date_gmt>
        <wp:comment_content>
          NHibernate.Validator.Binding project in winForms exampe works only
          with WinForms. I am expecting a similar project for WPF.
        </wp:comment_content>
        <wp:comment_approved>
          1
        </wp:comment_approved>
      </wp:comment>
      <wp:comment>
        <wp:comment_id>
          543
        </wp:comment_id>
        <wp:comment_author>
          Rodrigo Juarez
        </wp:comment_author>
        <wp:comment_author_url>
          http://nhforge.org/members/Rodrigo-Juarez/default.aspx
        </wp:comment_author_url>
        <wp:comment_author_email/>
        <wp:comment_author_IP/>
        <wp:comment_date_gmt>
          2009-11-16 06:27:16
        </wp:comment_date_gmt>
        <wp:comment_content>
          The source code for NHibernate.Validator.Binding is only in the
          example? It will be part of the bin distribution?
        </wp:comment_content>
        <wp:comment_approved>
          1
        </wp:comment_approved>
      </wp:comment>
      <wp:comment>
        <wp:comment_id>
          544
        </wp:comment_id>
        <wp:comment_author>
          Dario Quintana
        </wp:comment_author>
        <wp:comment_author_url>
          http://nhforge.org/members/darioquintana/default.aspx
        </wp:comment_author_url>
        <wp:comment_author_email/>
        <wp:comment_author_IP/>
        <wp:comment_date_gmt>
          2009-11-16 10:20:21
        </wp:comment_date_gmt>
        <wp:comment_content>
          It&apos;s only in the example and won&apos;t be part of the
          distribution.
        </wp:comment_content>
        <wp:comment_approved>
          1
        </wp:comment_approved>
      </wp:comment>
    </item>
    <item>
      <title>
        Using The Guid.Comb Identifier Strategy
      </title>
      <link>
        http://nhibernate.github.io/blogs/nhibernate/archive/2009/05/21/using-the-guid-comb-identifier-strategy.html
      </link>
      <dsq:thread_identifier>
        blogs_nhibernate_archive_2009_05_21_using-the-guid-comb-identifier-strategy
      </dsq:thread_identifier>
      <wp:post_date_gmt>
        2009-05-21 11:48:00
      </wp:post_date_gmt>
    </item>
    <item>
      <title>
        NHibernate 2.1.0Alpha3
      </title>
      <link>
        http://nhibernate.github.io/blogs/nhibernate/archive/2009/05/24/nhibernate-2-1-0alpha3.html
      </link>
      <dsq:thread_identifier>
        blogs_nhibernate_archive_2009_05_24_nhibernate-2-1-0alpha3
      </dsq:thread_identifier>
      <wp:post_date_gmt>
        2009-05-24 14:55:00
      </wp:post_date_gmt>
    </item>
    <item>
      <title>
        TOP SECRET
      </title>
      <link>
        http://nhibernate.github.io/blogs/nhibernate/archive/2009/05/27/top-secret.html
      </link>
      <dsq:thread_identifier>
        blogs_nhibernate_archive_2009_05_27_top-secret
      </dsq:thread_identifier>
      <wp:post_date_gmt>
        2009-05-27 13:14:47
      </wp:post_date_gmt>
      <wp:comment>
        <wp:comment_id>
          334
        </wp:comment_id>
        <wp:comment_author>
          Min.Han
        </wp:comment_author>
        <wp:comment_author_url>
          http://nhforge.org/members/Min.Han/default.aspx
        </wp:comment_author_url>
        <wp:comment_author_email/>
        <wp:comment_author_IP/>
        <wp:comment_date_gmt>
          2009-05-27 18:08:32
        </wp:comment_date_gmt>
        <wp:comment_content>
          &lt;p&gt;What&apos;s even better is that people who work on NHibernate
          might not even be in the same country that you work for.&lt;/p&gt;
          &lt;p&gt;Wait... You can use a nullable value type for the
          id?&lt;/p&gt;
        </wp:comment_content>
        <wp:comment_approved>
          1
        </wp:comment_approved>
      </wp:comment>
      <wp:comment>
        <wp:comment_id>
          335
        </wp:comment_id>
        <wp:comment_author>
          Fabio Maulo
        </wp:comment_author>
        <wp:comment_author_url>
          http://nhforge.org/members/fabiomaulo/default.aspx
        </wp:comment_author_url>
        <wp:comment_author_email/>
        <wp:comment_author_IP/>
        <wp:comment_date_gmt>
          2009-05-27 18:23:57
        </wp:comment_date_gmt>
        <wp:comment_content>
          Sure you can, but after that you should ask to yourself for what you
          are using a nullable type in something will be a PK (especially when,
          as you can see in the mapping, you are using identity).
        </wp:comment_content>
        <wp:comment_approved>
          1
        </wp:comment_approved>
      </wp:comment>
      <wp:comment>
        <wp:comment_id>
          336
        </wp:comment_id>
        <wp:comment_author>
          Stefan Steinegger
        </wp:comment_author>
        <wp:comment_author_url>
          http://nhforge.org/members/ssteinegger/default.aspx
        </wp:comment_author_url>
        <wp:comment_author_email/>
        <wp:comment_author_IP/>
        <wp:comment_date_gmt>
          2009-05-28 08:53:30
        </wp:comment_date_gmt>
        <wp:comment_content>
          Names like &quot;xparent&quot; and &quot;xchild&quot; are much too
          descriptive. Even better are names that are very specific to a certain
          project and also in a foreign language. For instance: Class
          &quot;HqBericht&quot; with the properties &quot;HqMuell&quot;,
          &quot;KlsLassdas&quot; and &quot;HjhNixverstahn&quot; and the Table
          &quot;PwjHumbug&quot; with the Properties &quot;QuatschMitSosse&quot;,
          &quot;Hampelmann&quot; and &quot;TammiSchnaegg&quot;. The issue reads
          like this: &quot;Always when I get a list of HqBericht with my (top
          secret) query and filter for QuatschMitSosse in PwjHumbug that is
          referenced by the HjhNixverstahn property, I get not what I expect.
          When I use my filter &quot;Murx&quot; it works, it is the same but
          additionally I filter for Hampelmann. The bug is, that HjhNixverstahn
          (what was this again?) is not loaded correctly when not filtered with
          Hampelmann&quot;...
        </wp:comment_content>
        <wp:comment_approved>
          1
        </wp:comment_approved>
      </wp:comment>
      <wp:comment>
        <wp:comment_id>
          340
        </wp:comment_id>
        <wp:comment_author>
          Fabio Maulo
        </wp:comment_author>
        <wp:comment_author_url>
          http://nhforge.org/members/fabiomaulo/default.aspx
        </wp:comment_author_url>
        <wp:comment_author_email/>
        <wp:comment_author_IP/>
        <wp:comment_date_gmt>
          2009-05-28 15:15:06
        </wp:comment_date_gmt>
        <wp:comment_content>
          Sure Steve, an issue with a description as your (here) would be even
          better than my example.
        </wp:comment_content>
        <wp:comment_approved>
          1
        </wp:comment_approved>
      </wp:comment>
      <wp:comment>
        <wp:comment_id>
          341
        </wp:comment_id>
        <wp:comment_author>
          Krzysztof Kozmic
        </wp:comment_author>
        <wp:comment_author_url>
          http://kozmic.pl
        </wp:comment_author_url>
        <wp:comment_author_email/>
        <wp:comment_author_IP/>
        <wp:comment_date_gmt>
          2009-05-29 13:59:00
        </wp:comment_date_gmt>
        <wp:comment_content>
          Stefan This is trivial - you should group by QuatschMitSosse and then
          filter by HjhNixverstahn - then it&apos;ll work ;)
        </wp:comment_content>
        <wp:comment_approved>
          1
        </wp:comment_approved>
      </wp:comment>
    </item>
    <item>
      <title>
        NHibernate IoC integration
      </title>
      <link>
        http://nhibernate.github.io/blogs/nhibernate/archive/2009/05/30/nhibernate-ioc-integration.html
      </link>
      <dsq:thread_identifier>
        blogs_nhibernate_archive_2009_05_30_nhibernate-ioc-integration
      </dsq:thread_identifier>
      <wp:post_date_gmt>
        2009-05-30 13:20:00
      </wp:post_date_gmt>
    </item>
    <item>
      <title>
        Documentation Project Launch
      </title>
      <link>
        http://nhibernate.github.io/blogs/nhibernate/archive/2009/06/02/documentation-project-launch.html
      </link>
      <dsq:thread_identifier>
        blogs_nhibernate_archive_2009_06_02_documentation-project-launch
      </dsq:thread_identifier>
      <wp:post_date_gmt>
        2009-06-02 16:52:00
      </wp:post_date_gmt>
      <wp:comment>
        <wp:comment_id>
          345
        </wp:comment_id>
        <wp:comment_author>
          Fred Morrison
        </wp:comment_author>
        <wp:comment_author_url>
          http://nhforge.org/members/fmorriso/default.aspx
        </wp:comment_author_url>
        <wp:comment_author_email/>
        <wp:comment_author_IP/>
        <wp:comment_date_gmt>
          2009-06-03 16:50:00
        </wp:comment_date_gmt>
        <wp:comment_content>
          In addition to Reference type documentation I would like to suggest a
          &quot;NHibernate Cookbook&quot; type of documentation. That style of
          documentation would be patterned after &quot;C# 3.0 Cookbook&quot;
          (O&apos;Reilly books) in which a single &quot;recipe&quot; is
          discussed in one or two pages with a &quot;Problem&quot;,
          &quot;Solution&quot; (including code), &quot;Discussion&quot; and
          &quot;See Also&quot;. Each recipe takes only 2-3 pages total.
        </wp:comment_content>
        <wp:comment_approved>
          1
        </wp:comment_approved>
      </wp:comment>
      <wp:comment>
        <wp:comment_id>
          377
        </wp:comment_id>
        <wp:comment_author>
          Jon
        </wp:comment_author>
        <wp:comment_author_url>
          http://nhforge.org/members/jemiller/default.aspx
        </wp:comment_author_url>
        <wp:comment_author_email/>
        <wp:comment_author_IP/>
        <wp:comment_date_gmt>
          2009-06-23 05:21:34
        </wp:comment_date_gmt>
        <wp:comment_content>
          I&apos;d like to know what happened to the API docs? i.e the ones that
          integrate into Visual Studio Help. Have they been discontinued? It
          really makes you wonder about this project under it&apos;s new
          leadership when the documentation is missing.
        </wp:comment_content>
        <wp:comment_approved>
          1
        </wp:comment_approved>
      </wp:comment>
      <wp:comment>
        <wp:comment_id>
          378
        </wp:comment_id>
        <wp:comment_author>
          Stefan Steinegger
        </wp:comment_author>
        <wp:comment_author_url>
          http://nhforge.org/members/ssteinegger/default.aspx
        </wp:comment_author_url>
        <wp:comment_author_email/>
        <wp:comment_author_IP/>
        <wp:comment_date_gmt>
          2009-06-23 06:38:37
        </wp:comment_date_gmt>
        <wp:comment_content>
          I aim to a printable documentation. API docs are usually not in a
          printable form. Of course it would also be nice to have it online
          somewhere. You&apos;re welcome to contribute, then you don&apos;t need
          to wonder about this project anymore :-)
        </wp:comment_content>
        <wp:comment_approved>
          1
        </wp:comment_approved>
      </wp:comment>
      <wp:comment>
        <wp:comment_id>
          381
        </wp:comment_id>
        <wp:comment_author>
          Jon
        </wp:comment_author>
        <wp:comment_author_url>
          http://nhforge.org/members/jemiller/default.aspx
        </wp:comment_author_url>
        <wp:comment_author_email/>
        <wp:comment_author_IP/>
        <wp:comment_date_gmt>
          2009-06-23 21:00:05
        </wp:comment_date_gmt>
        <wp:comment_content>
          Don&apos;t you already have a script for generating the Visual Studio
          docs? I&apos;m sure I&apos;m not the only one that found that
          documentation useful. So, you&apos;re saying that at present there are
          no API docs?
        </wp:comment_content>
        <wp:comment_approved>
          1
        </wp:comment_approved>
      </wp:comment>
      <wp:comment>
        <wp:comment_id>
          385
        </wp:comment_id>
        <wp:comment_author>
          Stefan Steinegger
        </wp:comment_author>
        <wp:comment_author_url>
          http://nhforge.org/members/ssteinegger/default.aspx
        </wp:comment_author_url>
        <wp:comment_author_email/>
        <wp:comment_author_IP/>
        <wp:comment_date_gmt>
          2009-06-24 06:35:07
        </wp:comment_date_gmt>
        <wp:comment_content>
          Not sure what you mean. The API docs are distributed with the
          assemblies as xml files. I use them only within visual studio, these
          tooltip-style boxes. Afaik, there is no generated html around. But I
          might be wrong.
        </wp:comment_content>
        <wp:comment_approved>
          1
        </wp:comment_approved>
      </wp:comment>
      <wp:comment>
        <wp:comment_id>
          387
        </wp:comment_id>
        <wp:comment_author>
          Jon
        </wp:comment_author>
        <wp:comment_author_url>
          http://nhforge.org/members/jemiller/default.aspx
        </wp:comment_author_url>
        <wp:comment_author_email/>
        <wp:comment_author_IP/>
        <wp:comment_date_gmt>
          2009-06-24 19:00:22
        </wp:comment_date_gmt>
        <wp:comment_content>
          There used to be a .chm file and an installer that would integrate the
          API documentation with Visual Studio 2008&apos;s help viewer. It was
          nice because it was fully integrated and looked like Microsoft&apos;s
          normal documentation. I think Dynamic Help would work with it also.
        </wp:comment_content>
        <wp:comment_approved>
          1
        </wp:comment_approved>
      </wp:comment>
      <wp:comment>
        <wp:comment_id>
          389
        </wp:comment_id>
        <wp:comment_author>
          Stefan Steinegger
        </wp:comment_author>
        <wp:comment_author_url>
          http://nhforge.org/members/ssteinegger/default.aspx
        </wp:comment_author_url>
        <wp:comment_author_email/>
        <wp:comment_author_IP/>
        <wp:comment_date_gmt>
          2009-06-25 12:29:34
        </wp:comment_date_gmt>
        <wp:comment_content>
          Ah, now I understand what you mean. It&apos;s a long time since I used
          an installer of NHibernate :-) This actually doesn&apos;t have to do
          much with the manual, since there are different people writing it and
          different tools to create it and finally a different release time.
          Honestly, I have enough work to do on the manual and will not care
          about API docs in the near future. It&apos;s actually just about
          applying the right tools, but I don&apos;t know these tools.
        </wp:comment_content>
        <wp:comment_approved>
          1
        </wp:comment_approved>
      </wp:comment>
    </item>
    <item>
      <title>
        Architecture Diagram Rework
      </title>
      <link>
        http://nhibernate.github.io/blogs/nhibernate/archive/2009/06/04/architecture-diagram-rework.html
      </link>
      <dsq:thread_identifier>
        blogs_nhibernate_archive_2009_06_04_architecture-diagram-rework
      </dsq:thread_identifier>
      <wp:post_date_gmt>
        2009-06-04 13:34:00
      </wp:post_date_gmt>
      <wp:comment>
        <wp:comment_id>
          348
        </wp:comment_id>
        <wp:comment_author>
          rcarlomagno
        </wp:comment_author>
        <wp:comment_author_url>
          http://
        </wp:comment_author_url>
        <wp:comment_author_email/>
        <wp:comment_author_IP/>
        <wp:comment_date_gmt>
          2009-06-04 15:09:25
        </wp:comment_date_gmt>
        <wp:comment_content>
          very useful diagram, but just a detail to consider if you want, what
          about using office&apos;s 2007 diagrams? they are visually richer keep
          on with this project, it was necessary if you need some help, i wish
          to collaborate 
        </wp:comment_content>
        <wp:comment_approved>
          1
        </wp:comment_approved>
      </wp:comment>
      <wp:comment>
        <wp:comment_id>
          349
        </wp:comment_id>
        <wp:comment_author>
          cbolyard
        </wp:comment_author>
        <wp:comment_author_url>
          http://nhforge.org/members/cbolyard/default.aspx
        </wp:comment_author_url>
        <wp:comment_author_email/>
        <wp:comment_author_IP/>
        <wp:comment_date_gmt>
          2009-06-04 16:27:03
        </wp:comment_date_gmt>
        <wp:comment_content>
          Very nice!
        </wp:comment_content>
        <wp:comment_approved>
          1
        </wp:comment_approved>
      </wp:comment>
      <wp:comment>
        <wp:comment_id>
          350
        </wp:comment_id>
        <wp:comment_author>
          Fred Morrison
        </wp:comment_author>
        <wp:comment_author_url>
          http://nhforge.org/members/fmorriso/default.aspx
        </wp:comment_author_url>
        <wp:comment_author_email/>
        <wp:comment_author_IP/>
        <wp:comment_date_gmt>
          2009-06-04 16:34:42
        </wp:comment_date_gmt>
        <wp:comment_content>
          Your new diagram is much more understandable, but I&apos;m fairly new
          to NH, so take that for what it&apos;s worth.
        </wp:comment_content>
        <wp:comment_approved>
          1
        </wp:comment_approved>
      </wp:comment>
      <wp:comment>
        <wp:comment_id>
          351
        </wp:comment_id>
        <wp:comment_author>
          Simon Martin
        </wp:comment_author>
        <wp:comment_author_url>
          http://nhforge.org/members/SimonMartin/default.aspx
        </wp:comment_author_url>
        <wp:comment_author_email/>
        <wp:comment_author_IP/>
        <wp:comment_date_gmt>
          2009-06-04 16:54:57
        </wp:comment_date_gmt>
        <wp:comment_content>
          I&apos;m also quite new to NH but the new diagram is easier, for me,
          to understand too
        </wp:comment_content>
        <wp:comment_approved>
          1
        </wp:comment_approved>
      </wp:comment>
      <wp:comment>
        <wp:comment_id>
          352
        </wp:comment_id>
        <wp:comment_author>
          Dario Quintana
        </wp:comment_author>
        <wp:comment_author_url>
          http://nhforge.org/members/darioquintana/default.aspx
        </wp:comment_author_url>
        <wp:comment_author_email/>
        <wp:comment_author_IP/>
        <wp:comment_date_gmt>
          2009-06-04 18:39:52
        </wp:comment_date_gmt>
        <wp:comment_content>
          The &apos;Business Logic&apos; could lead to confusion since
          &apos;cause there is only one book to design the model of our
          application. With an square that says: &apos;Objects Model&apos; OR
          &apos;Model&apos; is ok. BTW, where are the Transients and Persistent
          objects ? Also we need maybe to mention to the Detached objects
        </wp:comment_content>
        <wp:comment_approved>
          1
        </wp:comment_approved>
      </wp:comment>
      <wp:comment>
        <wp:comment_id>
          353
        </wp:comment_id>
        <wp:comment_author>
          Stefan Steinegger
        </wp:comment_author>
        <wp:comment_author_url>
          http://nhforge.org/members/ssteinegger/default.aspx
        </wp:comment_author_url>
        <wp:comment_author_email/>
        <wp:comment_author_IP/>
        <wp:comment_date_gmt>
          2009-06-04 20:28:48
        </wp:comment_date_gmt>
        <wp:comment_content>
          @Dario: I&apos;m not sure if I understand what you mean with
          &quot;only one book to design the model&quot;. The Business Model are
          the entities that are mapped, the Business Logic are services or other
          classes that implement the logic. I actually skipped the Transient and
          Persistent Objects by purpose, for me it was very confusing. And - as
          you say - not complete, because there are also Detached Objects. But
          these are object states, IMO this is not part of an architecture
          diagram. The business objects don&apos;t care about their persistency
          state. @rcarlomagno: There are actually three reasons why I
          wouldn&apos;t use office 2007: 1) I don&apos;t have it 2) others
          don&apos;t have it and contributing on open source software should be
          for free :-) 3) With &quot;visually richer&quot; you probably mean
          &quot;glossy 3d buttons&quot;. I don&apos;t like glossy 3d buttons.
          Everyone has glossy 3d buttons. It&apos;s like chocolate for
          breakfast, for lunch and for dinner. I mean, I&apos;m swiss after all,
          but too much chocolate doesn&apos;t make me happier. And, yes, I need
          help and your collaboration would be much appreciated. For the moment,
          I&apos;m building up the structure and getting feedback from the
          community like this, but later I will need some people for different
          tasks. I will collection some Email addresses until then and contact
          everyone that wants to help.
        </wp:comment_content>
        <wp:comment_approved>
          1
        </wp:comment_approved>
      </wp:comment>
      <wp:comment>
        <wp:comment_id>
          354
        </wp:comment_id>
        <wp:comment_author>
          csokun
        </wp:comment_author>
        <wp:comment_author_url>
          http://chornsokun.wordpress.com
        </wp:comment_author_url>
        <wp:comment_author_email/>
        <wp:comment_author_IP/>
        <wp:comment_date_gmt>
          2009-06-05 01:40:25
        </wp:comment_date_gmt>
        <wp:comment_content>
          Stefen, what the diff between DB Driver box &amp; ADO.NET? Where all
          the ODBC &amp; OLEDB gone?
        </wp:comment_content>
        <wp:comment_approved>
          1
        </wp:comment_approved>
      </wp:comment>
      <wp:comment>
        <wp:comment_id>
          355
        </wp:comment_id>
        <wp:comment_author>
          Stefan Steinegger
        </wp:comment_author>
        <wp:comment_author_url>
          http://nhforge.org/members/ssteinegger/default.aspx
        </wp:comment_author_url>
        <wp:comment_author_email/>
        <wp:comment_author_IP/>
        <wp:comment_date_gmt>
          2009-06-05 06:35:14
        </wp:comment_date_gmt>
        <wp:comment_content>
          @Chorn: The DB Driver is the NHibernate driver which can be
          configured. ODBC and OLEDB is gone to the not-important-enough-heaven.
          Again: I didn&apos;t try to draw the same picture with more colors, I
          tried to draw a new picture. Do you think ODBC and OLEDB are important
          to be mentioned?
        </wp:comment_content>
        <wp:comment_approved>
          1
        </wp:comment_approved>
      </wp:comment>
      <wp:comment>
        <wp:comment_id>
          356
        </wp:comment_id>
        <wp:comment_author>
          Dario Quintana
        </wp:comment_author>
        <wp:comment_author_url>
          http://nhforge.org/members/darioquintana/default.aspx
        </wp:comment_author_url>
        <wp:comment_author_email/>
        <wp:comment_author_IP/>
        <wp:comment_date_gmt>
          2009-06-05 17:30:51
        </wp:comment_date_gmt>
        <wp:comment_content>
          Hi Stefan, NHibernate doesn&apos;t talks in this language:
          &quot;Business Object&quot; &quot;Business Logic&quot;. The NH
          language is talked with Persistent, Detached and Transient entities.
          The phrase: &quot;only one book to design the model&quot; was wrong: I
          meant &quot;thereisn&apos;t one only book to design the model&quot;,
          sorry about that. Talking about &quot;Business Objects&quot; and
          &quot;Business Logic&quot; seems you following one book. I know what
          you mean by using those therms, but you are saying nothing. Imagine
          that later came a DDD guy and make another diagram, how suppose the
          diagram should look like? Doesn&apos;t matter if the terms Persistent,
          Detached and Transient entities cause confusion, they ARE very
          important concepts and shoudn&apos;t be removed. If they cause
          confusion, must re-read them again and again. Cheers
        </wp:comment_content>
        <wp:comment_approved>
          1
        </wp:comment_approved>
      </wp:comment>
      <wp:comment>
        <wp:comment_id>
          357
        </wp:comment_id>
        <wp:comment_author>
          Stefan Steinegger
        </wp:comment_author>
        <wp:comment_author_url>
          http://nhforge.org/members/ssteinegger/default.aspx
        </wp:comment_author_url>
        <wp:comment_author_email/>
        <wp:comment_author_IP/>
        <wp:comment_date_gmt>
          2009-06-06 06:52:28
        </wp:comment_date_gmt>
        <wp:comment_content>
          Hm, of course I don&apos;t want to talk about a certain architecture
          approach. But to me, Business Objects and Business Logic are very
          common terms, and also fit to DDD approaches. I tried to show a common
          application that is NOT influenced by NH. If I would use NH terms in
          the application layer, it seems as if the application design would
          highly depend on NH, as if one had to write specific classes
          (&quot;Persistent Objects&quot; for instance) only for NH. This is not
          true, it&apos;s misleading and confusing. See
          http://en.wikipedia.org/wiki/Business_object_(computer_science) and
          http://en.wikipedia.org/wiki/Business_logic If you know better, more
          common and neutral terms, I&apos;d use them. The object states ARE
          very important, but not for the architecture. They are shown in a
          different diagram and explained separately in detail. I can&apos;t
          show terms from different dimensions in the same diagram.
        </wp:comment_content>
        <wp:comment_approved>
          1
        </wp:comment_approved>
      </wp:comment>
      <wp:comment>
        <wp:comment_id>
          364
        </wp:comment_id>
        <wp:comment_author>
          benhyrman
        </wp:comment_author>
        <wp:comment_author_url>
          http://nhforge.org/members/benhyrman/default.aspx
        </wp:comment_author_url>
        <wp:comment_author_email/>
        <wp:comment_author_IP/>
        <wp:comment_date_gmt>
          2009-06-09 13:09:16
        </wp:comment_date_gmt>
        <wp:comment_content>
          I like it. Understanding transient, persistent, and detached objects
          are important, but not necessarily from an architectural view. Rather,
          they&apos;re states of an object in it&apos;s relation to (or lack of
          relation with) the Session. While Business Logic and Business Model
          are the correct term, they suffer from SemanticDiffusion
          (martinfowler.com/bliki/SemanticDiffusion.html). Maybe just call it
          Logic, Model. Also, while someone should understand O/R by this point,
          would it be cleaner to call those NHibernate Mapping Files? Calling
          them O/R mapping files implies a certain generic flavor of the
          implementation while it&apos;s actually a function of the ORM&apos;s
          needs (ORMs don&apos;t use the same maps, not all ORMs need maps)
        </wp:comment_content>
        <wp:comment_approved>
          1
        </wp:comment_approved>
      </wp:comment>
      <wp:comment>
        <wp:comment_id>
          365
        </wp:comment_id>
        <wp:comment_author>
          Stefan Steinegger
        </wp:comment_author>
        <wp:comment_author_url>
          http://nhforge.org/members/ssteinegger/default.aspx
        </wp:comment_author_url>
        <wp:comment_author_email/>
        <wp:comment_author_IP/>
        <wp:comment_date_gmt>
          2009-06-10 08:25:33
        </wp:comment_date_gmt>
        <wp:comment_content>
          @benhyrman: Thanks for your feedback. Logic and Model might be fine. I
          agree with the NHibernate Mapping Files, but I actually also
          don&apos;t like the term &quot;files&quot; there. It should be rather
          a &quot;NHibernate Mapping Definition&quot; or something. On the other
          hand, &quot;files&quot; sounds familiar and friendlier.
        </wp:comment_content>
        <wp:comment_approved>
          1
        </wp:comment_approved>
      </wp:comment>
      <wp:comment>
        <wp:comment_id>
          366
        </wp:comment_id>
        <wp:comment_author>
          benhyrman
        </wp:comment_author>
        <wp:comment_author_url>
          http://nhforge.org/members/benhyrman/default.aspx
        </wp:comment_author_url>
        <wp:comment_author_email/>
        <wp:comment_author_IP/>
        <wp:comment_date_gmt>
          2009-06-11 02:41:19
        </wp:comment_date_gmt>
        <wp:comment_content>
          Well, how about NHibernate Maps or NHibernate Mappings or well,
          I&apos;ll think about it some more I think it&apos;s a great step
          forward even as-is.
        </wp:comment_content>
        <wp:comment_approved>
          1
        </wp:comment_approved>
      </wp:comment>
      <wp:comment>
        <wp:comment_id>
          997
        </wp:comment_id>
        <wp:comment_author>
          Andre
        </wp:comment_author>
        <wp:comment_author_url>
          http://
        </wp:comment_author_url>
        <wp:comment_author_email/>
        <wp:comment_author_IP/>
        <wp:comment_date_gmt>
          2011-10-28 08:31:16
        </wp:comment_date_gmt>
        <wp:comment_content>
          Hi Stefan, Which application did you use to draw your diagrams?
        </wp:comment_content>
        <wp:comment_approved>
          1
        </wp:comment_approved>
      </wp:comment>
    </item>
    <item>
      <title>
        NHibernate 2.1.0Beta1
      </title>
      <link>
        http://nhibernate.github.io/blogs/nhibernate/archive/2009/06/07/nhibernate-2-1-0beta1.html
      </link>
      <dsq:thread_identifier>
        blogs_nhibernate_archive_2009_06_07_nhibernate-2-1-0beta1
      </dsq:thread_identifier>
      <wp:post_date_gmt>
        2009-06-07 15:28:00
      </wp:post_date_gmt>
      <wp:comment>
        <wp:comment_id>
          359
        </wp:comment_id>
        <wp:comment_author>
          Stefan Steinegger
        </wp:comment_author>
        <wp:comment_author_url>
          http://nhforge.org/members/ssteinegger/default.aspx
        </wp:comment_author_url>
        <wp:comment_author_email/>
        <wp:comment_author_IP/>
        <wp:comment_date_gmt>
          2009-06-07 15:31:26
        </wp:comment_date_gmt>
        <wp:comment_content>
          Thanks a lot, Fabio. I will check it out as soon a possible.
        </wp:comment_content>
        <wp:comment_approved>
          1
        </wp:comment_approved>
      </wp:comment>
    </item>
    <item>
      <title>
        NHibernate Cache Providers 2.1.0Alpha1
      </title>
      <link>
        http://nhibernate.github.io/blogs/nhibernate/archive/2009/06/07/nhibernate-cache-providers-2-1-0alpha1.html
      </link>
      <dsq:thread_identifier>
        blogs_nhibernate_archive_2009_06_07_nhibernate-cache-providers-2-1-0alpha1
      </dsq:thread_identifier>
      <wp:post_date_gmt>
        2009-06-07 17:03:00
      </wp:post_date_gmt>
      <wp:comment>
        <wp:comment_id>
          361
        </wp:comment_id>
        <wp:comment_author>
          Stefan Steinegger
        </wp:comment_author>
        <wp:comment_author_url>
          http://nhforge.org/members/ssteinegger/default.aspx
        </wp:comment_author_url>
        <wp:comment_author_email/>
        <wp:comment_author_IP/>
        <wp:comment_date_gmt>
          2009-06-07 18:32:12
        </wp:comment_date_gmt>
        <wp:comment_content>
          Someone seems to be quite busy this weekend! Thanks for the incredible
          work.
        </wp:comment_content>
        <wp:comment_approved>
          1
        </wp:comment_approved>
      </wp:comment>
    </item>
    <item>
      <title>
        LINQ to NHibernate Update
      </title>
      <link>
        http://nhibernate.github.io/blogs/nhibernate/archive/2009/06/11/linq-to-nhibernate-update.html
      </link>
      <dsq:thread_identifier>
        blogs_nhibernate_archive_2009_06_11_linq-to-nhibernate-update
      </dsq:thread_identifier>
      <wp:post_date_gmt>
        2009-06-11 13:50:40
      </wp:post_date_gmt>
      <wp:comment>
        <wp:comment_id>
          368
        </wp:comment_id>
        <wp:comment_author>
          cbolyard
        </wp:comment_author>
        <wp:comment_author_url>
          http://nhforge.org/members/cbolyard/default.aspx
        </wp:comment_author_url>
        <wp:comment_author_email/>
        <wp:comment_author_IP/>
        <wp:comment_date_gmt>
          2009-06-12 15:12:27
        </wp:comment_date_gmt>
        <wp:comment_content>
          No pressure! I&apos;m just glad you are working on it. It will make
          the work lives of many people so much nicer. It may not be enough, but
          thanks for all your hard work!
        </wp:comment_content>
        <wp:comment_approved>
          1
        </wp:comment_approved>
      </wp:comment>
      <wp:comment>
        <wp:comment_id>
          370
        </wp:comment_id>
        <wp:comment_author>
          bjorn
        </wp:comment_author>
        <wp:comment_author_url>
          http://nhforge.org/members/bai/default.aspx
        </wp:comment_author_url>
        <wp:comment_author_email/>
        <wp:comment_author_IP/>
        <wp:comment_date_gmt>
          2009-06-13 06:46:53
        </wp:comment_date_gmt>
        <wp:comment_content>
          Thanks for the update, looking forward to it. Keep up the excellent
          work!
        </wp:comment_content>
        <wp:comment_approved>
          1
        </wp:comment_approved>
      </wp:comment>
      <wp:comment>
        <wp:comment_id>
          380
        </wp:comment_id>
        <wp:comment_author>
          Darren Kopp
        </wp:comment_author>
        <wp:comment_author_url>
          http://nhforge.org/members/Darren-Kopp/default.aspx
        </wp:comment_author_url>
        <wp:comment_author_email/>
        <wp:comment_author_IP/>
        <wp:comment_date_gmt>
          2009-06-23 15:42:40
        </wp:comment_date_gmt>
        <wp:comment_content>
          please please please can i make one request? please support something
          like this (that you can&apos;t do w/ current linq implementation but
          can w/ linq 2 sql): from user in session.Linq&lt;User&gt; from order
          in session.Linq&lt;Order&gt; from cart in
          session.Linq&lt;ShoppingCart&gt; where cart.User.Id == user.Id
          &amp;&amp; order.CartId == cart.Id bad example, but the ability to use
          multiple contexts would be soooo helpful. 
        </wp:comment_content>
        <wp:comment_approved>
          1
        </wp:comment_approved>
      </wp:comment>
      <wp:comment>
        <wp:comment_id>
          398
        </wp:comment_id>
        <wp:comment_author>
          Nick Kellett
        </wp:comment_author>
        <wp:comment_author_url>
          http://nhforge.org/members/NickKellett/default.aspx
        </wp:comment_author_url>
        <wp:comment_author_email/>
        <wp:comment_author_IP/>
        <wp:comment_date_gmt>
          2009-06-30 16:56:59
        </wp:comment_date_gmt>
        <wp:comment_content>
          Thanks for the great work Steve! This is very exciting.
        </wp:comment_content>
        <wp:comment_approved>
          1
        </wp:comment_approved>
      </wp:comment>
      <wp:comment>
        <wp:comment_id>
          752
        </wp:comment_id>
        <wp:comment_author>
          Diego AC
        </wp:comment_author>
        <wp:comment_author_url>
          http://
        </wp:comment_author_url>
        <wp:comment_author_email/>
        <wp:comment_author_IP/>
        <wp:comment_date_gmt>
          2010-12-21 03:35:45
        </wp:comment_date_gmt>
        <wp:comment_content>
          Hey there! I would like to say thanks for developing things like
          LinqToNHibernate. You guys ROCK!
        </wp:comment_content>
        <wp:comment_approved>
          1
        </wp:comment_approved>
      </wp:comment>
    </item>
    <item>
      <title>
        From where start to implements IDataBaseSchema
      </title>
      <link>
        http://nhibernate.github.io/blogs/nhibernate/archive/2009/06/12/from-where-start-to-implements-idatabaseschema.html
      </link>
      <dsq:thread_identifier>
        blogs_nhibernate_archive_2009_06_12_from-where-start-to-implements-idatabaseschema
      </dsq:thread_identifier>
      <wp:post_date_gmt>
        2009-06-12 17:30:00
      </wp:post_date_gmt>
    </item>
    <item>
      <title>
        NHibernate 2.1.0Beta2
      </title>
      <link>
        http://nhibernate.github.io/blogs/nhibernate/archive/2009/06/21/nhibernate-2-1-0beta2.html
      </link>
      <dsq:thread_identifier>
        blogs_nhibernate_archive_2009_06_21_nhibernate-2-1-0beta2
      </dsq:thread_identifier>
      <wp:post_date_gmt>
        2009-06-21 13:05:00
      </wp:post_date_gmt>
      <wp:comment>
        <wp:comment_id>
          379
        </wp:comment_id>
        <wp:comment_author>
          kir
        </wp:comment_author>
        <wp:comment_author_url>
          http://
        </wp:comment_author_url>
        <wp:comment_author_email/>
        <wp:comment_author_IP/>
        <wp:comment_date_gmt>
          2009-06-23 06:44:41
        </wp:comment_date_gmt>
        <wp:comment_content>
          File NHibernate-2.1.0.Beta2-src.zip are damaged.
        </wp:comment_content>
        <wp:comment_approved>
          1
        </wp:comment_approved>
      </wp:comment>
    </item>
    <item>
      <title>
        NHibernate Cache Providers 2.1.0Beta1
      </title>
      <link>
        http://nhibernate.github.io/blogs/nhibernate/archive/2009/06/21/nhibernate-cache-providers-2-1-0beta1.html
      </link>
      <dsq:thread_identifier>
        blogs_nhibernate_archive_2009_06_21_nhibernate-cache-providers-2-1-0beta1
      </dsq:thread_identifier>
      <wp:post_date_gmt>
        2009-06-21 15:52:00
      </wp:post_date_gmt>
    </item>
    <item>
      <title>
        Auto Quote Table/Column names
      </title>
      <link>
        http://nhibernate.github.io/blogs/nhibernate/archive/2009/06/24/auto-quote-table-column-names.html
      </link>
      <dsq:thread_identifier>
        blogs_nhibernate_archive_2009_06_24_auto-quote-table-column-names
      </dsq:thread_identifier>
      <wp:post_date_gmt>
        2009-06-24 03:25:00
      </wp:post_date_gmt>
      <wp:comment>
        <wp:comment_id>
          386
        </wp:comment_id>
        <wp:comment_author>
          Stefan Steinegger
        </wp:comment_author>
        <wp:comment_author_url>
          http://nhforge.org/members/ssteinegger/default.aspx
        </wp:comment_author_url>
        <wp:comment_author_email/>
        <wp:comment_author_IP/>
        <wp:comment_date_gmt>
          2009-06-24 06:41:51
        </wp:comment_date_gmt>
        <wp:comment_content>
          What&apos;s exactly the difference between keywords and auto-quote? 
        </wp:comment_content>
        <wp:comment_approved>
          1
        </wp:comment_approved>
      </wp:comment>
      <wp:comment>
        <wp:comment_id>
          388
        </wp:comment_id>
        <wp:comment_author>
          rachel123
        </wp:comment_author>
        <wp:comment_author_url>
          http://www.fastrealestate.net/usa/
        </wp:comment_author_url>
        <wp:comment_author_email/>
        <wp:comment_author_IP/>
        <wp:comment_date_gmt>
          2009-06-25 10:37:30
        </wp:comment_date_gmt>
        <wp:comment_content>
          I am very pleased with the thought and don’t feel like adding anything
          in it. It a perfect answer. Rachel Kinker &lt;a
          href=&quot;http://www.fastrealestate.net/usa/&quot;
          rel=&quot;dofollow&quot;&gt;loan modification&lt;/a&gt;
        </wp:comment_content>
        <wp:comment_approved>
          1
        </wp:comment_approved>
      </wp:comment>
      <wp:comment>
        <wp:comment_id>
          390
        </wp:comment_id>
        <wp:comment_author>
          Fabio Maulo
        </wp:comment_author>
        <wp:comment_author_url>
          http://nhforge.org/members/fabiomaulo/default.aspx
        </wp:comment_author_url>
        <wp:comment_author_email/>
        <wp:comment_author_IP/>
        <wp:comment_date_gmt>
          2009-06-25 12:52:50
        </wp:comment_date_gmt>
        <wp:comment_content>
          @Stefan Keywords is by default: NH use the keywords of the dialect to
          modify a &apos;formula&apos; template, for example. auto-quote :
          imports all RDBMS KeyWords and auto-quote all table-names/column-names
          you/NH put in the mapping metadata.
        </wp:comment_content>
        <wp:comment_approved>
          1
        </wp:comment_approved>
      </wp:comment>
      <wp:comment>
        <wp:comment_id>
          391
        </wp:comment_id>
        <wp:comment_author>
          Stefan Steinegger
        </wp:comment_author>
        <wp:comment_author_url>
          http://nhforge.org/members/ssteinegger/default.aspx
        </wp:comment_author_url>
        <wp:comment_author_email/>
        <wp:comment_author_IP/>
        <wp:comment_date_gmt>
          2009-06-26 06:51:15
        </wp:comment_date_gmt>
        <wp:comment_content>
          @Fabio: forgive me my ignorance, I didn&apos;t get it. I try to
          express what I understood. I think I&apos;m quite far. You say,
          &quot;keywords&quot; escapes rdbms keywords eg. in formula templates.
          (I assume a formula template is a text in a &quot;formula&quot;
          attribute in the mapping file.) For instance, if I write a formula
          like &quot;index + 2&quot; it turns it to &quot;[index] + 2&quot;, is
          this correct? What happens if I want to use a keyword in the formula?
          Which other strings does NH change? &quot;auto-quote&quot; escapes all
          table names and column names in the mappings. I assume wherever a
          table name or column name is declared (table and column attributes for
          instance). Does it also do anything with formulas, filters, native sql
          (sql-update, sql-insert) and so on? Why does NH need to import
          database keywords to do this? It just needs to know the column and
          table names.
        </wp:comment_content>
        <wp:comment_approved>
          1
        </wp:comment_approved>
      </wp:comment>
      <wp:comment>
        <wp:comment_id>
          392
        </wp:comment_id>
        <wp:comment_author>
          Fabio Maulo
        </wp:comment_author>
        <wp:comment_author_url>
          http://nhforge.org/members/fabiomaulo/default.aspx
        </wp:comment_author_url>
        <wp:comment_author_email/>
        <wp:comment_author_IP/>
        <wp:comment_date_gmt>
          2009-06-26 12:51:45
        </wp:comment_date_gmt>
        <wp:comment_content>
          No, Stefan formula=&quot;SELECT TOP 1 ...&quot; without keywords will
          be translated to SELECT this.TOP 1....
        </wp:comment_content>
        <wp:comment_approved>
          1
        </wp:comment_approved>
      </wp:comment>
      <wp:comment>
        <wp:comment_id>
          532
        </wp:comment_id>
        <wp:comment_author>
          intvoker
        </wp:comment_author>
        <wp:comment_author_url>
          http://nhforge.org/members/intvoker/default.aspx
        </wp:comment_author_url>
        <wp:comment_author_email/>
        <wp:comment_author_IP/>
        <wp:comment_date_gmt>
          2009-10-26 14:55:35
        </wp:comment_date_gmt>
        <wp:comment_content>
          When using PostgreSQL dialect this code:
          SchemaMetadataUpdater.QuoteTableAndColumns(configuration); throws:
          System.NotSupportedException: Specified method is not supported. at
          NHibernate.Dialect.Dialect.GetDataBaseSchema(DbConnection connection)
          at
          NHibernate.Tool.hbm2ddl.SchemaMetadataUpdater.GetReservedWords(Dialect
          dialect, IConnectionHelper connectionHelper) at
          NHibernate.Tool.hbm2ddl.SchemaMetadataUpdater.GetReservedWords(IDictionary`2 cfgProperties) at NHibernate.Tool.hbm2ddl.SchemaMetadataUpdater.QuoteTableAndColumns(Configuration configuration)
        </wp:comment_content>
        <wp:comment_approved>
          1
        </wp:comment_approved>
      </wp:comment>
      <wp:comment>
        <wp:comment_id>
          533
        </wp:comment_id>
        <wp:comment_author>
          Fabio Maulo
        </wp:comment_author>
        <wp:comment_author_url>
          http://nhforge.org/members/fabiomaulo/default.aspx
        </wp:comment_author_url>
        <wp:comment_author_email/>
        <wp:comment_author_IP/>
        <wp:comment_date_gmt>
          2009-10-26 15:04:15
        </wp:comment_date_gmt>
        <wp:comment_content>
          @intvoker Have a look here
          http://fabiomaulo.blogspot.com/2009/06/from-where-start-to-implements.html
        </wp:comment_content>
        <wp:comment_approved>
          1
        </wp:comment_approved>
      </wp:comment>
    </item>
    <item>
      <title>
        DataBase; The Eliot Ness of IT ?
      </title>
      <link>
        http://nhibernate.github.io/blogs/nhibernate/archive/2009/06/26/database-the-eliot-ness-of-it.html
      </link>
      <dsq:thread_identifier>
        blogs_nhibernate_archive_2009_06_26_database-the-eliot-ness-of-it
      </dsq:thread_identifier>
      <wp:post_date_gmt>
        2009-06-26 13:23:00
      </wp:post_date_gmt>
    </item>
    <item>
      <title>
        Good morning NHibernate 2.1.0CR1
      </title>
      <link>
        http://nhibernate.github.io/blogs/nhibernate/archive/2009/07/05/good-morning-nhibernate-2-1-0cr1.html
      </link>
      <dsq:thread_identifier>
        blogs_nhibernate_archive_2009_07_05_good-morning-nhibernate-2-1-0cr1
      </dsq:thread_identifier>
      <wp:post_date_gmt>
        2009-07-05 05:02:00
      </wp:post_date_gmt>
      <wp:comment>
        <wp:comment_id>
          404
        </wp:comment_id>
        <wp:comment_author>
          Dimonina
        </wp:comment_author>
        <wp:comment_author_url>
          http://nhforge.org/members/Dimonina/default.aspx
        </wp:comment_author_url>
        <wp:comment_author_email/>
        <wp:comment_author_IP/>
        <wp:comment_date_gmt>
          2009-07-06 10:24:41
        </wp:comment_date_gmt>
        <wp:comment_content>
          Sorry for may be stupid question. Is LINQ2Nhibernate integrated to
          this release or is it a standalone plugin?
        </wp:comment_content>
        <wp:comment_approved>
          1
        </wp:comment_approved>
      </wp:comment>
      <wp:comment>
        <wp:comment_id>
          405
        </wp:comment_id>
        <wp:comment_author>
          Dario Quintana
        </wp:comment_author>
        <wp:comment_author_url>
          http://nhforge.org/members/darioquintana/default.aspx
        </wp:comment_author_url>
        <wp:comment_author_email/>
        <wp:comment_author_IP/>
        <wp:comment_date_gmt>
          2009-07-06 13:58:39
        </wp:comment_date_gmt>
        <wp:comment_content>
          It&apos;s an standalone plugin, and you can find it in the
          NHibernate.Contrib source code. I&apos;m afraid there isn&apos;t a
          release with this version of NHibernate.
        </wp:comment_content>
        <wp:comment_approved>
          1
        </wp:comment_approved>
      </wp:comment>
    </item>
    <item>
      <title>
        NHibernate Caches 2.1.0CR1
      </title>
      <link>
        http://nhibernate.github.io/blogs/nhibernate/archive/2009/07/05/nhibernate-caches-2-1-0cr1.html
      </link>
      <dsq:thread_identifier>
        blogs_nhibernate_archive_2009_07_05_nhibernate-caches-2-1-0cr1
      </dsq:thread_identifier>
      <wp:post_date_gmt>
        2009-07-05 15:15:00
      </wp:post_date_gmt>
    </item>
    <item>
      <title>
        NHibernate Validator 1.2.0 Alpha4 released
      </title>
      <link>
        http://nhibernate.github.io/blogs/nhibernate/archive/2009/07/05/nhibernate-validator-1-2-0-alpha4-released.html
      </link>
      <dsq:thread_identifier>
        blogs_nhibernate_archive_2009_07_05_nhibernate-validator-1-2-0-alpha4-released
      </dsq:thread_identifier>
      <wp:post_date_gmt>
        2009-07-05 18:21:00
      </wp:post_date_gmt>
    </item>
    <item>
      <title>
        NHibernate Configuration
      </title>
      <link>
        http://nhibernate.github.io/blogs/nhibernate/archive/2009/07/17/nhibernate-configuration.html
      </link>
      <dsq:thread_identifier>
        blogs_nhibernate_archive_2009_07_17_nhibernate-configuration
      </dsq:thread_identifier>
      <wp:post_date_gmt>
        2009-07-17 21:30:00
      </wp:post_date_gmt>
      <wp:comment>
        <wp:comment_id>
          412
        </wp:comment_id>
        <wp:comment_author>
          Symon Rottem
        </wp:comment_author>
        <wp:comment_author_url>
          http://blog.symbiotic-development.com
        </wp:comment_author_url>
        <wp:comment_author_email/>
        <wp:comment_author_IP/>
        <wp:comment_date_gmt>
          2009-07-18 10:13:26
        </wp:comment_date_gmt>
        <wp:comment_content>
          &quot;absolutely nobody using the class-cache nor collection-cache
          sections&quot; Well, not NOBODY...
          http://blog.symbiotic-development.com/2008/02/27/more-configuring-nhibernate-caches/ :) Symon.
        </wp:comment_content>
        <wp:comment_approved>
          1
        </wp:comment_approved>
      </wp:comment>
      <wp:comment>
        <wp:comment_id>
          413
        </wp:comment_id>
        <wp:comment_author>
          Fabio Maulo
        </wp:comment_author>
        <wp:comment_author_url>
          http://nhforge.org/members/fabiomaulo/default.aspx
        </wp:comment_author_url>
        <wp:comment_author_email/>
        <wp:comment_author_IP/>
        <wp:comment_date_gmt>
          2009-07-18 11:57:21
        </wp:comment_date_gmt>
        <wp:comment_content>
          The entirely phrase.. The mystery: In these year I saw absolutely
          nobody using the class-cache nor collection-cache sections. well now I
          can say : I saw one using the class-cache nor collection-cache
          sections. hahahaha ;) In NH3.0 is now available the strongly typed
          configuration of that section.
        </wp:comment_content>
        <wp:comment_approved>
          1
        </wp:comment_approved>
      </wp:comment>
    </item>
    <item>
      <title>
        Welcome NH2.1.0
      </title>
      <link>
        http://nhibernate.github.io/blogs/nhibernate/archive/2009/07/19/welcome-nh2-1-0.html
      </link>
      <dsq:thread_identifier>
        blogs_nhibernate_archive_2009_07_19_welcome-nh2-1-0
      </dsq:thread_identifier>
      <wp:post_date_gmt>
        2009-07-19 13:27:00
      </wp:post_date_gmt>
      <wp:comment>
        <wp:comment_id>
          419
        </wp:comment_id>
        <wp:comment_author>
          XOR
        </wp:comment_author>
        <wp:comment_author_url>
          http://nhforge.org/members/XOR/default.aspx
        </wp:comment_author_url>
        <wp:comment_author_email/>
        <wp:comment_author_IP/>
        <wp:comment_date_gmt>
          2009-07-20 13:59:34
        </wp:comment_date_gmt>
        <wp:comment_content>
          Fabio, people demand API reference! :) It is really not that easy to
          build it for the one who have no buildable NHibernate project set up.
          Just unpacking sources and invoking NAnt doesn&apos;t do the trick. It
          fails with error: c:\Program Files\NHibernate\doc\documentation.build:
          Error loading buildfile. Could not find a part of the path
          &apos;c:\Program Files\NHibernate\doc\documentation.build&apos;. But
          even if it would build, it is just not right to obscure vital
          information from masses. Why is it so hard to publish API reference? 
        </wp:comment_content>
        <wp:comment_approved>
          1
        </wp:comment_approved>
      </wp:comment>
      <wp:comment>
        <wp:comment_id>
          420
        </wp:comment_id>
        <wp:comment_author>
          Fabio Maulo
        </wp:comment_author>
        <wp:comment_author_url>
          http://nhforge.org/members/fabiomaulo/default.aspx
        </wp:comment_author_url>
        <wp:comment_author_email/>
        <wp:comment_author_IP/>
        <wp:comment_date_gmt>
          2009-07-20 14:04:45
        </wp:comment_date_gmt>
        <wp:comment_content>
          as .chm the API reference is 39MB, as site is ~365MB
        </wp:comment_content>
        <wp:comment_approved>
          1
        </wp:comment_approved>
      </wp:comment>
      <wp:comment>
        <wp:comment_id>
          421
        </wp:comment_id>
        <wp:comment_author>
          Dimonina
        </wp:comment_author>
        <wp:comment_author_url>
          http://nhforge.org/members/Dimonina/default.aspx
        </wp:comment_author_url>
        <wp:comment_author_email/>
        <wp:comment_author_IP/>
        <wp:comment_date_gmt>
          2009-07-20 14:13:42
        </wp:comment_date_gmt>
        <wp:comment_content>
          Thank you, guys. It would be great if someone will write a big article
          &quot;New features in 2.1&quot; with examples. Documentation to
          Nhibernate is still poor, and Ayende sometimes discovers new things to
          me in his blog.
        </wp:comment_content>
        <wp:comment_approved>
          1
        </wp:comment_approved>
      </wp:comment>
      <wp:comment>
        <wp:comment_id>
          422
        </wp:comment_id>
        <wp:comment_author>
          Fabio Maulo
        </wp:comment_author>
        <wp:comment_author_url>
          http://nhforge.org/members/fabiomaulo/default.aspx
        </wp:comment_author_url>
        <wp:comment_author_email/>
        <wp:comment_author_IP/>
        <wp:comment_date_gmt>
          2009-07-20 14:21:15
        </wp:comment_date_gmt>
        <wp:comment_content>
          @Dinominia Ayende&apos;s blog and my blog, and this blog is full of
          posts about new features in NH2.1.0 and if you look my blog you can
          even find new features of NH3.0.0
        </wp:comment_content>
        <wp:comment_approved>
          1
        </wp:comment_approved>
      </wp:comment>
      <wp:comment>
        <wp:comment_id>
          423
        </wp:comment_id>
        <wp:comment_author>
          Fabio Maulo
        </wp:comment_author>
        <wp:comment_author_url>
          http://nhforge.org/members/fabiomaulo/default.aspx
        </wp:comment_author_url>
        <wp:comment_author_email/>
        <wp:comment_author_IP/>
        <wp:comment_date_gmt>
          2009-07-20 14:33:04
        </wp:comment_date_gmt>
        <wp:comment_content>
          &lt;p&gt;@XOR&lt;/p&gt; &lt;p&gt;The &quot;vital&quot; information is
          available in VS if you copy the NHibernate.xml in the same folder
          where you have NHibernate.dll&lt;/p&gt;
        </wp:comment_content>
        <wp:comment_approved>
          1
        </wp:comment_approved>
      </wp:comment>
      <wp:comment>
        <wp:comment_id>
          424
        </wp:comment_id>
        <wp:comment_author>
          Mark Phillips
        </wp:comment_author>
        <wp:comment_author_url>
          http://nhforge.org/members/mphillips/default.aspx
        </wp:comment_author_url>
        <wp:comment_author_email/>
        <wp:comment_author_IP/>
        <wp:comment_date_gmt>
          2009-07-20 16:27:20
        </wp:comment_date_gmt>
        <wp:comment_content>
          unable to download either bin or source. Error Message is that zip is
          corrupted. Have tried multiple times.
        </wp:comment_content>
        <wp:comment_approved>
          1
        </wp:comment_approved>
      </wp:comment>
      <wp:comment>
        <wp:comment_id>
          426
        </wp:comment_id>
        <wp:comment_author>
          bunceg
        </wp:comment_author>
        <wp:comment_author_url>
          http://nhforge.org/members/bunceg/default.aspx
        </wp:comment_author_url>
        <wp:comment_author_email/>
        <wp:comment_author_IP/>
        <wp:comment_date_gmt>
          2009-07-20 21:59:46
        </wp:comment_date_gmt>
        <wp:comment_content>
          Fabio, True... its all in the blogs and it very interesting. But try
          finding it again afterwards. If nothing else, add a wki entry (and
          Ayende who is just as bad) pointing to the blog. The last set of blog
          entries Ayende on all the settings in the mapping file was incredibly
          useful (and pointed out some new stuff to me) but its really hard to
          find this stuff after a few months.
        </wp:comment_content>
        <wp:comment_approved>
          1
        </wp:comment_approved>
      </wp:comment>
      <wp:comment>
        <wp:comment_id>
          427
        </wp:comment_id>
        <wp:comment_author>
          Fabio Maulo
        </wp:comment_author>
        <wp:comment_author_url>
          http://nhforge.org/members/fabiomaulo/default.aspx
        </wp:comment_author_url>
        <wp:comment_author_email/>
        <wp:comment_author_IP/>
        <wp:comment_date_gmt>
          2009-07-20 22:06:47
        </wp:comment_date_gmt>
        <wp:comment_content>
          @bunceg Sure, it is true. For that reason we are giving you NH-Forge.
          The NH-Forge wiki is open for NH-Forge&apos;s registered users, each
          user can leave his contribute. In the wiki there are various sections
          including wiki-reference, How-To and so on. 
        </wp:comment_content>
        <wp:comment_approved>
          1
        </wp:comment_approved>
      </wp:comment>
      <wp:comment>
        <wp:comment_id>
          438
        </wp:comment_id>
        <wp:comment_author>
          XOR
        </wp:comment_author>
        <wp:comment_author_url>
          http://nhforge.org/members/XOR/default.aspx
        </wp:comment_author_url>
        <wp:comment_author_email/>
        <wp:comment_author_IP/>
        <wp:comment_date_gmt>
          2009-07-21 09:12:23
        </wp:comment_date_gmt>
        <wp:comment_content>
          @Fabio Is 39 Mb too big for Source Forge? Or for this site? If there
          is a problem with space, it can be solved by plenty of ways.
        </wp:comment_content>
        <wp:comment_approved>
          1
        </wp:comment_approved>
      </wp:comment>
      <wp:comment>
        <wp:comment_id>
          440
        </wp:comment_id>
        <wp:comment_author>
          alrhr
        </wp:comment_author>
        <wp:comment_author_url>
          http://nhforge.org/members/alrhr/default.aspx
        </wp:comment_author_url>
        <wp:comment_author_email/>
        <wp:comment_author_IP/>
        <wp:comment_date_gmt>
          2009-07-21 13:09:55
        </wp:comment_date_gmt>
        <wp:comment_content>
          I have the problem that XOR desrcibes. I downloaded the sources and
          invoked nant api. The result is the error message that parts of the
          path could not be found. What do I have to do, so that compilation
          does not fail?
        </wp:comment_content>
        <wp:comment_approved>
          1
        </wp:comment_approved>
      </wp:comment>
      <wp:comment>
        <wp:comment_id>
          441
        </wp:comment_id>
        <wp:comment_author>
          Fabio Maulo
        </wp:comment_author>
        <wp:comment_author_url>
          http://nhforge.org/members/fabiomaulo/default.aspx
        </wp:comment_author_url>
        <wp:comment_author_email/>
        <wp:comment_author_IP/>
        <wp:comment_date_gmt>
          2009-07-21 13:23:58
        </wp:comment_date_gmt>
        <wp:comment_content>
          Probably download and install SandCastle. I&apos;ll check if SF allow
          us to upload the API chm.
        </wp:comment_content>
        <wp:comment_approved>
          1
        </wp:comment_approved>
      </wp:comment>
      <wp:comment>
        <wp:comment_id>
          442
        </wp:comment_id>
        <wp:comment_author>
          tbrooks
        </wp:comment_author>
        <wp:comment_author_url>
          http://nhforge.org/members/tbrooks/default.aspx
        </wp:comment_author_url>
        <wp:comment_author_email/>
        <wp:comment_author_IP/>
        <wp:comment_date_gmt>
          2009-07-21 16:13:09
        </wp:comment_date_gmt>
        <wp:comment_content>
          It&apos;s not just Sandcastle. In order to build the reference
          documentation you need: 1. SandCastle help File Builder from Codeplex
          2. SandCastle from Microsoft 3. Java Runtime Environment (JRE) 4.
          Saxon jars (doesn&apos;t have to be installed) 5. HTML Help Workshop
          6. VS Help Integration Kit (VSHIK) Right now, this is way too
          complicated to piece together just to build the CHM documentation.
          Unfortunately, I&apos;m not willing to install the JRE just to build
          help documentation. I&apos;m hoping that someone who has it installed
          and can build the CHM, can post it on Drop IO or someplace similar if
          it cannot be hosted here. At one point, back in 1.2 days, the CHM was
          hosted at SourceForge. 
        </wp:comment_content>
        <wp:comment_approved>
          1
        </wp:comment_approved>
      </wp:comment>
      <wp:comment>
        <wp:comment_id>
          443
        </wp:comment_id>
        <wp:comment_author>
          Fabio Maulo
        </wp:comment_author>
        <wp:comment_author_url>
          http://nhforge.org/members/fabiomaulo/default.aspx
        </wp:comment_author_url>
        <wp:comment_author_email/>
        <wp:comment_author_IP/>
        <wp:comment_date_gmt>
          2009-07-21 16:19:39
        </wp:comment_date_gmt>
        <wp:comment_content>
          uffffff!!
        </wp:comment_content>
        <wp:comment_approved>
          1
        </wp:comment_approved>
      </wp:comment>
      <wp:comment>
        <wp:comment_id>
          444
        </wp:comment_id>
        <wp:comment_author>
          tbrooks
        </wp:comment_author>
        <wp:comment_author_url>
          http://nhforge.org/members/tbrooks/default.aspx
        </wp:comment_author_url>
        <wp:comment_author_email/>
        <wp:comment_author_IP/>
        <wp:comment_date_gmt>
          2009-07-21 16:20:39
        </wp:comment_date_gmt>
        <wp:comment_content>
          Looks like I was late to the party. Fabio, I assume you posted the
          reference documentation to SourceForge. Thank you. My apologies
          regarding my previous comment, I hadn&apos;t realized that it had
          already been taken care of.
        </wp:comment_content>
        <wp:comment_approved>
          1
        </wp:comment_approved>
      </wp:comment>
      <wp:comment>
        <wp:comment_id>
          445
        </wp:comment_id>
        <wp:comment_author>
          alrhr
        </wp:comment_author>
        <wp:comment_author_url>
          http://nhforge.org/members/alrhr/default.aspx
        </wp:comment_author_url>
        <wp:comment_author_email/>
        <wp:comment_author_IP/>
        <wp:comment_date_gmt>
          2009-07-22 10:32:04
        </wp:comment_date_gmt>
        <wp:comment_content>
          Thanks Fabio and all you other guys for the new Version of NHibernate.
          This is a tremendous piece of work!! I forgot to say that in my last
          posting. Thank you for the apidoc on sourceforge!
        </wp:comment_content>
        <wp:comment_approved>
          1
        </wp:comment_approved>
      </wp:comment>
      <wp:comment>
        <wp:comment_id>
          458
        </wp:comment_id>
        <wp:comment_author>
          Dimonina
        </wp:comment_author>
        <wp:comment_author_url>
          http://nhforge.org/members/Dimonina/default.aspx
        </wp:comment_author_url>
        <wp:comment_author_email/>
        <wp:comment_author_IP/>
        <wp:comment_date_gmt>
          2009-07-27 15:15:46
        </wp:comment_date_gmt>
        <wp:comment_content>
          Found bug in new version, sorry, don&apos;t have a login to issue
          tracker. We have a query. select o.ID, o.Name, addr from Organization
          o left join fetch o.Address addr Organization - many-to-one - Address.
          Get an error: Query specified join fetching, but the owner of the
          fetched association was not present in the select list... It means
          that I need to have entire Organization class oin select clause, but I
          don&apos;t. In 2.0 everything works fine (just replaced dlls). What to
          do?
        </wp:comment_content>
        <wp:comment_approved>
          1
        </wp:comment_approved>
      </wp:comment>
      <wp:comment>
        <wp:comment_id>
          459
        </wp:comment_id>
        <wp:comment_author>
          Dimonina
        </wp:comment_author>
        <wp:comment_author_url>
          http://nhforge.org/members/Dimonina/default.aspx
        </wp:comment_author_url>
        <wp:comment_author_email/>
        <wp:comment_author_IP/>
        <wp:comment_date_gmt>
          2009-07-28 09:18:33
        </wp:comment_date_gmt>
        <wp:comment_content>
          I&apos;ve solved it. The new HQL parser is more strict than previous.
          The rigth query is: select o.Id, o.Name, o.Address from Organization o
          where ..... And also look at these queries: select o.Id,
          o.Country.Name, o.Address from Organization o where... It doesn&apos;t
          work. Generated SQL part would be like this: ... from Organizations o
          INNER JOIN Address a INNER JOIN Countries c ON a.Id = o.AddressId ON
          c.Id = o.CountryId... So the right query is: select o.Id, cn.Name,
          o.Address from Organization o inner join o.Country cn where.... And
          the generated SQL is: ... from Organizations o INNER JOIN Address a ON
          a.Id = o.AddressId INNER JOIN Countries c ON c.Id = o.CountryId... Be
          careful with queries.
        </wp:comment_content>
        <wp:comment_approved>
          1
        </wp:comment_approved>
      </wp:comment>
    </item>
    <item>
      <title>
        NHibernate Caches 2.1.0GA
      </title>
      <link>
        http://nhibernate.github.io/blogs/nhibernate/archive/2009/07/19/nhibernate-caches-2-1-0ga.html
      </link>
      <dsq:thread_identifier>
        blogs_nhibernate_archive_2009_07_19_nhibernate-caches-2-1-0ga
      </dsq:thread_identifier>
      <wp:post_date_gmt>
        2009-07-19 14:24:00
      </wp:post_date_gmt>
      <wp:comment>
        <wp:comment_id>
          492
        </wp:comment_id>
        <wp:comment_author>
          Paulo Roberto Quicoli
        </wp:comment_author>
        <wp:comment_author_url>
          http://nhforge.org/members/quicoli/default.aspx
        </wp:comment_author_url>
        <wp:comment_author_email/>
        <wp:comment_author_IP/>
        <wp:comment_date_gmt>
          2009-08-24 19:13:57
        </wp:comment_date_gmt>
        <wp:comment_content>
          How to use, configure, Bamboo prevalence as cache?
        </wp:comment_content>
        <wp:comment_approved>
          1
        </wp:comment_approved>
      </wp:comment>
    </item>
    <item>
      <title>
        NHibernate Validator 1.2.0 Beta1 released
      </title>
      <link>
        http://nhibernate.github.io/blogs/nhibernate/archive/2009/07/20/nhibernate-validator-1-2-0-beta1-released.html
      </link>
      <dsq:thread_identifier>
        blogs_nhibernate_archive_2009_07_20_nhibernate-validator-1-2-0-beta1-released
      </dsq:thread_identifier>
      <wp:post_date_gmt>
        2009-07-20 19:35:00
      </wp:post_date_gmt>
    </item>
    <item>
      <title>
        NHibernate.Linq 1.0.0 GA released
      </title>
      <link>
        http://nhibernate.github.io/blogs/nhibernate/archive/2009/07/26/nhibernate-linq-1-0-ga-released.html
      </link>
      <dsq:thread_identifier>
        blogs_nhibernate_archive_2009_07_26_nhibernate-linq-1-0-ga-released
      </dsq:thread_identifier>
      <wp:post_date_gmt>
        2009-07-26 10:52:00
      </wp:post_date_gmt>
      <wp:comment>
        <wp:comment_id>
          456
        </wp:comment_id>
        <wp:comment_author>
          marcus
        </wp:comment_author>
        <wp:comment_author_url>
          http://nhforge.org/members/marcus/default.aspx
        </wp:comment_author_url>
        <wp:comment_author_email/>
        <wp:comment_author_IP/>
        <wp:comment_date_gmt>
          2009-07-27 04:08:48
        </wp:comment_date_gmt>
        <wp:comment_content>
          Great work to everyone involved in putting this release together! 
        </wp:comment_content>
        <wp:comment_approved>
          1
        </wp:comment_approved>
      </wp:comment>
      <wp:comment>
        <wp:comment_id>
          457
        </wp:comment_id>
        <wp:comment_author>
          Dimonina
        </wp:comment_author>
        <wp:comment_author_url>
          http://nhforge.org/members/Dimonina/default.aspx
        </wp:comment_author_url>
        <wp:comment_author_email/>
        <wp:comment_author_IP/>
        <wp:comment_date_gmt>
          2009-07-27 05:49:37
        </wp:comment_date_gmt>
        <wp:comment_content>
          OMG! I&apos;ll try it today! Thanks a lot! But i don&apos;t understand
          how to use &quot;fetch&quot; in LINQ. Is there any solution in LINQ
          for HQL&apos;s &quot;fetch&quot;?
        </wp:comment_content>
        <wp:comment_approved>
          1
        </wp:comment_approved>
      </wp:comment>
    </item>
    <item>
      <title>
        How-To: Using the N* stack, part 1
      </title>
      <link>
        http://nhibernate.github.io/blogs/nhibernate/archive/2009/08/11/how-to-using-the-n-stack-part-1.html
      </link>
      <dsq:thread_identifier>
        blogs_nhibernate_archive_2009_08_11_how-to-using-the-n-stack-part-1
      </dsq:thread_identifier>
      <wp:post_date_gmt>
        2009-08-11 20:02:00
      </wp:post_date_gmt>
    </item>
    <item>
      <title>
        How-To: Using the N* Stack, part 2
      </title>
      <link>
        http://nhibernate.github.io/blogs/nhibernate/archive/2009/08/11/how-to-using-the-n-stack-part-2.html
      </link>
      <dsq:thread_identifier>
        blogs_nhibernate_archive_2009_08_11_how-to-using-the-n-stack-part-2
      </dsq:thread_identifier>
      <wp:post_date_gmt>
        2009-08-11 20:21:00
      </wp:post_date_gmt>
      <wp:comment>
        <wp:comment_id>
          462
        </wp:comment_id>
        <wp:comment_author>
          Diego Jancic
        </wp:comment_author>
        <wp:comment_author_url>
          http://nhforge.org/members/diegojancic/default.aspx
        </wp:comment_author_url>
        <wp:comment_author_email/>
        <wp:comment_author_IP/>
        <wp:comment_date_gmt>
          2009-08-12 18:11:28
        </wp:comment_date_gmt>
        <wp:comment_content>
          Nice posts! However, the download source links are not working here
          cause you used relative urls. Thanks!
        </wp:comment_content>
        <wp:comment_approved>
          1
        </wp:comment_approved>
      </wp:comment>
      <wp:comment>
        <wp:comment_id>
          463
        </wp:comment_id>
        <wp:comment_author>
          Jason Dentler
        </wp:comment_author>
        <wp:comment_author_url>
          http://nhforge.org/members/Jason-Dentler/default.aspx
        </wp:comment_author_url>
        <wp:comment_author_email/>
        <wp:comment_author_IP/>
        <wp:comment_date_gmt>
          2009-08-12 19:20:57
        </wp:comment_date_gmt>
        <wp:comment_content>
          Download links fixed. Thanks!
        </wp:comment_content>
        <wp:comment_approved>
          1
        </wp:comment_approved>
      </wp:comment>
      <wp:comment>
        <wp:comment_id>
          510
        </wp:comment_id>
        <wp:comment_author>
          Flaker
        </wp:comment_author>
        <wp:comment_author_url>
          http://nhforge.org/members/Flaker/default.aspx
        </wp:comment_author_url>
        <wp:comment_author_email/>
        <wp:comment_author_IP/>
        <wp:comment_date_gmt>
          2009-09-19 15:04:54
        </wp:comment_date_gmt>
        <wp:comment_content>
          Jason. Your blog and all downloads are down. Are you moving to other
          site? Thanks!
        </wp:comment_content>
        <wp:comment_approved>
          1
        </wp:comment_approved>
      </wp:comment>
      <wp:comment>
        <wp:comment_id>
          511
        </wp:comment_id>
        <wp:comment_author>
          Jason Dentler
        </wp:comment_author>
        <wp:comment_author_url>
          http://nhforge.org/members/Jason-Dentler/default.aspx
        </wp:comment_author_url>
        <wp:comment_author_email/>
        <wp:comment_author_IP/>
        <wp:comment_date_gmt>
          2009-09-19 15:14:19
        </wp:comment_date_gmt>
        <wp:comment_content>
          Nope. Everything is working fine. Check
          http://downforeveryoneorjustme.com/jasondentler.com 
        </wp:comment_content>
        <wp:comment_approved>
          1
        </wp:comment_approved>
      </wp:comment>
      <wp:comment>
        <wp:comment_id>
          512
        </wp:comment_id>
        <wp:comment_author>
          Flaker
        </wp:comment_author>
        <wp:comment_author_url>
          http://nhforge.org/members/Flaker/default.aspx
        </wp:comment_author_url>
        <wp:comment_author_email/>
        <wp:comment_author_IP/>
        <wp:comment_date_gmt>
          2009-09-19 15:24:11
        </wp:comment_date_gmt>
        <wp:comment_content>
          yep. You are right, I cannot download the files using my ISP (Fibertel
          in Argentina). Login into a server in the US I can download without a
          problem. Sorry to bother you. BTW, great work on the posts. Thanks!
        </wp:comment_content>
        <wp:comment_approved>
          1
        </wp:comment_approved>
      </wp:comment>
    </item>
    <item>
      <title>
        How-To: Using the N* Stack, part 3
      </title>
      <link>
        http://nhibernate.github.io/blogs/nhibernate/archive/2009/08/13/how-to-using-the-n-stack-part-3.html
      </link>
      <dsq:thread_identifier>
        blogs_nhibernate_archive_2009_08_13_how-to-using-the-n-stack-part-3
      </dsq:thread_identifier>
      <wp:post_date_gmt>
        2009-08-13 23:50:00
      </wp:post_date_gmt>
      <wp:comment>
        <wp:comment_id>
          473
        </wp:comment_id>
        <wp:comment_author>
          Jose Romaniello
        </wp:comment_author>
        <wp:comment_author_url>
          http://jfromaniello.blogspot.com
        </wp:comment_author_url>
        <wp:comment_author_email/>
        <wp:comment_author_IP/>
        <wp:comment_date_gmt>
          2009-08-17 01:31:21
        </wp:comment_date_gmt>
        <wp:comment_content>
          I will strongly recommend three things: 1-If you are developing a app
          from scratch (I mean no legazy-db) avoid composite primary keys. 2-
          Your xml-mapping is too much verbose: &lt;?xml version=&quot;1.0&quot;
          encoding=&quot;utf-8&quot; ?&gt; &lt;hibernate-mapping
          xmlns=&quot;urn:nhibernate-mapping-2.2&quot;
          assembly=&quot;NStackExample&quot;
          namespace=&quot;NStackExample&quot;&gt; &lt;class
          name=&quot;Address&quot;&gt; &lt;composite-id&gt; &lt;key-many-to-one
          name=&quot;Person&quot; class=&quot;Person&quot; column=&quot;ID&quot;
          /&gt; &lt;key-property name=&quot;Type&quot; type=&quot;Int32&quot;
          /&gt; &lt;/composite-id&gt; &lt;property name=&quot;City&quot;
          length=&quot;255&quot; /&gt; &lt;property name=&quot;Lines&quot;
          length=&quot;255&quot; /&gt; &lt;property name=&quot;State&quot;
          length=&quot;2&quot; /&gt; &lt;property name=&quot;Zip&quot;
          length=&quot;10&quot; /&gt; &lt;/class&gt; &lt;/hibernate-mapping&gt;
          3-Address in this case seems to be a Component.
        </wp:comment_content>
        <wp:comment_approved>
          1
        </wp:comment_approved>
      </wp:comment>
    </item>
    <item>
      <title>
        Introducing NHiberate and WPF: The ChinookMediaManager
      </title>
      <link>
        http://nhibernate.github.io/blogs/nhibernate/archive/2009/08/15/introducing-nhiberate-and-wpf-the-chinookmediamanager.html
      </link>
      <dsq:thread_identifier>
        blogs_nhibernate_archive_2009_08_15_introducing-nhiberate-and-wpf-the-chinookmediamanager
      </dsq:thread_identifier>
      <wp:post_date_gmt>
        2009-08-16 00:26:25
      </wp:post_date_gmt>
      <wp:comment>
        <wp:comment_id>
          476
        </wp:comment_id>
        <wp:comment_author>
          Nelson Cabral
        </wp:comment_author>
        <wp:comment_author_url>
          http://nhforge.org/members/Nelson-Cabral/default.aspx
        </wp:comment_author_url>
        <wp:comment_author_email/>
        <wp:comment_author_IP/>
        <wp:comment_date_gmt>
          2009-08-18 19:36:36
        </wp:comment_date_gmt>
        <wp:comment_content>
          The GUI is not that complex... Are you planning to make a full sample
          app or open to additional use cases? I&apos;m interested in such one :
          &gt; Open App &gt; View Artists (List of available artists with
          new/update/delete) &gt; New or Edit displays your screen And, using
          databinding, having the Artist list to update by itself. &lt;&lt; here
          is the dirty stuff
        </wp:comment_content>
        <wp:comment_approved>
          1
        </wp:comment_approved>
      </wp:comment>
      <wp:comment>
        <wp:comment_id>
          477
        </wp:comment_id>
        <wp:comment_author>
          Jose Romaniello
        </wp:comment_author>
        <wp:comment_author_url>
          http://nhforge.org/members/jfromainello/default.aspx
        </wp:comment_author_url>
        <wp:comment_author_email/>
        <wp:comment_author_IP/>
        <wp:comment_date_gmt>
          2009-08-18 19:41:05
        </wp:comment_date_gmt>
        <wp:comment_content>
          Yes, I&apos;m writing that post ;). give me few hours.
        </wp:comment_content>
        <wp:comment_approved>
          1
        </wp:comment_approved>
      </wp:comment>
      <wp:comment>
        <wp:comment_id>
          480
        </wp:comment_id>
        <wp:comment_author>
          YJingLee
        </wp:comment_author>
        <wp:comment_author_url>
          http://nhforge.org/members/YJingLee/default.aspx
        </wp:comment_author_url>
        <wp:comment_author_email/>
        <wp:comment_author_IP/>
        <wp:comment_date_gmt>
          2009-08-19 06:00:35
        </wp:comment_date_gmt>
        <wp:comment_content>
          Hi,José F I read you The ChinookMediaManager example, I have a
          question for it. I want to add a custom NH even in
          ChinookMediaManager,be used for at delete object validate has
          relationship ,If has then not allow delete it ,It not then delete it
          Can I Help you ? In ChinookMediaManager attach this function for
          Evnets/Listeners and now why remove the Caliburn framwork in this
          example? Thanks YJingLee
        </wp:comment_content>
        <wp:comment_approved>
          1
        </wp:comment_approved>
      </wp:comment>
      <wp:comment>
        <wp:comment_id>
          482
        </wp:comment_id>
        <wp:comment_author>
          Jose Romaniello
        </wp:comment_author>
        <wp:comment_author_url>
          http://nhforge.org/members/jfromainello/default.aspx
        </wp:comment_author_url>
        <wp:comment_author_email/>
        <wp:comment_author_IP/>
        <wp:comment_date_gmt>
          2009-08-19 11:30:23
        </wp:comment_date_gmt>
        <wp:comment_content>
          Sorry, but an event isn&apos;t the correct place for doing such
          validation. Take a look to the cascade attribute in the mapping.
        </wp:comment_content>
        <wp:comment_approved>
          1
        </wp:comment_approved>
      </wp:comment>
    </item>
    <item>
      <title>
        Nhibernate and WPF: The core
      </title>
      <link>
        http://nhibernate.github.io/blogs/nhibernate/archive/2009/08/15/nhibernate-and-wpf-the-core.html
      </link>
      <dsq:thread_identifier>
        blogs_nhibernate_archive_2009_08_15_nhibernate-and-wpf-the-core
      </dsq:thread_identifier>
      <wp:post_date_gmt>
        2009-08-16 00:30:52
      </wp:post_date_gmt>
    </item>
    <item>
      <title>
        Nhibernate and WPF: Models concept
      </title>
      <link>
        http://nhibernate.github.io/blogs/nhibernate/archive/2009/08/15/nhibernate-and-wpf-models-concept.html
      </link>
      <dsq:thread_identifier>
        blogs_nhibernate_archive_2009_08_15_nhibernate-and-wpf-models-concept
      </dsq:thread_identifier>
      <wp:post_date_gmt>
        2009-08-16 00:33:46
      </wp:post_date_gmt>
    </item>
    <item>
      <title>
        How-To: Using the N* Stack, part 4
      </title>
      <link>
        http://nhibernate.github.io/blogs/nhibernate/archive/2009/08/16/how-to-using-the-n-stack-part-4.html
      </link>
      <dsq:thread_identifier>
        blogs_nhibernate_archive_2009_08_16_how-to-using-the-n-stack-part-4
      </dsq:thread_identifier>
      <wp:post_date_gmt>
        2009-08-16 23:44:22
      </wp:post_date_gmt>
      <wp:comment>
        <wp:comment_id>
          474
        </wp:comment_id>
        <wp:comment_author>
          Cheetah
        </wp:comment_author>
        <wp:comment_author_url>
          http://
        </wp:comment_author_url>
        <wp:comment_author_email/>
        <wp:comment_author_IP/>
        <wp:comment_date_gmt>
          2009-08-17 03:22:25
        </wp:comment_date_gmt>
        <wp:comment_content>
          A note on SQLite: The managed provider merges the unmanaged dll into
          the managed dll, so you don&apos;t need to download the unmanaged one
          separately, at least not on windows platforms.
        </wp:comment_content>
        <wp:comment_approved>
          1
        </wp:comment_approved>
      </wp:comment>
    </item>
    <item>
      <title>
        Nhibernate and WPF: ViewModels and Views
      </title>
      <link>
        http://nhibernate.github.io/blogs/nhibernate/archive/2009/08/19/nhibernate-and-wpf-viewmodels-and-views.html
      </link>
      <dsq:thread_identifier>
        blogs_nhibernate_archive_2009_08_19_nhibernate-and-wpf-viewmodels-and-views
      </dsq:thread_identifier>
      <wp:post_date_gmt>
        2009-08-19 16:23:46
      </wp:post_date_gmt>
    </item>
    <item>
      <title>
        Part 5: Fixing the Broken Stuff
      </title>
      <link>
        http://nhibernate.github.io/blogs/nhibernate/archive/2009/08/23/part-5-fixing-the-broken-stuff.html
      </link>
      <dsq:thread_identifier>
        blogs_nhibernate_archive_2009_08_23_part-5-fixing-the-broken-stuff
      </dsq:thread_identifier>
      <wp:post_date_gmt>
        2009-08-23 22:20:04
      </wp:post_date_gmt>
      <wp:comment>
        <wp:comment_id>
          491
        </wp:comment_id>
        <wp:comment_author>
          Fabio Maulo
        </wp:comment_author>
        <wp:comment_author_url>
          http://nhforge.org/members/fabiomaulo/default.aspx
        </wp:comment_author_url>
        <wp:comment_author_email/>
        <wp:comment_author_IP/>
        <wp:comment_date_gmt>
          2009-08-24 14:40:39
        </wp:comment_date_gmt>
        <wp:comment_content>
          More exactly : it is a marmot nHibernating ;)
        </wp:comment_content>
        <wp:comment_approved>
          1
        </wp:comment_approved>
      </wp:comment>
    </item>
    <item>
      <title>
        Nhibernate and WPF: Validations
      </title>
      <link>
        http://nhibernate.github.io/blogs/nhibernate/archive/2009/08/27/nhibernate-and-wpf-validations.html
      </link>
      <dsq:thread_identifier>
        blogs_nhibernate_archive_2009_08_27_nhibernate-and-wpf-validations
      </dsq:thread_identifier>
      <wp:post_date_gmt>
        2009-08-28 01:06:36
      </wp:post_date_gmt>
    </item>
    <item>
      <title>
        Fluent NHibernate 1.0
      </title>
      <link>
        http://nhibernate.github.io/blogs/nhibernate/archive/2009/08/29/fluent-nhibernate-1-0.html
      </link>
      <dsq:thread_identifier>
        blogs_nhibernate_archive_2009_08_29_fluent-nhibernate-1-0
      </dsq:thread_identifier>
      <wp:post_date_gmt>
        2009-08-29 00:33:00
      </wp:post_date_gmt>
    </item>
    <item>
      <title>
        Part 6: Ninject and MVC or How to be a Web Ninja
      </title>
      <link>
        http://nhibernate.github.io/blogs/nhibernate/archive/2009/08/28/part-6-ninject-and-mvc-or-how-to-be-a-web-ninja.html
      </link>
      <dsq:thread_identifier>
        blogs_nhibernate_archive_2009_08_28_part-6-ninject-and-mvc-or-how-to-be-a-web-ninja
      </dsq:thread_identifier>
      <wp:post_date_gmt>
        2009-08-29 05:34:47
      </wp:post_date_gmt>
    </item>
    <item>
      <title>
        Part 7: NHibernate and Ninject for ASP.NET MVC
      </title>
      <link>
        http://nhibernate.github.io/blogs/nhibernate/archive/2009/08/29/part-7-nhibernate-and-ninject-for-asp-net-mvc.html
      </link>
      <dsq:thread_identifier>
        blogs_nhibernate_archive_2009_08_29_part-7-nhibernate-and-ninject-for-asp-net-mvc
      </dsq:thread_identifier>
      <wp:post_date_gmt>
        2009-08-29 20:47:58
      </wp:post_date_gmt>
    </item>
    <item>
      <title>
        Part 8: DAOs, Repositories, or Query Objects
      </title>
      <link>
        http://nhibernate.github.io/blogs/nhibernate/archive/2009/09/07/part-8-daos-repositories-or-query-objects.html
      </link>
      <dsq:thread_identifier>
        blogs_nhibernate_archive_2009_09_07_part-8-daos-repositories-or-query-objects
      </dsq:thread_identifier>
      <wp:post_date_gmt>
        2009-09-07 20:17:50
      </wp:post_date_gmt>
      <wp:comment>
        <wp:comment_id>
          503
        </wp:comment_id>
        <wp:comment_author>
          kibbled_bits
        </wp:comment_author>
        <wp:comment_author_url>
          http://scottwhite.blogspot.com
        </wp:comment_author_url>
        <wp:comment_author_email/>
        <wp:comment_author_IP/>
        <wp:comment_date_gmt>
          2009-09-08 01:09:13
        </wp:comment_date_gmt>
        <wp:comment_content>
          I&apos;m happy that you went over the different approaches, while I
          currently implement DAOs I will give this some serious consideration.
          Thanks Oren.
        </wp:comment_content>
        <wp:comment_approved>
          1
        </wp:comment_approved>
      </wp:comment>
    </item>
    <item>
      <title>
        Part 9: NHibernate transactions
      </title>
      <link>
        http://nhibernate.github.io/blogs/nhibernate/archive/2009/09/08/part-9-nhibernate-transactions.html
      </link>
      <dsq:thread_identifier>
        blogs_nhibernate_archive_2009_09_08_part-9-nhibernate-transactions
      </dsq:thread_identifier>
      <wp:post_date_gmt>
        2009-09-08 13:26:05
      </wp:post_date_gmt>
    </item>
    <item>
      <title>
        Part 10: Testing and Refactoring
      </title>
      <link>
        http://nhibernate.github.io/blogs/nhibernate/archive/2009/09/20/part-10-testing-and-refactoring.html
      </link>
      <dsq:thread_identifier>
        blogs_nhibernate_archive_2009_09_20_part-10-testing-and-refactoring
      </dsq:thread_identifier>
      <wp:post_date_gmt>
        2009-09-20 19:07:41
      </wp:post_date_gmt>
    </item>
    <item>
      <title>
        NHibernate Validator 1.2 Beta2 released
      </title>
      <link>
        http://nhibernate.github.io/blogs/nhibernate/archive/2009/10/10/nhibernate-validator-1-2-beta2-released.html
      </link>
      <dsq:thread_identifier>
        blogs_nhibernate_archive_2009_10_10_nhibernate-validator-1-2-beta2-released
      </dsq:thread_identifier>
      <wp:post_date_gmt>
        2009-10-10 18:16:00
      </wp:post_date_gmt>
    </item>
    <item>
      <title>
        Mapping different types - IUserType
      </title>
      <link>
        http://nhibernate.github.io/blogs/nhibernate/archive/2009/10/15/mapping-different-types-iusertype.html
      </link>
      <dsq:thread_identifier>
        blogs_nhibernate_archive_2009_10_15_mapping-different-types-iusertype
      </dsq:thread_identifier>
      <wp:post_date_gmt>
        2009-10-15 18:21:00
      </wp:post_date_gmt>
    </item>
    <item>
      <title>
        hbm2net 
      </title>
      <link>
        http://nhibernate.github.io/blogs/nhibernate/archive/2009/10/19/hbm2net.html
      </link>
      <dsq:thread_identifier>
        blogs_nhibernate_archive_2009_10_19_hbm2net
      </dsq:thread_identifier>
      <wp:post_date_gmt>
        2009-10-19 07:43:00
      </wp:post_date_gmt>
      <wp:comment>
        <wp:comment_id>
          527
        </wp:comment_id>
        <wp:comment_author>
          Fabio Maulo
        </wp:comment_author>
        <wp:comment_author_url>
          http://nhforge.org/members/fabiomaulo/default.aspx
        </wp:comment_author_url>
        <wp:comment_author_email/>
        <wp:comment_author_IP/>
        <wp:comment_date_gmt>
          2009-10-19 15:55:12
        </wp:comment_date_gmt>
        <wp:comment_content>
          a step-by-step post about how create classes from hbm would be useful
        </wp:comment_content>
        <wp:comment_approved>
          1
        </wp:comment_approved>
      </wp:comment>
      <wp:comment>
        <wp:comment_id>
          528
        </wp:comment_id>
        <wp:comment_author>
          felicepollano
        </wp:comment_author>
        <wp:comment_author_url>
          http://nhforge.org/members/felicepollano/default.aspx
        </wp:comment_author_url>
        <wp:comment_author_email/>
        <wp:comment_author_IP/>
        <wp:comment_date_gmt>
          2009-10-19 16:12:24
        </wp:comment_date_gmt>
        <wp:comment_content>
          Well, with the binary version: Unzip in a folder, an example hbm file
          is present in the zip, as well as a config file to use the
          t4generator. Then simple use hbm2net --config=t4config.xml *.hbm.xml.
          You should see the output under the folder &quot;generated&quot; in
          the current directory. May be more interesting will be have a look at
          the sources: I provided a modified version of the original unit test:
          by launching the test called T4DefaultTemplate you should se how the
          job is done. The templates currently used are embedded as resources
          file in the genertaor assembly. Hope this help.
        </wp:comment_content>
        <wp:comment_approved>
          1
        </wp:comment_approved>
      </wp:comment>
      <wp:comment>
        <wp:comment_id>
          530
        </wp:comment_id>
        <wp:comment_author>
          DimkaG
        </wp:comment_author>
        <wp:comment_author_url>
          http://nhforge.org/members/DimkaG/default.aspx
        </wp:comment_author_url>
        <wp:comment_author_email/>
        <wp:comment_author_IP/>
        <wp:comment_date_gmt>
          2009-10-20 09:28:12
        </wp:comment_date_gmt>
        <wp:comment_content>
          The idea is very interesting and it is most anticipated. In the past
          we tried to create such a prototype but encountered serious problems
          with hosting T4 templates outside the DTE host. Today we are using
          NVelocity templates for class generation in a couple of projects. The
          downside is that generated classes are not automatically added to the
          solution and NVelocity templates are less intuitive for .Net
          programmers. Having a T4 alternative would boost programmers
          productivity and make the code generation process more friendly. 
        </wp:comment_content>
        <wp:comment_approved>
          1
        </wp:comment_approved>
      </wp:comment>
      <wp:comment>
        <wp:comment_id>
          531
        </wp:comment_id>
        <wp:comment_author>
          felicepollano
        </wp:comment_author>
        <wp:comment_author_url>
          http://nhforge.org/members/felicepollano/default.aspx
        </wp:comment_author_url>
        <wp:comment_author_email/>
        <wp:comment_author_IP/>
        <wp:comment_date_gmt>
          2009-10-20 10:02:04
        </wp:comment_date_gmt>
        <wp:comment_content>
          I found some problem too in passing &quot;variables&quot; to t4
          templates, basically the problem was on serializing the ClassMapping
          stuff, because hosting t4 needs a separate app-domain. So i cut-off
          the problem in a tricky way: just reused the same app domain, this has
          as a side effect a memory leakage, and I accepted it since this is a
          tool to launch one-shot. There is some other advantage in using t4
          instead of NVelocity: you can easily embed some code to do some
          generation logic in the template itself.
        </wp:comment_content>
        <wp:comment_approved>
          1
        </wp:comment_approved>
      </wp:comment>
    </item>
    <item>
      <title>
        NHibernate Validator 1.2 Beta3 released
      </title>
      <link>
        http://nhibernate.github.io/blogs/nhibernate/archive/2009/10/26/nhibernate-validator-1-2-beta3-released.html
      </link>
      <dsq:thread_identifier>
        blogs_nhibernate_archive_2009_10_26_nhibernate-validator-1-2-beta3-released
      </dsq:thread_identifier>
      <wp:post_date_gmt>
        2009-10-26 16:12:00
      </wp:post_date_gmt>
    </item>
    <item>
      <title>
        NHibernate and WPF: The GuyWire
      </title>
      <link>
        http://nhibernate.github.io/blogs/nhibernate/archive/2009/11/07/nhibernate-and-wpf-the-guywire.html
      </link>
      <dsq:thread_identifier>
        blogs_nhibernate_archive_2009_11_07_nhibernate-and-wpf-the-guywire
      </dsq:thread_identifier>
      <wp:post_date_gmt>
        2009-11-07 19:12:52
      </wp:post_date_gmt>
    </item>
    <item>
      <title>
        NHibernate and WPF: Test Databinding with Caliburn
      </title>
      <link>
        http://nhibernate.github.io/blogs/nhibernate/archive/2009/11/15/nhibernate-and-wpf-test-databinding-with-caliburn.html
      </link>
      <dsq:thread_identifier>
        blogs_nhibernate_archive_2009_11_15_nhibernate-and-wpf-test-databinding-with-caliburn
      </dsq:thread_identifier>
      <wp:post_date_gmt>
        2009-11-15 16:42:25
      </wp:post_date_gmt>
    </item>
    <item>
      <title>
        hbm2net: first alpha ready
      </title>
      <link>
        http://nhibernate.github.io/blogs/nhibernate/archive/2009/11/22/hbm2net-frist-alpha-available.html
      </link>
      <dsq:thread_identifier>
        blogs_nhibernate_archive_2009_11_22_hbm2net-frist-alpha-available
      </dsq:thread_identifier>
      <wp:post_date_gmt>
        2009-11-22 22:43:00
      </wp:post_date_gmt>
    </item>
    <item>
      <title>
        NHibernate and WPF: Asynchronous calls
      </title>
      <link>
        http://nhibernate.github.io/blogs/nhibernate/archive/2009/11/22/nhibernate-and-wpf-asynchronous-calls.html
      </link>
      <dsq:thread_identifier>
        blogs_nhibernate_archive_2009_11_22_nhibernate-and-wpf-asynchronous-calls
      </dsq:thread_identifier>
      <wp:post_date_gmt>
        2009-11-23 01:48:18
      </wp:post_date_gmt>
      <wp:comment>
        <wp:comment_id>
          970
        </wp:comment_id>
        <wp:comment_author>
          ronaldshen
        </wp:comment_author>
        <wp:comment_author_url>
          http://www.atoncer.com/pets/main.htm
        </wp:comment_author_url>
        <wp:comment_author_email/>
        <wp:comment_author_IP/>
        <wp:comment_date_gmt>
          2009-12-13 08:26:29
        </wp:comment_date_gmt>
        <wp:comment_content>
          [url=http://www.atoncer.com/pets/main.htm] pets supplies [/url]
          [url=http://www.atoncer.com/health/main.htm]health supplies [/url]
          [url=http://www.sellatonce.com/import-import/venezuela.html]venezuela
          export[/url]
          [url=http://www.sellatonce.com/import-import/israel.html]israel
          export[/url]
          [url=http://www.sellatonce.com/import-import/china.html]china
          export[/url]
          [url=http://www.sellatonce.com/import-import/india.html]india
          export[/url] 
        </wp:comment_content>
        <wp:comment_approved>
          1
        </wp:comment_approved>
      </wp:comment>
    </item>
    <item>
      <title>
        NHibernate Validator 1.2 CR1 released
      </title>
      <link>
        http://nhibernate.github.io/blogs/nhibernate/archive/2009/11/26/nhibernate-validator-1-2-cr1-released.html
      </link>
      <dsq:thread_identifier>
        blogs_nhibernate_archive_2009_11_26_nhibernate-validator-1-2-cr1-released
      </dsq:thread_identifier>
      <wp:post_date_gmt>
        2009-11-26 12:44:00
      </wp:post_date_gmt>
      <wp:comment>
        <wp:comment_id>
          971
        </wp:comment_id>
        <wp:comment_author>
          ronaldshen
        </wp:comment_author>
        <wp:comment_author_url>
          http://nhforge.org/members/ronaldshen/default.aspx
        </wp:comment_author_url>
        <wp:comment_author_email/>
        <wp:comment_author_IP/>
        <wp:comment_date_gmt>
          2009-12-13 08:15:13
        </wp:comment_date_gmt>
        <wp:comment_content>
          [url=http://www.atoncer.com/pets/main.htm] pets supplies [/url]
          [url=http://www.atoncer.com/health/main.htm]health supplies [/url]
          [url=http://www.sellatonce.com/import-import/venezuela.html]venezuela
          export[/url]
          [url=http://www.sellatonce.com/import-import/israel.html]israel
          export[/url]
          [url=http://www.sellatonce.com/import-import/china.html]china
          export[/url]
          [url=http://www.sellatonce.com/import-import/india.html]india
          export[/url] 
        </wp:comment_content>
        <wp:comment_approved>
          1
        </wp:comment_approved>
      </wp:comment>
      <wp:comment>
        <wp:comment_id>
          603
        </wp:comment_id>
        <wp:comment_author>
          Rachelle
        </wp:comment_author>
        <wp:comment_author_url>
          http://nhforge.org/members/manageaccount/default.aspx
        </wp:comment_author_url>
        <wp:comment_author_email/>
        <wp:comment_author_IP/>
        <wp:comment_date_gmt>
          2010-02-03 10:15:22
        </wp:comment_date_gmt>
        <wp:comment_content>
          I&apos;ve been waiting for this one to come out for a long time. It
          finally came. I&apos;ll definitely be downloading this one. 
        </wp:comment_content>
        <wp:comment_approved>
          1
        </wp:comment_approved>
      </wp:comment>
    </item>
    <item>
      <title>
        T4 hbm2net alpha 2
      </title>
      <link>
        http://nhibernate.github.io/blogs/nhibernate/archive/2009/12/12/t4-hbm2net-alpha-2.html
      </link>
      <dsq:thread_identifier>
        blogs_nhibernate_archive_2009_12_12_t4-hbm2net-alpha-2
      </dsq:thread_identifier>
      <wp:post_date_gmt>
        2009-12-12 22:12:00
      </wp:post_date_gmt>
      <wp:comment>
        <wp:comment_id>
          972
        </wp:comment_id>
        <wp:comment_author>
          ronaldshen
        </wp:comment_author>
        <wp:comment_author_url>
          http://nhforge.org/members/ronaldshen/default.aspx
        </wp:comment_author_url>
        <wp:comment_author_email/>
        <wp:comment_author_IP/>
        <wp:comment_date_gmt>
          2009-12-13 08:13:37
        </wp:comment_date_gmt>
        <wp:comment_content>
          [url=http://www.atoncer.com/pets/main.htm] pets supplies [/url]
          [url=http://www.atoncer.com/health/main.htm]health supplies [/url]
          [url=http://www.sellatonce.com/import-import/venezuela.html]venezuela
          export[/url]
          [url=http://www.sellatonce.com/import-import/israel.html]israel
          export[/url]
          [url=http://www.sellatonce.com/import-import/china.html]china
          export[/url]
          [url=http://www.sellatonce.com/import-import/india.html]india
          export[/url] 
        </wp:comment_content>
        <wp:comment_approved>
          1
        </wp:comment_approved>
      </wp:comment>
    </item>
    <item>
      <title>
        Using the new Linq to NH Provider and migrating from the old one
      </title>
      <link>
        http://nhibernate.github.io/blogs/nhibernate/archive/2009/12/17/using-the-new-linq-to-nh-provider-and-migrating-from-the-old-one.html
      </link>
      <dsq:thread_identifier>
        blogs_nhibernate_archive_2009_12_17_using-the-new-linq-to-nh-provider-and-migrating-from-the-old-one
      </dsq:thread_identifier>
      <wp:post_date_gmt>
        2009-12-16 23:52:39
      </wp:post_date_gmt>
      <wp:comment>
        <wp:comment_id>
          563
        </wp:comment_id>
        <wp:comment_author>
          Ricardo Peres
        </wp:comment_author>
        <wp:comment_author_url>
          http://nhforge.org/members/rjperes/default.aspx
        </wp:comment_author_url>
        <wp:comment_author_email/>
        <wp:comment_author_IP/>
        <wp:comment_date_gmt>
          2009-12-17 15:14:12
        </wp:comment_date_gmt>
        <wp:comment_content>
          Hi, Steve! Nice work! Two questions, though: 1 - Where can I get your
          provider? 2 - Will it be integrated with the one from NHCommon?
          Thanks, RP
        </wp:comment_content>
        <wp:comment_approved>
          1
        </wp:comment_approved>
      </wp:comment>
      <wp:comment>
        <wp:comment_id>
          564
        </wp:comment_id>
        <wp:comment_author>
          Ricardo Peres
        </wp:comment_author>
        <wp:comment_author_url>
          http://nhforge.org/members/rjperes/default.aspx
        </wp:comment_author_url>
        <wp:comment_author_email/>
        <wp:comment_author_IP/>
        <wp:comment_date_gmt>
          2009-12-17 18:22:52
        </wp:comment_date_gmt>
        <wp:comment_content>
          Forgot to ask: have you tried your provider with ASP.NET Dynamic Data?
        </wp:comment_content>
        <wp:comment_approved>
          1
        </wp:comment_approved>
      </wp:comment>
      <wp:comment>
        <wp:comment_id>
          565
        </wp:comment_id>
        <wp:comment_author>
          Steve Strong
        </wp:comment_author>
        <wp:comment_author_url>
          http://nhforge.org/members/srstrong/default.aspx
        </wp:comment_author_url>
        <wp:comment_author_email/>
        <wp:comment_author_IP/>
        <wp:comment_date_gmt>
          2009-12-17 22:33:52
        </wp:comment_date_gmt>
        <wp:comment_content>
          Ricardo, The new provider is within the NH trunk; it&apos;s no longer
          a separate assembly. Either get the source and build it, or head over
          to www.hornget.net and get the pre-built one from there. As far as
          integration with the NH Common provider, there&apos;s nothing to be
          done here. The NH Common provider will continue to work, although I
          doubt we&apos;ll be making many enhancements / bug fixes to it. The
          new provider in the trunk is the one that we&apos;ll be taking
          forward. Cheers, Steve
        </wp:comment_content>
        <wp:comment_approved>
          1
        </wp:comment_approved>
      </wp:comment>
      <wp:comment>
        <wp:comment_id>
          572
        </wp:comment_id>
        <wp:comment_author>
          Ricardo Peres
        </wp:comment_author>
        <wp:comment_author_url>
          http://nhforge.org/members/rjperes/default.aspx
        </wp:comment_author_url>
        <wp:comment_author_email/>
        <wp:comment_author_IP/>
        <wp:comment_date_gmt>
          2009-12-18 09:49:52
        </wp:comment_date_gmt>
        <wp:comment_content>
          Hello again, What do you mean with the NH trunk? Is it included with
          the NHibernate.dll assembly? The source code at
          https://nhibernate.svn.sourceforge.net/svnroot/nhibernate/trunk/nhibernate/src/ does not contain anything that remotely looks like Linq; the NHibernate.Linq package available at SourceForge looks the same as the one from NHContrib, and there&apos;s not a Query extension method at the SessionExtensions class, only Linq... Thanks, RP
        </wp:comment_content>
        <wp:comment_approved>
          1
        </wp:comment_approved>
      </wp:comment>
      <wp:comment>
        <wp:comment_id>
          575
        </wp:comment_id>
        <wp:comment_author>
          ssimroth
        </wp:comment_author>
        <wp:comment_author_url>
          http://www.empinia.org/node/100
        </wp:comment_author_url>
        <wp:comment_author_email/>
        <wp:comment_author_IP/>
        <wp:comment_date_gmt>
          2009-12-18 16:04:36
        </wp:comment_date_gmt>
        <wp:comment_content>
          The new provider is indeed in the nhibernate trunk, here:
          http://nhibernate.svn.sourceforge.net/viewvc/nhibernate/trunk/nhibernate/src/NHibernate/Linq/ So I guess it is included in NHibernate.dll. I also missed it the first time and started using the old one from NH Contrib... Stefan NHibernate Linq rocks! - http://www.empinia.org/node/100
        </wp:comment_content>
        <wp:comment_approved>
          1
        </wp:comment_approved>
      </wp:comment>
    </item>
    <item>
      <title>
        Linq to NHibernate Progress Report - A Christmas Gift?
      </title>
      <link>
        http://nhibernate.github.io/blogs/nhibernate/archive/2009/12/17/linq-to-nhibernate-progress-report-a-christmas-gift.html
      </link>
      <dsq:thread_identifier>
        blogs_nhibernate_archive_2009_12_17_linq-to-nhibernate-progress-report-a-christmas-gift
      </dsq:thread_identifier>
      <wp:post_date_gmt>
        2009-12-17 00:00:00
      </wp:post_date_gmt>
      <wp:comment>
        <wp:comment_id>
          574
        </wp:comment_id>
        <wp:comment_author>
          ssimroth
        </wp:comment_author>
        <wp:comment_author_url>
          http://www.empinia.org/node/100
        </wp:comment_author_url>
        <wp:comment_author_email/>
        <wp:comment_author_IP/>
        <wp:comment_date_gmt>
          2009-12-18 16:00:50
        </wp:comment_date_gmt>
        <wp:comment_content>
          Great work! I just tried out the NH Linq provider (the old one) and I
          am very happy with it! So happy that I immediately blogged about it,
          in order to convince my team members to use this on our project. And
          I&apos;ll move to the new provider asap. Keep up the good work! Stefan
          http://www.empinia.org/node/100
        </wp:comment_content>
        <wp:comment_approved>
          1
        </wp:comment_approved>
      </wp:comment>
      <wp:comment>
        <wp:comment_id>
          595
        </wp:comment_id>
        <wp:comment_author>
          William Chang
        </wp:comment_author>
        <wp:comment_author_url>
          http://www.williamchang.org
        </wp:comment_author_url>
        <wp:comment_author_email/>
        <wp:comment_author_IP/>
        <wp:comment_date_gmt>
          2010-01-08 03:55:34
        </wp:comment_date_gmt>
        <wp:comment_content>
          Wow! Awesome! One request (don&apos;t know it&apos;s been done because
          I had to use HQL to make it happen), partial property retrieval using
          projections like: var partialCustomer = from c in db.Customers select
          new Customer { CustomerID=c.CustomerID, City=c.City }; Using Linq to
          NHibernate for simple things are great! I wish to do complex queries
          using Linq over ICriteria/HQL/QueryOver. QueryOver is nice, but it
          feels too verbose when typing and reading a complex query compare to
          Linq (easier and simpler to follow). I highly appreciate all the hard
          work supporting Linq for NHibernate. Please keep up the good work and
          your contributions to NHibernate. Thank you!
        </wp:comment_content>
        <wp:comment_approved>
          1
        </wp:comment_approved>
      </wp:comment>
      <wp:comment>
        <wp:comment_id>
          598
        </wp:comment_id>
        <wp:comment_author>
          Odul Kanberoglu
        </wp:comment_author>
        <wp:comment_author_url>
          http://nhforge.org/members/odulkanberoglu/default.aspx
        </wp:comment_author_url>
        <wp:comment_author_email/>
        <wp:comment_author_IP/>
        <wp:comment_date_gmt>
          2010-01-18 14:36:23
        </wp:comment_date_gmt>
        <wp:comment_content>
          I have converted the project I have been working on, to the new
          implementation of NHibernate Linq. Conversion went smooth as expected.
          However, later I had problems with generated expressions for querying
          the database. I cannot confirm if the same problem occured with the
          previous implementation of NHibernate Linq. When an expression is
          formed with a lamda expression in the form
          Expression&lt;Func&lt;Province, bool&gt;&gt; exp = p =&gt; p.CountryId
          == country.Id; where both the CountryId property of the type Province
          and the Id property of the type Country are of type &quot;byte&quot;.
          C# compiler prepares the lambda expression into an expression
          including the casting of the byte property value and the constant
          &quot;country.Id&quot; to Int32. {p =&gt; (Convert(p.CountryId) =
          Convert(value
          (AddressToGo.Business.Default.AddressComponents+&lt;&gt;c__DisplayClass0).country.Id))} When NHibernate Linq prepares the command to execute for retrieval of data by using this expression, parameter for CountryId is generated of type &quot;byte&quot;. When the value from the constant expression country.Id is assigned, an exception is thrown since the constant value is of type &quot;Int32&quot;. The expression can be prepared manually without using a lambda expression and works perfectly. However the amount of code written is larger when compared to a simple lambda expression. ParameterExpression prm = Expression.Parameter(typeof(Province), &quot;p&quot;); Expression&lt;Func&lt;Province, bool&gt;&gt; exp = Expression.Lambda&lt;Func&lt;Province, bool&gt;&gt; ( Expression.Equal ( Expression.MakeMemberAccess(prm, typeof(Province).GetProperty(&quot;CountryId&quot;)), Expression.Constant(country.Id, typeof(byte)) ), prm ); I have started topics about the case on MSDN forums and stackoverflow. http://stackoverflow.com/questions/2072573/lambda-expression-compilation http://social.msdn.microsoft.com/Forums/en-US/linqprojectgeneral/thread/379d431f-3cfc-4751-8401-31ebd353aaf7
        </wp:comment_content>
        <wp:comment_approved>
          1
        </wp:comment_approved>
      </wp:comment>
      <wp:comment>
        <wp:comment_id>
          599
        </wp:comment_id>
        <wp:comment_author>
          Steve Strong
        </wp:comment_author>
        <wp:comment_author_url>
          http://nhforge.org/members/srstrong/default.aspx
        </wp:comment_author_url>
        <wp:comment_author_email/>
        <wp:comment_author_IP/>
        <wp:comment_date_gmt>
          2010-01-18 15:09:25
        </wp:comment_date_gmt>
        <wp:comment_content>
          Odul, Gotta love the compiler :) It shouldn&apos;t be too difficult
          within the provider to detect scenarios such as this - I&apos;ll add
          it to the list. For now, you&apos;ll have to run with the expression
          tree that you&apos;re building by hand, but it does suck quite a lot.
          Cheers, Steve
        </wp:comment_content>
        <wp:comment_approved>
          1
        </wp:comment_approved>
      </wp:comment>
      <wp:comment>
        <wp:comment_id>
          601
        </wp:comment_id>
        <wp:comment_author>
          Loki
        </wp:comment_author>
        <wp:comment_author_url>
          http://nhforge.org/members/Loki/default.aspx
        </wp:comment_author_url>
        <wp:comment_author_email/>
        <wp:comment_author_IP/>
        <wp:comment_date_gmt>
          2010-01-28 12:48:46
        </wp:comment_date_gmt>
        <wp:comment_content>
          Excellent work! Question: it will be supported?: .OrderBy(x =&gt;
          x.Code.ToString()) I expect to see:(SQL) ... FROM .... ORDER BY (CAST
          [Code] as varchar)... Thank you!
        </wp:comment_content>
        <wp:comment_approved>
          1
        </wp:comment_approved>
      </wp:comment>
      <wp:comment>
        <wp:comment_id>
          633
        </wp:comment_id>
        <wp:comment_author>
          Hainesy
        </wp:comment_author>
        <wp:comment_author_url>
          http://
        </wp:comment_author_url>
        <wp:comment_author_email/>
        <wp:comment_author_IP/>
        <wp:comment_date_gmt>
          2010-05-13 09:12:35
        </wp:comment_date_gmt>
        <wp:comment_content>
          Steve I realise this is a bit late on this post, but I&apos;m
          struggling to get my hands on the new Linq code. There&apos;s no
          Query() method off my session... Is it in NHibernate 2.1.2.4000? This
          is the release I&apos;m working off and unfortunately due to
          dependency hell it&apos;s going to be a struggle to upgrade at the
          moment. 
        </wp:comment_content>
        <wp:comment_approved>
          1
        </wp:comment_approved>
      </wp:comment>
      <wp:comment>
        <wp:comment_id>
          861
        </wp:comment_id>
        <wp:comment_author>
          Sulik
        </wp:comment_author>
        <wp:comment_author_url>
          http://nhforge.org/members/Sulik/default.aspx
        </wp:comment_author_url>
        <wp:comment_author_email/>
        <wp:comment_author_IP/>
        <wp:comment_date_gmt>
          2011-04-11 09:29:56
        </wp:comment_date_gmt>
        <wp:comment_content>
          Very helpful 
        </wp:comment_content>
        <wp:comment_approved>
          1
        </wp:comment_approved>
      </wp:comment>
      <wp:comment>
        <wp:comment_id>
          1013
        </wp:comment_id>
        <wp:comment_author>
          RutB
        </wp:comment_author>
        <wp:comment_author_url>
          http://
        </wp:comment_author_url>
        <wp:comment_author_email/>
        <wp:comment_author_IP/>
        <wp:comment_date_gmt>
          2012-01-18 15:09:48
        </wp:comment_date_gmt>
        <wp:comment_content>
          This post is exactly what i was looking for, but unfortunately it
          doesnt works for me :-(. I&apos;m getting the error &quot;The method
          or operation is not implemented&quot;. (We work with nHibernate 3.2)
          Does anyone have an idea what can be the reason? (To be specific,
          I&apos;m getting the error when I adds the &quot;into&quot;
          expression, regular &quot;join&quot; with one key works fine) Thanks
          in advance,
        </wp:comment_content>
        <wp:comment_approved>
          1
        </wp:comment_approved>
      </wp:comment>
    </item>
    <item>
      <title>
        QueryOver in NH 3.0
      </title>
      <link>
        http://nhibernate.github.io/blogs/nhibernate/archive/2009/12/17/queryover-in-nh-3-0.html
      </link>
      <dsq:thread_identifier>
        blogs_nhibernate_archive_2009_12_17_queryover-in-nh-3-0
      </dsq:thread_identifier>
      <wp:post_date_gmt>
        2009-12-17 23:22:00
      </wp:post_date_gmt>
      <wp:comment>
        <wp:comment_id>
          567
        </wp:comment_id>
        <wp:comment_author>
          lefleau
        </wp:comment_author>
        <wp:comment_author_url>
          http://nhforge.org/members/lefleau/default.aspx
        </wp:comment_author_url>
        <wp:comment_author_email/>
        <wp:comment_author_IP/>
        <wp:comment_date_gmt>
          2009-12-18 01:25:12
        </wp:comment_date_gmt>
        <wp:comment_content>
          Nice post. Where or when can we download NH 3.0 ?
        </wp:comment_content>
        <wp:comment_approved>
          1
        </wp:comment_approved>
      </wp:comment>
      <wp:comment>
        <wp:comment_id>
          570
        </wp:comment_id>
        <wp:comment_author>
          Richard Brown
        </wp:comment_author>
        <wp:comment_author_url>
          http://broloco.blogspot.com/
        </wp:comment_author_url>
        <wp:comment_author_email/>
        <wp:comment_author_IP/>
        <wp:comment_date_gmt>
          2009-12-18 09:22:30
        </wp:comment_date_gmt>
        <wp:comment_content>
          leflaeu, This is currently only in the trunk. I think there might be
          an alpha release soon, but in the meantime your options are: 1.
          Download the source and build it; 2. Go to TeamCity, where the CI
          build outputs the binaries; 3. Go to HornGet to get their latest
          binaries. Cheers, Richard
        </wp:comment_content>
        <wp:comment_approved>
          1
        </wp:comment_approved>
      </wp:comment>
      <wp:comment>
        <wp:comment_id>
          571
        </wp:comment_id>
        <wp:comment_author>
          Omer Mor
        </wp:comment_author>
        <wp:comment_author_url>
          http://
        </wp:comment_author_url>
        <wp:comment_author_email/>
        <wp:comment_author_IP/>
        <wp:comment_date_gmt>
          2009-12-18 09:28:01
        </wp:comment_date_gmt>
        <wp:comment_content>
          Great stuff! Regarding the alias API: would it be possible to use:
          session.QueryOver(ref catAlias) instead of
          session.QueryOver&lt;Cat&gt;(() =&gt; catAlias) ?
        </wp:comment_content>
        <wp:comment_approved>
          1
        </wp:comment_approved>
      </wp:comment>
      <wp:comment>
        <wp:comment_id>
          573
        </wp:comment_id>
        <wp:comment_author>
          Richard Brown
        </wp:comment_author>
        <wp:comment_author_url>
          http://broloco.blogspot.com/
        </wp:comment_author_url>
        <wp:comment_author_email/>
        <wp:comment_author_IP/>
        <wp:comment_date_gmt>
          2009-12-18 15:08:07
        </wp:comment_date_gmt>
        <wp:comment_content>
          Hi Omer, I don&apos;t think so. The API relies on using Lambda
          Expression syntax which compiles a LINQ expression that can be
          examined at runtime. A regular variable (in this example passed as a
          reference) would not allow runtime examination of the variable name.
          Cheers, Richard 
        </wp:comment_content>
        <wp:comment_approved>
          1
        </wp:comment_approved>
      </wp:comment>
      <wp:comment>
        <wp:comment_id>
          578
        </wp:comment_id>
        <wp:comment_author>
          desfen
        </wp:comment_author>
        <wp:comment_author_url>
          http://nhforge.org/members/desfen/default.aspx
        </wp:comment_author_url>
        <wp:comment_author_email/>
        <wp:comment_author_IP/>
        <wp:comment_date_gmt>
          2009-12-21 10:51:06
        </wp:comment_date_gmt>
        <wp:comment_content>
          Richard, exciting stuff! These will be welcome changes but please
          don&apos;t forget about us poor VB.NET developers. I know most
          &quot;real&quot; programmers don&apos;t even consider it but is there
          and quite popular too. What is my gripe ? Well, if you translate the
          first query to VB.NET it goes like this: Dim cats As IList(Of Cat) = _
          session.QueryOver(Of Cat)() (leaving out the Where stuff for now) This
          is doesn&apos;t quite &quot;pronounce&quot; easily. In fact I thought
          the generic &lt;&gt; symbols were pronounced &quot;of&quot; by the c#
          guys as well. It becomes even worse with the second query (assuming
          that isn&apos;t a typo): Dim query as QueryOver(Of Cat) = _
          QueryOver.Of(Of Cat)() (again leaving out the where stuff) Thanks for
          your (and the other NH developers&apos;) consideration Sven
        </wp:comment_content>
        <wp:comment_approved>
          1
        </wp:comment_approved>
      </wp:comment>
      <wp:comment>
        <wp:comment_id>
          579
        </wp:comment_id>
        <wp:comment_author>
          Richard Brown
        </wp:comment_author>
        <wp:comment_author_url>
          http://broloco.blogspot.com/
        </wp:comment_author_url>
        <wp:comment_author_email/>
        <wp:comment_author_IP/>
        <wp:comment_date_gmt>
          2009-12-21 12:23:45
        </wp:comment_date_gmt>
        <wp:comment_content>
          Hi Sven, I agree that this is slightly bizarre use of English, and I
          must admit I hadn&apos;t considered VB.Net syntax (I&apos;ve never
          used it personally). C# programmers do tend to use the term
          &quot;Of&quot; conversationally too ... but we don&apos;t usually let
          it get in the way of allowing something like:
          DetachedCriteria.For&lt;Person&gt;(), or session.Get&lt;Person&gt;(3)
          I think the use of generics these days (especially in fluent
          frameworks) goes way beyond the original intentions of the feature, so
          I suspect a certain leeway is often allowed. It&apos;s hard to please
          everyone, but I&apos;m open to suggestions. Do you have an alternative
          proposal for the syntax? Cheers, Richard 
        </wp:comment_content>
        <wp:comment_approved>
          1
        </wp:comment_approved>
      </wp:comment>
      <wp:comment>
        <wp:comment_id>
          580
        </wp:comment_id>
        <wp:comment_author>
          Sven Devriese
        </wp:comment_author>
        <wp:comment_author_url>
          http://nhforge.org/members/desfen/default.aspx
        </wp:comment_author_url>
        <wp:comment_author_email/>
        <wp:comment_author_IP/>
        <wp:comment_date_gmt>
          2009-12-21 12:57:37
        </wp:comment_date_gmt>
        <wp:comment_content>
          Hi Richard, thanks for your consideration. How very smart of you to
          reply with a question :-) I&apos;ll be the first to admit that the
          &quot;Of&quot; syntax in VB.NET (almost) only makes sense in the
          classic generic collection scenario i.e. Generic.IList(Of Customer)
          IMHO the VB.NET compiler team dropped the ball on that choice. As you
          wrote, generics these days is about much more than strongly typed
          collections. So we could wait for the VB.NET compiler team to come to
          their senses and follow the C# team&apos;s lead, as they have done
          with Nullables. Originally the syntax was thus: Dim a as Nullable(Of
          DateTime) whereas as of VB9 we can write this: Dim a as DateTime? So
          maybe in VB.NExT the following syntax would be valid: Dim query As
          QueryOver&lt;Cat&gt; = _ QueryOver.Of&lt;Cat&gt;() However, I&apos;m
          not holding my breath so my personal suggestion for NH&apos;s new
          QueryOver API is to drop the &quot;Over&quot; in QueryOver because
          it&apos;s that preposition that&apos;s conflicting with
          &quot;Of&quot;. Of course, I&apos;m not holding my breath either in
          anticipation of you guys actually making that change but then again
          it&apos;s Christmas. Why not believe in Santa ? ;-) Cheers Sven
        </wp:comment_content>
        <wp:comment_approved>
          1
        </wp:comment_approved>
      </wp:comment>
      <wp:comment>
        <wp:comment_id>
          581
        </wp:comment_id>
        <wp:comment_author>
          Richard Brown
        </wp:comment_author>
        <wp:comment_author_url>
          http://broloco.blogspot.com/
        </wp:comment_author_url>
        <wp:comment_author_email/>
        <wp:comment_author_IP/>
        <wp:comment_date_gmt>
          2009-12-21 13:37:26
        </wp:comment_date_gmt>
        <wp:comment_content>
          Hi Sven, Thanks for the suggestion. Unfortunately (or unsurprisingly)
          we already have a CreateQuery() and an IQuery for HQL in NHibernate.
          So we can&apos;t change QueryOver (and IQueryOver) to Query &amp;
          IQuery respectively. This is why we originally had to come up with
          something else (i.e., QueryOver) in the first place. While I suspect
          you&apos;re right that it&apos;s unlikely to change, you could always
          poll the user group for a more general response. After all, NHibernate
          is owned by the community; so I&apos;d feel duty-bound to change it if
          there was a strong response. Have a great Christmas, and thanks again.
          Richard 
        </wp:comment_content>
        <wp:comment_approved>
          1
        </wp:comment_approved>
      </wp:comment>
      <wp:comment>
        <wp:comment_id>
          584
        </wp:comment_id>
        <wp:comment_author>
          Dmitry
        </wp:comment_author>
        <wp:comment_author_url>
          http://nhforge.org/members/Dmitry/default.aspx
        </wp:comment_author_url>
        <wp:comment_author_email/>
        <wp:comment_author_IP/>
        <wp:comment_date_gmt>
          2009-12-23 02:11:46
        </wp:comment_date_gmt>
        <wp:comment_content>
          Can you have complex Where conditions such as .Where&lt;Person&gt;(p
          =&gt; p.Name.StartsWith(&quot;Smith&quot;)) or .Where&lt;Person&gt;(p
          =&gt; p.Id == 1 || p.Id == 2) 
        </wp:comment_content>
        <wp:comment_approved>
          1
        </wp:comment_approved>
      </wp:comment>
      <wp:comment>
        <wp:comment_id>
          585
        </wp:comment_id>
        <wp:comment_author>
          Richard Brown
        </wp:comment_author>
        <wp:comment_author_url>
          http://broloco.blogspot.com/
        </wp:comment_author_url>
        <wp:comment_author_email/>
        <wp:comment_author_IP/>
        <wp:comment_date_gmt>
          2009-12-23 15:35:28
        </wp:comment_date_gmt>
        <wp:comment_content>
          Hi Dmitry, The first example requires use of a &apos;like&apos; SQL
          expression, but you cannot use the StartsWith() method. This would be
          written as: .WhereRestrictionOn(p =&gt;
          p.Name).IsLike(&quot;Smith%&quot;) or
          .Where(Restrictions.On&lt;Person&gt;(p =&gt;
          p.Name).IsLike(&quot;Smith%&quot;)) The second example looks fine.
          Regards, Richard 
        </wp:comment_content>
        <wp:comment_approved>
          1
        </wp:comment_approved>
      </wp:comment>
      <wp:comment>
        <wp:comment_id>
          592
        </wp:comment_id>
        <wp:comment_author>
          Buthrakaur
        </wp:comment_author>
        <wp:comment_author_url>
          http://nhforge.org/members/Buthrakaur/default.aspx
        </wp:comment_author_url>
        <wp:comment_author_email/>
        <wp:comment_author_IP/>
        <wp:comment_date_gmt>
          2010-01-06 14:56:58
        </wp:comment_date_gmt>
        <wp:comment_content>
          aggregates aren&apos;t supported or do I miss something? I&apos;d
          really appreciate standard aggregate functions support...
        </wp:comment_content>
        <wp:comment_approved>
          1
        </wp:comment_approved>
      </wp:comment>
      <wp:comment>
        <wp:comment_id>
          593
        </wp:comment_id>
        <wp:comment_author>
          Richard Brown
        </wp:comment_author>
        <wp:comment_author_url>
          http://broloco.blogspot.com/
        </wp:comment_author_url>
        <wp:comment_author_email/>
        <wp:comment_author_IP/>
        <wp:comment_date_gmt>
          2010-01-06 17:13:30
        </wp:comment_date_gmt>
        <wp:comment_content>
          Hi, You can do something like the following (in a similar fashion to
          ICriteria): session.QueryOver&lt;Person&gt;()
          .Select(Projections.Avg&lt;person&gt;(p =&gt; p.Age))
          .SingleOrDefault&lt;int&gt;() .. or using inline syntax ....
          session.QueryOver&lt;Person&gt;() .SelectList .SelectAvg(p =&gt;
          p.Age) .EndSelect .SingleOrDefault&lt;int&gt;() Regards, Richard 
        </wp:comment_content>
        <wp:comment_approved>
          1
        </wp:comment_approved>
      </wp:comment>
      <wp:comment>
        <wp:comment_id>
          594
        </wp:comment_id>
        <wp:comment_author>
          Buthrakaur
        </wp:comment_author>
        <wp:comment_author_url>
          http://nhforge.org/members/Buthrakaur/default.aspx
        </wp:comment_author_url>
        <wp:comment_author_email/>
        <wp:comment_author_IP/>
        <wp:comment_date_gmt>
          2010-01-07 11:19:02
        </wp:comment_date_gmt>
        <wp:comment_content>
          great.. thanks a lot
        </wp:comment_content>
        <wp:comment_approved>
          1
        </wp:comment_approved>
      </wp:comment>
      <wp:comment>
        <wp:comment_id>
          596
        </wp:comment_id>
        <wp:comment_author>
          maciejk
        </wp:comment_author>
        <wp:comment_author_url>
          http://nhforge.org/members/maciejk/default.aspx
        </wp:comment_author_url>
        <wp:comment_author_email/>
        <wp:comment_author_IP/>
        <wp:comment_date_gmt>
          2010-01-16 16:33:24
        </wp:comment_date_gmt>
        <wp:comment_content>
          Looks great. However, SelectList / EndSelect syntax is a bit awkward
          to me. Why not use nested closure instead? Like:
          session.QueryOver&lt;Cat&gt;() .SelectList(list =&gt; { list.Select(c
          =&gt; c.Name); list.SelectAvg(c =&gt; c.Age); });
        </wp:comment_content>
        <wp:comment_approved>
          1
        </wp:comment_approved>
      </wp:comment>
      <wp:comment>
        <wp:comment_id>
          597
        </wp:comment_id>
        <wp:comment_author>
          Richard Brown
        </wp:comment_author>
        <wp:comment_author_url>
          http://broloco.blogspot.com/
        </wp:comment_author_url>
        <wp:comment_author_email/>
        <wp:comment_author_IP/>
        <wp:comment_date_gmt>
          2010-01-16 20:58:30
        </wp:comment_date_gmt>
        <wp:comment_content>
           I like that suggestion. Shouldn&apos;t be too much work either ...
          I&apos;ll see if I can squeeze it in next week. Cheers!
        </wp:comment_content>
        <wp:comment_approved>
          1
        </wp:comment_approved>
      </wp:comment>
      <wp:comment>
        <wp:comment_id>
          600
        </wp:comment_id>
        <wp:comment_author>
          wanda
        </wp:comment_author>
        <wp:comment_author_url>
          http://nhforge.org/members/wanda/default.aspx
        </wp:comment_author_url>
        <wp:comment_author_email/>
        <wp:comment_author_IP/>
        <wp:comment_date_gmt>
          2010-01-24 22:52:14
        </wp:comment_date_gmt>
        <wp:comment_content>
          Well documented and explained code. Thanks.
        </wp:comment_content>
        <wp:comment_approved>
          1
        </wp:comment_approved>
      </wp:comment>
      <wp:comment>
        <wp:comment_id>
          602
        </wp:comment_id>
        <wp:comment_author>
          jwdavidson
        </wp:comment_author>
        <wp:comment_author_url>
          http://
        </wp:comment_author_url>
        <wp:comment_author_email/>
        <wp:comment_author_IP/>
        <wp:comment_date_gmt>
          2010-01-29 17:16:55
        </wp:comment_date_gmt>
        <wp:comment_content>
          @maciejk, @Richard Brown I just noticed this post and saw the proposed
          syntax. C# has support for a lambda expression tree as is proposed,
          but that is not yet available for VB users. The original SelectList /
          EndSelect syntax would however work for both languages Sometimes VB is
          not a choice, but a requirement! Hope you can reconsider this.
        </wp:comment_content>
        <wp:comment_approved>
          1
        </wp:comment_approved>
      </wp:comment>
      <wp:comment>
        <wp:comment_id>
          604
        </wp:comment_id>
        <wp:comment_author>
          whut
        </wp:comment_author>
        <wp:comment_author_url>
          http://dotnet.uni.lodz.pl/whut
        </wp:comment_author_url>
        <wp:comment_author_email/>
        <wp:comment_author_IP/>
        <wp:comment_date_gmt>
          2010-02-05 09:23:30
        </wp:comment_date_gmt>
        <wp:comment_content>
          As I understand it, QueryOver is an overlay on new possibilities which
          you introduced to ICriteria API, in such a way that you don&apos;t
          even need to use 1) session.QueryOver&lt;Cat&gt;().Where(c =&gt;
          c.Name = &quot;Kitty&quot;), but end up with using 2)
          session.CreateCriteria&lt;Cat&gt;().And(Restriction.Where(c =&gt;
          c.Name = &quot;Kitty&quot;). If I&apos;m true, I think that the name
          should reflect this, and be something like: 3)
          session.CreateQueryCriteria&lt;Cat&gt;() Or better yet, IMO!, you
          should just make all possibilities available through 4)
          session.CreateCriteria&lt;Cat&gt;(). This way we will have all the
          goods: familiar, old syntax and new powerful possibilities without
          adding something that is yet another way of querying and that looks
          almost exactly (!) like Linq: 5) session.Query&lt;Cat&gt;().Where(c
          =&gt; c.Name = &quot;Kitty&quot;) I believe that writing like in 2) is
          not that harder than in 1) that it justify itself to create a new API.
          And for those that will want that kind of API will have Linq. And two
          more things 1. Why you use at the same time implicit and explicit
          interface implementation in the same classes in QueryOver.cs? 2. This
          one is completely irrelevant and a matter of taste:) . You have:
          Restriction.On&lt;Cat&gt;.IsLike(&quot;%anna%&quot;) Maybe create
          something like: Restriction.Like&lt;Cat&gt;(c =&gt; c.Name,
          &quot;%anna%) 
        </wp:comment_content>
        <wp:comment_approved>
          1
        </wp:comment_approved>
      </wp:comment>
      <wp:comment>
        <wp:comment_id>
          605
        </wp:comment_id>
        <wp:comment_author>
          whut
        </wp:comment_author>
        <wp:comment_author_url>
          http://nhforge.org/members/whut/default.aspx
        </wp:comment_author_url>
        <wp:comment_author_email/>
        <wp:comment_author_IP/>
        <wp:comment_date_gmt>
          2010-02-05 09:25:16
        </wp:comment_date_gmt>
        <wp:comment_content>
          It&apos;s really nice piece of work, btw.
        </wp:comment_content>
        <wp:comment_approved>
          1
        </wp:comment_approved>
      </wp:comment>
      <wp:comment>
        <wp:comment_id>
          606
        </wp:comment_id>
        <wp:comment_author>
          Richard Brown
        </wp:comment_author>
        <wp:comment_author_url>
          http://broloco.blogspot.com/
        </wp:comment_author_url>
        <wp:comment_author_email/>
        <wp:comment_author_IP/>
        <wp:comment_date_gmt>
          2010-02-07 10:40:29
        </wp:comment_date_gmt>
        <wp:comment_content>
          Hi jwdavidson, Unfortunately I&apos;ve never used VB.Net, so I&apos;m
          unable to confirm which parts of the QueryOver API work with it. There
          has also been discussions in the development group about what
          can/can&apos;t be supported with VB.Net:
          http://groups.google.com/group/nhibernate-development/msg/5a67ddd9dc33b3b3? As mentioned in the previous comments, if this becomes a highly voted for issue by the community, then I&apos;m sure we&apos;ll readdress the problem. Regards, Richard
        </wp:comment_content>
        <wp:comment_approved>
          1
        </wp:comment_approved>
      </wp:comment>
      <wp:comment>
        <wp:comment_id>
          607
        </wp:comment_id>
        <wp:comment_author>
          Richard Brown
        </wp:comment_author>
        <wp:comment_author_url>
          http://broloco.blogspot.com/
        </wp:comment_author_url>
        <wp:comment_author_email/>
        <wp:comment_author_IP/>
        <wp:comment_date_gmt>
          2010-02-07 10:53:53
        </wp:comment_date_gmt>
        <wp:comment_content>
          Hi Rafal, Regarding points 1-4: The QueryOver does not return
          ICriteria, but a typed interface (IQueryOver&lt;T,U&gt;). The overload
          ISession.CreateCriteria&lt;T&gt;() already exists, and the decision to
          make the new API QueryOver was taken to specifically avoid clashes
          with the existing syntax. While you can mix the new Restrictions
          overloads with the old ICriteria interface (as per point 1 &amp; 2),
          you lose the implicit type that comes from the new interface. Point 2
          actually has to be written as:
          session.CreateCriteria&lt;Cat&gt;().And(Restriction.Where&lt;Cat&gt;(c
          =&gt; c.Name = &quot;Kitty&quot;)) (Note the extra qualification of
          &apos;Cat&apos; that is not required with IQueryOver). On the second
          subject, point 1; the explicit interface implementation is used
          because we have two overloads that only differ in return type (one
          returns QueryOver, the other returns IQueryOver). And finally, I agree
          the last point is a matter of taste. The inline restrictions become
          much easier to implement when each combination is not a separate
          overload. Hope all that helps. Richard
        </wp:comment_content>
        <wp:comment_approved>
          1
        </wp:comment_approved>
      </wp:comment>
      <wp:comment>
        <wp:comment_id>
          609
        </wp:comment_id>
        <wp:comment_author>
          Buthrakaur
        </wp:comment_author>
        <wp:comment_author_url>
          http://nhforge.org/members/Buthrakaur/default.aspx
        </wp:comment_author_url>
        <wp:comment_author_email/>
        <wp:comment_author_IP/>
        <wp:comment_date_gmt>
          2010-02-12 11:01:49
        </wp:comment_date_gmt>
        <wp:comment_content>
          Is there any simple method how to set projections on QueryOver
          queries? I need to get count of entities returned by a QueryOver query
          and didn&apos;t find other method than using underlying CriteriaAPI
          like this: var qry = customerRepo.QueryOver() .WhereRestrictionOn(c
          =&gt; c.Name).IsInsensitiveLike(query.Name, MatchMode.Start)
          .AndRestrictionOn(c =&gt;
          c.Address.City).IsInsensitiveLike(query.City, MatchMode.Start); var
          countCrit = (ICriteria)qry.UnderlyingCriteria.Clone();
          countCrit.SetProjection(Projections.RowCount()); res.TotalItemsCount =
          Convert.ToInt32(countCrit.UniqueResult()); 
        </wp:comment_content>
        <wp:comment_approved>
          1
        </wp:comment_approved>
      </wp:comment>
      <wp:comment>
        <wp:comment_id>
          610
        </wp:comment_id>
        <wp:comment_author>
          Buthrakaur
        </wp:comment_author>
        <wp:comment_author_url>
          http://nhforge.org/members/Buthrakaur/default.aspx
        </wp:comment_author_url>
        <wp:comment_author_email/>
        <wp:comment_author_IP/>
        <wp:comment_date_gmt>
          2010-02-12 12:23:43
        </wp:comment_date_gmt>
        <wp:comment_content>
          sorry for my blindness :)
          qry.Select(Projections.RowCount()).List&lt;int&gt;().FirstOrDefault()
        </wp:comment_content>
        <wp:comment_approved>
          1
        </wp:comment_approved>
      </wp:comment>
      <wp:comment>
        <wp:comment_id>
          617
        </wp:comment_id>
        <wp:comment_author>
          SynC
        </wp:comment_author>
        <wp:comment_author_url>
          http://nhforge.org/members/SynC/default.aspx
        </wp:comment_author_url>
        <wp:comment_author_email/>
        <wp:comment_author_IP/>
        <wp:comment_date_gmt>
          2010-03-01 16:43:02
        </wp:comment_date_gmt>
        <wp:comment_content>
          Hi Richard, help please. 1. Can be done something similar:
          session.QueryOver&lt;Order&gt;() .SelectList(list =&gt; {
          list.Select(c =&gt; c.Price * c.Count); }); ? 2. What about using
          anonymous types for projecting?
        </wp:comment_content>
        <wp:comment_approved>
          1
        </wp:comment_approved>
      </wp:comment>
      <wp:comment>
        <wp:comment_id>
          621
        </wp:comment_id>
        <wp:comment_author>
          Richard Brown
        </wp:comment_author>
        <wp:comment_author_url>
          http://broloco.blogspot.com/
        </wp:comment_author_url>
        <wp:comment_author_email/>
        <wp:comment_author_IP/>
        <wp:comment_date_gmt>
          2010-03-06 23:25:58
        </wp:comment_date_gmt>
        <wp:comment_content>
          Hi SynC, 1. QueryOver is built on top of the ICriteria API, and
          I&apos;m not sure you can do that projection in the ICriteria API (I
          could be wrong though); 2. Fabio suggested the same thing. I tried
          projecting directly into anonymous types, something like: .Select(o
          =&gt; new { o.Price, o.Count}); I couldn&apos;t get it to work; I
          can&apos;t remember the exact problem I had, but it was something to
          do with the parameters to the anonymous function. Also, I&apos;m not
          sure if the syntax would execute the query at this point, or still
          return an IQueryOver (to then call List(), or SingleOrDefault().) I
          might try again sometime when I&apos;ve got some spare time. Oh, and
          patches are always welcome too. ;-) Richard
        </wp:comment_content>
        <wp:comment_approved>
          1
        </wp:comment_approved>
      </wp:comment>
      <wp:comment>
        <wp:comment_id>
          647
        </wp:comment_id>
        <wp:comment_author>
          technology essays
        </wp:comment_author>
        <wp:comment_author_url>
          http://www.mightystudents.com/catalog/technology
        </wp:comment_author_url>
        <wp:comment_author_email/>
        <wp:comment_author_IP/>
        <wp:comment_date_gmt>
          2010-06-28 08:58:26
        </wp:comment_date_gmt>
        <wp:comment_content>
          @maciejk: Thanks for the suggestion. I did play with the code you
          shared. I was able to run it flawlessly. Thanks again
        </wp:comment_content>
        <wp:comment_approved>
          1
        </wp:comment_approved>
      </wp:comment>
      <wp:comment>
        <wp:comment_id>
          648
        </wp:comment_id>
        <wp:comment_author>
          Richard Brown
        </wp:comment_author>
        <wp:comment_author_url>
          http://broloco.blogspot.com/
        </wp:comment_author_url>
        <wp:comment_author_email/>
        <wp:comment_author_IP/>
        <wp:comment_date_gmt>
          2010-06-28 10:49:18
        </wp:comment_date_gmt>
        <wp:comment_content>
          Note, the syntax changed slightly recently - it&apos;s now
          .SelectList(list =&gt; list...) (to avoid clashing with intellisense)
        </wp:comment_content>
        <wp:comment_approved>
          1
        </wp:comment_approved>
      </wp:comment>
      <wp:comment>
        <wp:comment_id>
          758
        </wp:comment_id>
        <wp:comment_author>
          gt124
        </wp:comment_author>
        <wp:comment_author_url>
          http://nhforge.org/members/gt124/default.aspx
        </wp:comment_author_url>
        <wp:comment_author_email/>
        <wp:comment_author_IP/>
        <wp:comment_date_gmt>
          2010-12-29 21:47:52
        </wp:comment_date_gmt>
        <wp:comment_content>
          What an awesome feature, I don&apos;t have performance issues yet, so
          I basically used to use Criteria for everything and Ayende&apos;s
          filter pattern all over the place. However, I just love queryover
          syntax and I need more documentation please. It was a supreme pain
          figuring out how to do a &quot;NOT IN&quot; yesterday, if you are
          looking, use a WhereRestrictionOn instead of where. Yes, I guess I
          should write it myself, but with a job and two kids, I&apos;m hoping
          one of the younger super brains can do it for me :) Have a heart!
        </wp:comment_content>
        <wp:comment_approved>
          1
        </wp:comment_approved>
      </wp:comment>
      <wp:comment>
        <wp:comment_id>
          762
        </wp:comment_id>
        <wp:comment_author>
          James K.
        </wp:comment_author>
        <wp:comment_author_url>
          http://nhforge.org/members/danleyvilla/default.aspx
        </wp:comment_author_url>
        <wp:comment_author_email/>
        <wp:comment_author_IP/>
        <wp:comment_date_gmt>
          2011-01-13 18:42:32
        </wp:comment_date_gmt>
        <wp:comment_content>
          I&apos;ve tried looking through the source but it doesn&apos;t really
          explains it fully to me. How do they make them type safe, at compile
          time, without the need for any proxy classes that extends them? I
          would like to &quot;copy&quot; this behavior but for that I need some
          basic understanding of the concept, any pointers to documentation on
          the subject is also welcome. &lt;a
          href=&quot;http://www.eurodebt.com/&quot;&gt;debt solutions&lt;/a&gt; 
        </wp:comment_content>
        <wp:comment_approved>
          1
        </wp:comment_approved>
      </wp:comment>
      <wp:comment>
        <wp:comment_id>
          764
        </wp:comment_id>
        <wp:comment_author>
          Rafał Kłys
        </wp:comment_author>
        <wp:comment_author_url>
          http://dotnet.uni.lodz.pl/whut/
        </wp:comment_author_url>
        <wp:comment_author_email/>
        <wp:comment_author_IP/>
        <wp:comment_date_gmt>
          2011-01-16 11:15:08
        </wp:comment_date_gmt>
        <wp:comment_content>
          For a long time I didn&apos;t understand the need for QueryOver. But
          lately I used for the first time NH LINQ, and after some time I
          thought: Well, Linq is nice, but I don&apos;t like the transparent
          translation from database query into in-memory query. I would like
          something like ICriteria, but strongly typed. Oh, there is such thing,
          QueryOver! Thanks!
        </wp:comment_content>
        <wp:comment_approved>
          1
        </wp:comment_approved>
      </wp:comment>
      <wp:comment>
        <wp:comment_id>
          805
        </wp:comment_id>
        <wp:comment_author>
          Hainesy
        </wp:comment_author>
        <wp:comment_author_url>
          http://
        </wp:comment_author_url>
        <wp:comment_author_email/>
        <wp:comment_author_IP/>
        <wp:comment_date_gmt>
          2011-03-01 15:10:24
        </wp:comment_date_gmt>
        <wp:comment_content>
          Hi I know this is an old post but this took me ages to work out...
          your two examples showing projections with Avg for cat age, the
          selects should be SelectGroup, as shown in your AliasToBean example.
        </wp:comment_content>
        <wp:comment_approved>
          1
        </wp:comment_approved>
      </wp:comment>
      <wp:comment>
        <wp:comment_id>
          806
        </wp:comment_id>
        <wp:comment_author>
          Hainesy
        </wp:comment_author>
        <wp:comment_author_url>
          http://
        </wp:comment_author_url>
        <wp:comment_author_email/>
        <wp:comment_author_IP/>
        <wp:comment_date_gmt>
          2011-03-01 15:21:27
        </wp:comment_date_gmt>
        <wp:comment_content>
          Hi I have a problem using Cacheable() after
          .TransformUsing(Transformers.AliasToBean&lt;T&gt;()) I get the error:
          Unable to cast object of type &apos;...&apos; to type
          &apos;System.Object[]&apos;. Seems that cacheable doesn&apos;t work
          with the bean transformation?
        </wp:comment_content>
        <wp:comment_approved>
          1
        </wp:comment_approved>
      </wp:comment>
      <wp:comment>
        <wp:comment_id>
          988
        </wp:comment_id>
        <wp:comment_author>
          Rob Benwell
        </wp:comment_author>
        <wp:comment_author_url>
          http://twitter.com/#!/robbenwell
        </wp:comment_author_url>
        <wp:comment_author_email/>
        <wp:comment_author_IP/>
        <wp:comment_date_gmt>
          2011-09-30 11:43:40
        </wp:comment_date_gmt>
        <wp:comment_content>
          You covered this topic well. It helps a lot of newbies out there.
          Looking for more....
        </wp:comment_content>
        <wp:comment_approved>
          1
        </wp:comment_approved>
      </wp:comment>
      <wp:comment>
        <wp:comment_id>
          1012
        </wp:comment_id>
        <wp:comment_author>
          tory burch outlet
        </wp:comment_author>
        <wp:comment_author_url>
          http://www.toryburchsupermall.com/
        </wp:comment_author_url>
        <wp:comment_author_email/>
        <wp:comment_author_IP/>
        <wp:comment_date_gmt>
          2012-01-13 12:59:09
        </wp:comment_date_gmt>
        <wp:comment_content>
          Hi! I found your blog on AOL.It’s really comprehensive and it helped
          me a lot. Continue the good work!
        </wp:comment_content>
        <wp:comment_approved>
          1
        </wp:comment_approved>
      </wp:comment>
    </item>
    <item>
      <title>
        State (or Strategy) Pattern with NHibernate
      </title>
      <link>
        http://nhibernate.github.io/blogs/nhibernate/archive/2009/12/18/state-or-strategy-pattern-with-nhibernate.html
      </link>
      <dsq:thread_identifier>
        blogs_nhibernate_archive_2009_12_18_state-or-strategy-pattern-with-nhibernate
      </dsq:thread_identifier>
      <wp:post_date_gmt>
        2009-12-18 15:08:00
      </wp:post_date_gmt>
    </item>
    <item>
      <title>
        Db2hbm: convert db schema to hbm
      </title>
      <link>
        http://nhibernate.github.io/blogs/nhibernate/archive/2010/02/25/db2hbm-convert-dbschema-to-hbm.html
      </link>
      <dsq:thread_identifier>
        blogs_nhibernate_archive_2010_02_25_db2hbm-convert-dbschema-to-hbm
      </dsq:thread_identifier>
      <wp:post_date_gmt>
        2010-02-25 13:23:00
      </wp:post_date_gmt>
    </item>
    <item>
      <title>
        Some Progress with HqlIntellisense…
      </title>
      <link>
        http://nhibernate.github.io/blogs/nhibernate/archive/2010/04/22/some-progress-with-hqlintellisense.html
      </link>
      <dsq:thread_identifier>
        blogs_nhibernate_archive_2010_04_22_some-progress-with-hqlintellisense
      </dsq:thread_identifier>
      <wp:post_date_gmt>
        2010-04-22 17:08:00
      </wp:post_date_gmt>
    </item>
    <item>
      <title>
        First three NHibernate quickstart tutorials available
      </title>
      <link>
        http://nhibernate.github.io/blogs/nhibernate/archive/2010/04/25/first-three-nhibernate-quickstart-tutorials-available.html
      </link>
      <dsq:thread_identifier>
        blogs_nhibernate_archive_2010_04_25_first-three-nhibernate-quickstart-tutorials-available
      </dsq:thread_identifier>
      <wp:post_date_gmt>
        2010-04-25 20:43:00
      </wp:post_date_gmt>
    </item>
    <item>
      <title>
        Two new NHibernate Quickstart Tutorials
      </title>
      <link>
        http://nhibernate.github.io/blogs/nhibernate/archive/2010/05/14/two-new-nhibernate-quickstart-tutorials.html
      </link>
      <dsq:thread_identifier>
        blogs_nhibernate_archive_2010_05_14_two-new-nhibernate-quickstart-tutorials
      </dsq:thread_identifier>
      <wp:post_date_gmt>
        2010-05-15 04:12:00
      </wp:post_date_gmt>
      <wp:comment>
        <wp:comment_id>
          707
        </wp:comment_id>
        <wp:comment_author>
          testmon77
        </wp:comment_author>
        <wp:comment_author_url>
          http://nhforge.org/members/testmon77/default.aspx
        </wp:comment_author_url>
        <wp:comment_author_email/>
        <wp:comment_author_IP/>
        <wp:comment_date_gmt>
          2010-08-13 01:24:39
        </wp:comment_date_gmt>
        <wp:comment_content>
          Part 4: Interesting! we don&apos;t need to call the method
          ProductKey.Generate(NHibernate.Engine.ISessionImplementor session,
          object obj) 
        </wp:comment_content>
        <wp:comment_approved>
          1
        </wp:comment_approved>
      </wp:comment>
    </item>
    <item>
      <title>
        Not So Hidden Gems of NHibernate – Formula Discriminators
      </title>
      <link>
        http://nhibernate.github.io/blogs/nhibernate/archive/2010/05/15/not-so-hidden-gems-of-nhibernate-formula-discriminators.html
      </link>
      <dsq:thread_identifier>
        blogs_nhibernate_archive_2010_05_15_not-so-hidden-gems-of-nhibernate-formula-discriminators
      </dsq:thread_identifier>
      <wp:post_date_gmt>
        2010-05-15 20:49:53
      </wp:post_date_gmt>
      <wp:comment>
        <wp:comment_id>
          642
        </wp:comment_id>
        <wp:comment_author>
          Hans Torm
        </wp:comment_author>
        <wp:comment_author_url>
          http://nhforge.org/members/hfztt/default.aspx
        </wp:comment_author_url>
        <wp:comment_author_email/>
        <wp:comment_author_IP/>
        <wp:comment_date_gmt>
          2010-06-03 18:32:32
        </wp:comment_date_gmt>
        <wp:comment_content>
          I had to do the same when mapping to our legacy database. Only I had
          to do a select from another table in the case statement to get the
          info needed for the discriminator. I was impressed how easy it
          actually was to get working painlessly in NHibernate though.
        </wp:comment_content>
        <wp:comment_approved>
          1
        </wp:comment_approved>
      </wp:comment>
    </item>
    <item>
      <title>
        NHibernate Workbench
      </title>
      <link>
        http://nhibernate.github.io/blogs/nhibernate/archive/2010/05/19/nhibernate-workbench.html
      </link>
      <dsq:thread_identifier>
        blogs_nhibernate_archive_2010_05_19_nhibernate-workbench
      </dsq:thread_identifier>
      <wp:post_date_gmt>
        2010-05-19 15:29:00
      </wp:post_date_gmt>
      <wp:comment>
        <wp:comment_id>
          638
        </wp:comment_id>
        <wp:comment_author>
          Diego Jancic
        </wp:comment_author>
        <wp:comment_author_url>
          http://nhforge.org/members/diegojancic/default.aspx
        </wp:comment_author_url>
        <wp:comment_author_email/>
        <wp:comment_author_IP/>
        <wp:comment_date_gmt>
          2010-05-19 19:06:35
        </wp:comment_date_gmt>
        <wp:comment_content>
          Awesome man! I hope you continue with the work! I&apos;m waiting the
          addition of the hbm2net to the app! :)
        </wp:comment_content>
        <wp:comment_approved>
          1
        </wp:comment_approved>
      </wp:comment>
      <wp:comment>
        <wp:comment_id>
          639
        </wp:comment_id>
        <wp:comment_author>
          Mohamed Meligy
        </wp:comment_author>
        <wp:comment_author_url>
          http://gurustop.net
        </wp:comment_author_url>
        <wp:comment_author_email/>
        <wp:comment_author_IP/>
        <wp:comment_date_gmt>
          2010-05-23 04:48:34
        </wp:comment_date_gmt>
        <wp:comment_content>
          I&apos;ve just checked the stuff. The most incredible thing is how
          updated this is (last commit is yesterday, wow). Thanks a lot. This is
          a really big project and should have more awareness from NH users. You
          rock, man.
        </wp:comment_content>
        <wp:comment_approved>
          1
        </wp:comment_approved>
      </wp:comment>
      <wp:comment>
        <wp:comment_id>
          643
        </wp:comment_id>
        <wp:comment_author>
          Carlos Cubas
        </wp:comment_author>
        <wp:comment_author_url>
          http://nhforge.org/members/venomcc/default.aspx
        </wp:comment_author_url>
        <wp:comment_author_email/>
        <wp:comment_author_IP/>
        <wp:comment_date_gmt>
          2010-06-10 12:44:46
        </wp:comment_date_gmt>
        <wp:comment_content>
          Awesome! Any plans for a visual studio extension?
        </wp:comment_content>
        <wp:comment_approved>
          1
        </wp:comment_approved>
      </wp:comment>
      <wp:comment>
        <wp:comment_id>
          644
        </wp:comment_id>
        <wp:comment_author>
          felicepollano
        </wp:comment_author>
        <wp:comment_author_url>
          http://nhforge.org/members/felicepollano/default.aspx
        </wp:comment_author_url>
        <wp:comment_author_email/>
        <wp:comment_author_IP/>
        <wp:comment_date_gmt>
          2010-06-10 14:49:36
        </wp:comment_date_gmt>
        <wp:comment_content>
          I need to learn how to. Even having hbm2net better integrated in
          visual studio would help... 
        </wp:comment_content>
        <wp:comment_approved>
          1
        </wp:comment_approved>
      </wp:comment>
    </item>
    <item>
      <title>
        NHibernate and Composite Keys
      </title>
      <link>
        http://nhibernate.github.io/blogs/nhibernate/archive/2010/06/30/nhibernate-and-composite-keys.html
      </link>
      <dsq:thread_identifier>
        blogs_nhibernate_archive_2010_06_30_nhibernate-and-composite-keys
      </dsq:thread_identifier>
      <wp:post_date_gmt>
        2010-07-01 05:11:00
      </wp:post_date_gmt>
      <wp:comment>
        <wp:comment_id>
          651
        </wp:comment_id>
        <wp:comment_author>
          John Davidson
        </wp:comment_author>
        <wp:comment_author_url>
          http://
        </wp:comment_author_url>
        <wp:comment_author_email/>
        <wp:comment_author_IP/>
        <wp:comment_date_gmt>
          2010-07-01 14:56:53
        </wp:comment_date_gmt>
        <wp:comment_content>
          Thanks for posting this here, Anne. It will get a lot use
        </wp:comment_content>
        <wp:comment_approved>
          1
        </wp:comment_approved>
      </wp:comment>
      <wp:comment>
        <wp:comment_id>
          716
        </wp:comment_id>
        <wp:comment_author>
          mknet
        </wp:comment_author>
        <wp:comment_author_url>
          http://nhforge.org/members/mknet/default.aspx
        </wp:comment_author_url>
        <wp:comment_author_email/>
        <wp:comment_author_IP/>
        <wp:comment_date_gmt>
          2010-10-05 10:59:33
        </wp:comment_date_gmt>
        <wp:comment_content>
          Hi, I used your example it&apos;s work fine when the object is
          created. I have forenkey error when I add element to collection and I
          save the new object. can you help me ?
        </wp:comment_content>
        <wp:comment_approved>
          1
        </wp:comment_approved>
      </wp:comment>
      <wp:comment>
        <wp:comment_id>
          1016
        </wp:comment_id>
        <wp:comment_author>
          ramonsmits
        </wp:comment_author>
        <wp:comment_author_url>
          http://bloggingabout.net/blogs/ramon/
        </wp:comment_author_url>
        <wp:comment_author_email/>
        <wp:comment_author_IP/>
        <wp:comment_date_gmt>
          2012-04-19 11:13:22
        </wp:comment_date_gmt>
        <wp:comment_content>
          I advise you to adjust your GetHashCode method in this example: return
          ProductIdGetHashCode() ^ CategoryId.GetHashCode();
        </wp:comment_content>
        <wp:comment_approved>
          1
        </wp:comment_approved>
      </wp:comment>
    </item>
    <item>
      <title>
        NHibernate Auditing v3 – Poor Man’s Envers
      </title>
      <link>
        http://nhibernate.github.io/blogs/nhibernate/archive/2010/07/05/nhibernate-auditing-v3-poor-man-s-envers.html
      </link>
      <dsq:thread_identifier>
        blogs_nhibernate_archive_2010_07_05_nhibernate-auditing-v3-poor-man-s-envers
      </dsq:thread_identifier>
      <wp:post_date_gmt>
        2010-07-06 05:25:00
      </wp:post_date_gmt>
      <wp:comment>
        <wp:comment_id>
          658
        </wp:comment_id>
        <wp:comment_author>
          Natural
        </wp:comment_author>
        <wp:comment_author_url>
          http://nhforge.org/members/Natural/default.aspx
        </wp:comment_author_url>
        <wp:comment_author_email/>
        <wp:comment_author_IP/>
        <wp:comment_date_gmt>
          2010-07-06 06:32:10
        </wp:comment_date_gmt>
        <wp:comment_content>
          Wheres NH3.0
        </wp:comment_content>
        <wp:comment_approved>
          1
        </wp:comment_approved>
      </wp:comment>
      <wp:comment>
        <wp:comment_id>
          659
        </wp:comment_id>
        <wp:comment_author>
          Jason Dentler
        </wp:comment_author>
        <wp:comment_author_url>
          http://nhforge.org/members/Jason-Dentler/default.aspx
        </wp:comment_author_url>
        <wp:comment_author_email/>
        <wp:comment_author_IP/>
        <wp:comment_date_gmt>
          2010-07-06 13:10:11
        </wp:comment_date_gmt>
        <wp:comment_content>
          NHibernate 3.0 is the current trunk. It&apos;ll be officially released
          later this year.
        </wp:comment_content>
        <wp:comment_approved>
          1
        </wp:comment_approved>
      </wp:comment>
      <wp:comment>
        <wp:comment_id>
          670
        </wp:comment_id>
        <wp:comment_author>
          David W Martines
        </wp:comment_author>
        <wp:comment_author_url>
          http://blogs.businesssoftwareengineering.com/
        </wp:comment_author_url>
        <wp:comment_author_email/>
        <wp:comment_author_IP/>
        <wp:comment_date_gmt>
          2010-07-18 19:21:23
        </wp:comment_date_gmt>
        <wp:comment_content>
          Thanks for posting about this - it looks really cool and I am looking
          forward to trying it out. I do have a question, though. Could you
          explain why you would exclude the generation of the CatAudit table
          from the schema export? I would think you would want the create table
          script executed along with the real Cat table. At least the way I
          work, I use hbm2ddl on a &quot;blank&quot; database, and from there
          use change scripts as I evolve the schema. Or if I was testing the
          data access code (maybe using SqlLite) I would want the new database
          created and ALL the tables generated for the test run. But I realize
          there are other ways of working, and so I&apos;m just curious about
          how you do it.
        </wp:comment_content>
        <wp:comment_approved>
          1
        </wp:comment_approved>
      </wp:comment>
      <wp:comment>
        <wp:comment_id>
          671
        </wp:comment_id>
        <wp:comment_author>
          Jason Dentler
        </wp:comment_author>
        <wp:comment_author_url>
          http://nhforge.org/members/Jason-Dentler/default.aspx
        </wp:comment_author_url>
        <wp:comment_author_email/>
        <wp:comment_author_IP/>
        <wp:comment_date_gmt>
          2010-07-18 19:30:32
        </wp:comment_date_gmt>
        <wp:comment_content>
          Hi David. That&apos;s a great question. The answer is simple. The
          uNhAddIns framework already creates the triggers and the CatAudit
          table as auxillary database objects. This is necessary since we may
          want to audit Cats without necessarily doing anything with the audit
          data. We exclude our CatAudit class mapping from schema export because
          we don&apos;t want to export the CatAudit table twice.
        </wp:comment_content>
        <wp:comment_approved>
          1
        </wp:comment_approved>
      </wp:comment>
      <wp:comment>
        <wp:comment_id>
          672
        </wp:comment_id>
        <wp:comment_author>
          David W Martines
        </wp:comment_author>
        <wp:comment_author_url>
          http://blogs.businesssoftwareengineering.com/
        </wp:comment_author_url>
        <wp:comment_author_email/>
        <wp:comment_author_IP/>
        <wp:comment_date_gmt>
          2010-07-18 19:52:30
        </wp:comment_date_gmt>
        <wp:comment_content>
          Ah, I see. I&apos;ll have to look into the uNhAddIns framework. So are
          these actual &quot;database triggers&quot; on the tables or are they
          interceptors attached to the session? I would think that by using
          triggers as database objects it limits the databases you can use (or
          do all db engines offer triggers?), whereas with interceptors you get
          full database portability but without ability to audit changes to data
          from outside the application.
        </wp:comment_content>
        <wp:comment_approved>
          1
        </wp:comment_approved>
      </wp:comment>
      <wp:comment>
        <wp:comment_id>
          673
        </wp:comment_id>
        <wp:comment_author>
          Jason Dentler
        </wp:comment_author>
        <wp:comment_author_url>
          http://nhforge.org/members/Jason-Dentler/default.aspx
        </wp:comment_author_url>
        <wp:comment_author_email/>
        <wp:comment_author_IP/>
        <wp:comment_date_gmt>
          2010-07-18 19:59:28
        </wp:comment_date_gmt>
        <wp:comment_content>
          These are just simple database triggers. At the moment, I&apos;ve
          written &quot;extended dialects&quot; to support triggers in Ms SQL
          Server and SQLite, since that&apos;s what I use. I imagine most
          databases support some type of trigger, though the syntax is different
          for each one. I believe uNhAddIns also has a simple interceptor /
          event listener for auditing purposes. There&apos;s a ton of good stuff
          in there. Go explore! 
        </wp:comment_content>
        <wp:comment_approved>
          1
        </wp:comment_approved>
      </wp:comment>
    </item>
    <item>
      <title>
        NHibernate Bootstrapper: UnitOfWork and SessionPerRequest
      </title>
      <link>
        http://nhibernate.github.io/blogs/nhibernate/archive/2010/07/11/nhibernate-bootstrapper-unitofwork-and-sessionperrequest.html
      </link>
      <dsq:thread_identifier>
        blogs_nhibernate_archive_2010_07_11_nhibernate-bootstrapper-unitofwork-and-sessionperrequest
      </dsq:thread_identifier>
      <wp:post_date_gmt>
        2010-07-11 21:17:00
      </wp:post_date_gmt>
      <wp:comment>
        <wp:comment_id>
          664
        </wp:comment_id>
        <wp:comment_author>
          Bogdan Marian
        </wp:comment_author>
        <wp:comment_author_url>
          http://nhforge.org/members/satrapu/default.aspx
        </wp:comment_author_url>
        <wp:comment_author_email/>
        <wp:comment_author_IP/>
        <wp:comment_date_gmt>
          2010-07-12 06:58:41
        </wp:comment_date_gmt>
        <wp:comment_content>
          Very nice article! I really like having an IHttpModule to encapsulate
          NH session management. I do have a question: why opening a transaction
          and committing it right away ? I would have expected to start the
          transaction when the NH session is called for the first time to
          perform a CRUD operation and continue using that transaction for until
          committing it before the session gets closed...
        </wp:comment_content>
        <wp:comment_approved>
          1
        </wp:comment_approved>
      </wp:comment>
      <wp:comment>
        <wp:comment_id>
          665
        </wp:comment_id>
        <wp:comment_author>
          JorgeVinagre
        </wp:comment_author>
        <wp:comment_author_url>
          http://nhforge.org/members/JorgeVinagre/default.aspx
        </wp:comment_author_url>
        <wp:comment_author_email/>
        <wp:comment_author_IP/>
        <wp:comment_date_gmt>
          2010-07-12 13:30:38
        </wp:comment_date_gmt>
        <wp:comment_content>
          Hi I know that session per request managment is considered a good
          practice. Isn´t that true also that session per business process is
          considered a best practice also?
        </wp:comment_content>
        <wp:comment_approved>
          1
        </wp:comment_approved>
      </wp:comment>
      <wp:comment>
        <wp:comment_id>
          666
        </wp:comment_id>
        <wp:comment_author>
          John Davidson
        </wp:comment_author>
        <wp:comment_author_url>
          http://
        </wp:comment_author_url>
        <wp:comment_author_email/>
        <wp:comment_author_IP/>
        <wp:comment_date_gmt>
          2010-07-12 21:49:13
        </wp:comment_date_gmt>
        <wp:comment_content>
          @Bogdan Marian This is constructed sothat if you do not want to manage
          transactions then NHibernate will function correctly with no
          performance penalties, but if you want to manage your transactions,
          either in your DataLayer or DataServices leyer then you can open a
          single trnasaction, perform a number of persistence operations and
          then commit before closing the session. @JorgeVinagre
          SessionPerRequest is for an ASP.Net application. Each form request
          should be a single business process.
        </wp:comment_content>
        <wp:comment_approved>
          1
        </wp:comment_approved>
      </wp:comment>
      <wp:comment>
        <wp:comment_id>
          667
        </wp:comment_id>
        <wp:comment_author>
          MattO
        </wp:comment_author>
        <wp:comment_author_url>
          http://nhforge.org/members/MattO/default.aspx
        </wp:comment_author_url>
        <wp:comment_author_email/>
        <wp:comment_author_IP/>
        <wp:comment_date_gmt>
          2010-07-16 21:10:59
        </wp:comment_date_gmt>
        <wp:comment_content>
          This seems to be a bit different (implementing in an httpmodule)
          compared to what is described here:
          http://www.codeproject.com/KB/architecture/NHibernateBestPractices.aspx The codesmith templates follow most of what is described in the codeproject article listed above. Which is better? Why choose your way over the way CodeSmith is doing it now by following the &quot;best practices&quot; as detailed in the codeproject article?
        </wp:comment_content>
        <wp:comment_approved>
          1
        </wp:comment_approved>
      </wp:comment>
      <wp:comment>
        <wp:comment_id>
          668
        </wp:comment_id>
        <wp:comment_author>
          John Davidson
        </wp:comment_author>
        <wp:comment_author_url>
          http://
        </wp:comment_author_url>
        <wp:comment_author_email/>
        <wp:comment_author_IP/>
        <wp:comment_date_gmt>
          2010-07-16 21:43:53
        </wp:comment_date_gmt>
        <wp:comment_content>
          @MattO The CodeProject article written by Bill McCafferty was
          published in Mar 2006. It did not take into account the new capability
          introduced with the 1.2 version of the current_session_context_class.
          Not much has been written about this class and almost all of the
          articles that recognized what this class is for, showed
          implementations using Global.asax. What makes this approach better is
          that all reference to NHibernate is removed from the web application -
          this is not fully realized in the demo application, but those
          deficiencies are noted and will be corrected as development of the
          application progresses. If the Codesmith templates are still following
          the practices outlined here then perhaps they are due for some
          updating? I use much of Bill McCafferty&apos;s other ideas, especially
          with regard to Model-View-Presenter and will expand on these in the
          next post.
        </wp:comment_content>
        <wp:comment_approved>
          1
        </wp:comment_approved>
      </wp:comment>
      <wp:comment>
        <wp:comment_id>
          669
        </wp:comment_id>
        <wp:comment_author>
          David W Martines
        </wp:comment_author>
        <wp:comment_author_url>
          http://blogs.businesssoftwareengineering.com
        </wp:comment_author_url>
        <wp:comment_author_email/>
        <wp:comment_author_IP/>
        <wp:comment_date_gmt>
          2010-07-18 18:32:26
        </wp:comment_date_gmt>
        <wp:comment_content>
          I&apos;d like to add my current UnitOfWork implementation to the list
          of options. I find that it is simple and effective and can be used per
          web request or per business transaction, whichever you prefer. I
          invite you to take a look and comment or point out any flaws.
          http://blogs.businesssoftwareengineering.com/?p=105
        </wp:comment_content>
        <wp:comment_approved>
          1
        </wp:comment_approved>
      </wp:comment>
      <wp:comment>
        <wp:comment_id>
          674
        </wp:comment_id>
        <wp:comment_author>
          John Davidson
        </wp:comment_author>
        <wp:comment_author_url>
          http://nhforge.org/members/jwdavidson/default.aspx
        </wp:comment_author_url>
        <wp:comment_author_email/>
        <wp:comment_author_IP/>
        <wp:comment_date_gmt>
          2010-07-19 00:30:29
        </wp:comment_date_gmt>
        <wp:comment_content>
          See the nhusers maillist thread at
          http://groups.google.com/group/nhusers/msg/48e414f480a24950. The point
          of the blog is that a UnitOfWork is no longer required. Everything
          that your UnitOfWork does is already in ISession. The requirement for
          a separate UnitOfWork became deprecated with the release of NHibernate
          1.2, but old habits die hard. Rather than repeating the transaction
          management function of the ISession object in your UnitOfWork, you
          could spend time on transaction management in the Repository/DAO
          layer. If you need a UnitOfWork so that your IoC container will work
          correctly, then you probably need a different container or a better
          implementation of how you use the container.
        </wp:comment_content>
        <wp:comment_approved>
          1
        </wp:comment_approved>
      </wp:comment>
      <wp:comment>
        <wp:comment_id>
          675
        </wp:comment_id>
        <wp:comment_author>
          MattO
        </wp:comment_author>
        <wp:comment_author_url>
          http://nhforge.org/members/MattO/default.aspx
        </wp:comment_author_url>
        <wp:comment_author_email/>
        <wp:comment_author_IP/>
        <wp:comment_date_gmt>
          2010-07-22 21:13:54
        </wp:comment_date_gmt>
        <wp:comment_content>
          I&apos;m struggling with the general stateless nature of ASP .NET and
          how to work with nHibernate and it seems to still be present after
          reading this article. My issue is the following: Say I retrieve data
          from the database and display it on the web form using ASP .NET. A
          user then edits some data on the webform and hits the SAVE button. It
          does a post back. At this point I need to save the data to the
          database, my session has already disappeared as it only lived through
          the single request. And this article states we should use
          SessionPerRequest. But how can you do this if you want to do the
          following things: Only commit the changes if someone hasn&apos;t
          already changed the data. For instance, say I retrieve the data, and
          left it open in my web browser for a minute and then hit the save
          button, but during that time 3 other people already modified that
          record in some way. I need to be able to ensure that I don&apos;t
          overwrite their changes. How do you handle this? How can I have
          nHibernate know that the timestamp on this data has changed and
          therefore to tell the user to reload the page and try edit the data
          again?
        </wp:comment_content>
        <wp:comment_approved>
          1
        </wp:comment_approved>
      </wp:comment>
      <wp:comment>
        <wp:comment_id>
          676
        </wp:comment_id>
        <wp:comment_author>
          John Davidson
        </wp:comment_author>
        <wp:comment_author_url>
          http://
        </wp:comment_author_url>
        <wp:comment_author_email/>
        <wp:comment_author_IP/>
        <wp:comment_date_gmt>
          2010-07-22 22:22:28
        </wp:comment_date_gmt>
        <wp:comment_content>
          @MattO You are right that your difficulty understanding is an ASP.Net
          issue rather than an NHibernate issue, as the problem you describe
          exists in any web application where concurrency and volatility of a
          single instance is high. In this case NHibernate facilitates a
          solution. See
          http://nhforge.org/doc/nh/en/index.html#mapping-declaration-timestamp.
          Perhaps you are forgetting that NHibernate closes the session when the
          web page is displayed. So even if you keep the page open if you want
          to use the entity that was displayed on that page you must reload it
          into the session by reading it again from the database, hence the
          discussion about DTO in the post above. Then when it is loaded you can
          compare the current timestamp with the timestamp retrieved from the
          web page and then act according to your business rules. In this case
          advise the user that the data had changed by another user and then
          display it on the page again for edit, with the new timestamp. Hope
          this helps
        </wp:comment_content>
        <wp:comment_approved>
          1
        </wp:comment_approved>
      </wp:comment>
      <wp:comment>
        <wp:comment_id>
          677
        </wp:comment_id>
        <wp:comment_author>
          MattO
        </wp:comment_author>
        <wp:comment_author_url>
          http://nhforge.org/members/MattO/default.aspx
        </wp:comment_author_url>
        <wp:comment_author_email/>
        <wp:comment_author_IP/>
        <wp:comment_date_gmt>
          2010-07-22 23:41:00
        </wp:comment_date_gmt>
        <wp:comment_content>
          Thanks John for all the replys! A few (hopefully last) questions: 1.
          Have you found that instantiating a nHibernate session so many more
          times in a stateless application (because you constantly have to
          refresh the data from the database on each postback) causes
          performance issues? 2. Also even if I have to refresh the data from
          the database, which I&apos;m perfectly fine with. How can I have
          nHibernate automatically know the timestamps are different and have it
          throw the concurrency violation? The reason why I ask is that compare
          timestamp columns as byte arrays is a bit cumbersome. 3. In relation
          to #2, if I wasn&apos;t using a timestamp column because i&apos;m
          dealing with a table that doesn&apos;t have it and there is no other
          way to check for uniqueness other then checking for differences in
          EVERY column of say a 50 column table, are my only options is to go
          through all 50 column propertys we just reloaded from the database on
          postback to determine if there is a concurrency violation or is there
          some way in which nHibernate can facilitate this rather then writing a
          very lengthy IF statement for every property in the table?
        </wp:comment_content>
        <wp:comment_approved>
          1
        </wp:comment_approved>
      </wp:comment>
      <wp:comment>
        <wp:comment_id>
          678
        </wp:comment_id>
        <wp:comment_author>
          John Davidson
        </wp:comment_author>
        <wp:comment_author_url>
          http://
        </wp:comment_author_url>
        <wp:comment_author_email/>
        <wp:comment_author_IP/>
        <wp:comment_date_gmt>
          2010-07-23 00:23:23
        </wp:comment_date_gmt>
        <wp:comment_content>
          @MattO I find that using NHibernate for an ASP.Net application
          improves performance because it reduces the object-relation impedance
          mismatch. There is no additional performance hit over a system not
          using NHibernate as it must make the same number of data connections
          in order to maintain data consistency. NHibernate formalizes the
          necessary steps. In order to effectively compare values of objects, or
          even complex strings, you should use Object.GetHashCode. See
          http://msdn.microsoft.com/en-us/library/system.object.gethashcode.aspx, which allows comparisons without going property by property. Note that if you do not use a version property or timestamp you cannot determine which difference is the one you want to store unless you also store the original object. You would need the original object, the object edited on the web page and the object newly obtained from the database. It is far simpler to modify your database. Even with a legacy system it should be possible to add a version or timestamp field. NHibernate will not do the detection automatically unless you are using pessimistic locking, which I would not recommend in an ASP.Net application.
        </wp:comment_content>
        <wp:comment_approved>
          1
        </wp:comment_approved>
      </wp:comment>
      <wp:comment>
        <wp:comment_id>
          704
        </wp:comment_id>
        <wp:comment_author>
          Raoul Buzziol
        </wp:comment_author>
        <wp:comment_author_url>
          http://nhforge.org/members/raoulus/default.aspx
        </wp:comment_author_url>
        <wp:comment_author_email/>
        <wp:comment_author_IP/>
        <wp:comment_date_gmt>
          2010-08-11 08:54:48
        </wp:comment_date_gmt>
        <wp:comment_content>
          Thank you for the nice article. @JohnDavidson Just a consideration
          about your style of transaction management. We found that avoiding
          transaction management in Daos and using a separated session (and
          transaction) manager resulted in less code and less duplication. The
          approach is inpired by
          http://www.codeproject.com/KB/architecture/NHibernateBestPractices.aspx and http://community.jboss.org/wiki/sessionsandtransactions . What kind of benefits do you have with your style? @MattO We don&apos;t hit the db on every page relaod using the model manager by Spring.Net. See http://www.springframework.net/doc-latest/reference/html/web.html#web-databinding Instead of a timestamp you can use the version http://nhforge.org/doc/nh/en/index.html#mapping-declaration-version element. But the versioning handles conflict for rows not columns and that&apos;s correct. If a column changes in a DDD oriented approach the state of your model has changed you must revalidate it, involving probably other properties too. Conflict resolution can be complex and how do you handle it depens on the functional/non-functional requirements. You can find some ideas here http://nhforge.org/doc/nh/en/index.html#transactions-optimistic . 
        </wp:comment_content>
        <wp:comment_approved>
          1
        </wp:comment_approved>
      </wp:comment>
      <wp:comment>
        <wp:comment_id>
          705
        </wp:comment_id>
        <wp:comment_author>
          John Davidson
        </wp:comment_author>
        <wp:comment_author_url>
          http://
        </wp:comment_author_url>
        <wp:comment_author_email/>
        <wp:comment_author_IP/>
        <wp:comment_date_gmt>
          2010-08-11 12:18:39
        </wp:comment_date_gmt>
        <wp:comment_content>
          @Raoul You are missing the point I am trying to make. NHibernate
          includes an already built session and transaction manager, and it does
          not need to be abstracted or extended. It just works - and it requires
          _no_ additional code.
        </wp:comment_content>
        <wp:comment_approved>
          1
        </wp:comment_approved>
      </wp:comment>
      <wp:comment>
        <wp:comment_id>
          706
        </wp:comment_id>
        <wp:comment_author>
          Raoul Buzziol
        </wp:comment_author>
        <wp:comment_author_url>
          http://nhforge.org/members/raoulus/default.aspx
        </wp:comment_author_url>
        <wp:comment_author_email/>
        <wp:comment_author_IP/>
        <wp:comment_date_gmt>
          2010-08-11 12:42:12
        </wp:comment_date_gmt>
        <wp:comment_content>
          You are right: it requires no additional code. But you are handling
          transaction aspects inside _your_ dao with lines like: if
          (!m_Session.Transaction.IsActive) using (var tx =
          m_Session.BeginTransaction()) tx.Commit(); witch we only do outside,
          simplifying our dao. Our daos know nothing about transactions. And
          duplication like: m_Session.SaveOrUpdate(entity); would be no more
          necessary. It&apos;s not wrong, just different. I was asking myself
          when your style would pay off over my style.
        </wp:comment_content>
        <wp:comment_approved>
          1
        </wp:comment_approved>
      </wp:comment>
      <wp:comment>
        <wp:comment_id>
          708
        </wp:comment_id>
        <wp:comment_author>
          Eric
        </wp:comment_author>
        <wp:comment_author_url>
          http://
        </wp:comment_author_url>
        <wp:comment_author_email/>
        <wp:comment_author_IP/>
        <wp:comment_date_gmt>
          2010-08-19 17:02:45
        </wp:comment_date_gmt>
        <wp:comment_content>
          I was wondering if you can offer any insight into how this would need
          to change for multiple DB support (one app, multiple dbs on different
          servers). I was reading Bill McCafferty&apos;s article on Codeproject
          (http://www.codeproject.com/KB/aspnet/NHibernateMultipleDBs.aspx), but
          that&apos;s 1.2 and I&apos;m not quite sure how to merge your solution
          and his into a best-of-both result. Further, I&apos;m not sure if
          NH2.0 adds anything significant to help with multiple DB access. Any
          and all help is appreciated. 
        </wp:comment_content>
        <wp:comment_approved>
          1
        </wp:comment_approved>
      </wp:comment>
      <wp:comment>
        <wp:comment_id>
          710
        </wp:comment_id>
        <wp:comment_author>
          John Davidson
        </wp:comment_author>
        <wp:comment_author_url>
          http://nhforge.org/members/jwdavidson/default.aspx
        </wp:comment_author_url>
        <wp:comment_author_email/>
        <wp:comment_author_IP/>
        <wp:comment_date_gmt>
          2010-08-19 21:24:27
        </wp:comment_date_gmt>
        <wp:comment_content>
          @Eric A better implementation for multiple databases is to use the
          ISessionFacory as it was designed to be used. Rather than the article
          you reference see instead
          http://fabiomaulo.blogspot.com/2009/09/configure-sessionfactory-providers.html The sample that I have would need to be extended for each session factory instantiated. However, I would be wary about creating an architecture using a web implementation for multiple databases, especially if this is your first NHibernate project.
        </wp:comment_content>
        <wp:comment_approved>
          1
        </wp:comment_approved>
      </wp:comment>
      <wp:comment>
        <wp:comment_id>
          712
        </wp:comment_id>
        <wp:comment_author>
          OS538DAV
        </wp:comment_author>
        <wp:comment_author_url>
          http://nhforge.org/members/OS538DAV/default.aspx
        </wp:comment_author_url>
        <wp:comment_author_email/>
        <wp:comment_author_IP/>
        <wp:comment_date_gmt>
          2010-09-14 14:05:52
        </wp:comment_date_gmt>
        <wp:comment_content>
          Download doesn&apos;t work at https://public.me.com/jw_davidson David
        </wp:comment_content>
        <wp:comment_approved>
          1
        </wp:comment_approved>
      </wp:comment>
    </item>
    <item>
      <title>
        Strongly typed convention based mappings using Linq to Xsd - Part 1
      </title>
      <link>
        http://nhibernate.github.io/blogs/nhibernate/archive/2010/07/28/strongly-typed-convention-based-mappings-using-linq-to-xsd-part-1.html
      </link>
      <dsq:thread_identifier>
        blogs_nhibernate_archive_2010_07_28_strongly-typed-convention-based-mappings-using-linq-to-xsd-part-1
      </dsq:thread_identifier>
      <wp:post_date_gmt>
        2010-07-28 16:11:00
      </wp:post_date_gmt>
    </item>
    <item>
      <title>
        Hibernate Query Language in Visual Studio
      </title>
      <link>
        http://nhibernate.github.io/blogs/nhibernate/archive/2010/07/28/hibernate-query-language-in-visual-studio.html
      </link>
      <dsq:thread_identifier>
        blogs_nhibernate_archive_2010_07_28_hibernate-query-language-in-visual-studio
      </dsq:thread_identifier>
      <wp:post_date_gmt>
        2010-07-28 21:57:00
      </wp:post_date_gmt>
      <wp:comment>
        <wp:comment_id>
          681
        </wp:comment_id>
        <wp:comment_author>
          felicepollano
        </wp:comment_author>
        <wp:comment_author_url>
          http://nhforge.org/members/felicepollano/default.aspx
        </wp:comment_author_url>
        <wp:comment_author_email/>
        <wp:comment_author_IP/>
        <wp:comment_date_gmt>
          2010-07-29 07:17:22
        </wp:comment_date_gmt>
        <wp:comment_content>
          Nice Job! And eventually the rigth direction to follow with NH
          tooling. I tryed to use it on 2010 Express but it seems not to be
          deployed for this VS sku. Is it possible to have for express too ? 
        </wp:comment_content>
        <wp:comment_approved>
          1
        </wp:comment_approved>
      </wp:comment>
      <wp:comment>
        <wp:comment_id>
          682
        </wp:comment_id>
        <wp:comment_author>
          Jose Romaniello
        </wp:comment_author>
        <wp:comment_author_url>
          http://nhforge.org/members/jfromainello/default.aspx
        </wp:comment_author_url>
        <wp:comment_author_email/>
        <wp:comment_author_IP/>
        <wp:comment_date_gmt>
          2010-07-29 11:56:56
        </wp:comment_date_gmt>
        <wp:comment_content>
          Thank you Felice! About Express version; I talk with some folks
          yesterday and even if this were technically possible it is illegal.
          Nobody can&apos;t write extensions for the express version :(
        </wp:comment_content>
        <wp:comment_approved>
          1
        </wp:comment_approved>
      </wp:comment>
      <wp:comment>
        <wp:comment_id>
          683
        </wp:comment_id>
        <wp:comment_author>
          felicepollano
        </wp:comment_author>
        <wp:comment_author_url>
          http://nhforge.org/members/felicepollano/default.aspx
        </wp:comment_author_url>
        <wp:comment_author_email/>
        <wp:comment_author_IP/>
        <wp:comment_date_gmt>
          2010-07-29 19:48:52
        </wp:comment_date_gmt>
        <wp:comment_content>
          Uhmmm This is a pit, and is a pit in general since your addin is open
          source even the not &quot;Big VS&quot; licensee should be able to use
          it, but ok, this is not a technical discussion. I had a look at your
          code, I really need to learn a lot on VS extensibility before produce
          something interesting. But feel free to grab the intellisense part
          from NHWorkbench, I will help you as far as I can.
        </wp:comment_content>
        <wp:comment_approved>
          1
        </wp:comment_approved>
      </wp:comment>
      <wp:comment>
        <wp:comment_id>
          701
        </wp:comment_id>
        <wp:comment_author>
          Stefan Steinegger
        </wp:comment_author>
        <wp:comment_author_url>
          http://nhforge.org/members/ssteinegger/default.aspx
        </wp:comment_author_url>
        <wp:comment_author_email/>
        <wp:comment_author_IP/>
        <wp:comment_date_gmt>
          2010-08-02 09:27:54
        </wp:comment_date_gmt>
        <wp:comment_content>
          That&apos;s really cool. I missed something like this.
        </wp:comment_content>
        <wp:comment_approved>
          1
        </wp:comment_approved>
      </wp:comment>
    </item>
    <item>
      <title>
        Strongly typed convention based mappings using Linq to Xsd - Part 2
      </title>
      <link>
        http://nhibernate.github.io/blogs/nhibernate/archive/2010/07/30/strongly-typed-convention-based-mappings-using-linq-to-xsd-part-2.html
      </link>
      <dsq:thread_identifier>
        blogs_nhibernate_archive_2010_07_30_strongly-typed-convention-based-mappings-using-linq-to-xsd-part-2
      </dsq:thread_identifier>
      <wp:post_date_gmt>
        2010-07-30 14:08:00
      </wp:post_date_gmt>
    </item>
    <item>
      <title>
        HqlAddin vers. 1.0.0.45 - Alpha 2
      </title>
      <link>
        http://nhibernate.github.io/blogs/nhibernate/archive/2010/08/19/hqladdin-vers-1-0-0-45-alpha-2.html
      </link>
      <dsq:thread_identifier>
        blogs_nhibernate_archive_2010_08_19_hqladdin-vers-1-0-0-45-alpha-2
      </dsq:thread_identifier>
      <wp:post_date_gmt>
        2010-08-20 00:41:00
      </wp:post_date_gmt>
    </item>
    <item>
      <title>
        HqlAddin on Hbms!
      </title>
      <link>
        http://nhibernate.github.io/blogs/nhibernate/archive/2010/09/27/hqladdin-on-hbms.html
      </link>
      <dsq:thread_identifier>
        blogs_nhibernate_archive_2010_09_27_hqladdin-on-hbms
      </dsq:thread_identifier>
      <wp:post_date_gmt>
        2010-09-28 02:37:00
      </wp:post_date_gmt>
    </item>
    <item>
      <title>
        NHibernate 3.0 Cookbook
      </title>
      <link>
        http://nhibernate.github.io/blogs/nhibernate/archive/2010/10/05/nhibernate-3-0-cookbook.html
      </link>
      <dsq:thread_identifier>
        blogs_nhibernate_archive_2010_10_05_nhibernate-3-0-cookbook
      </dsq:thread_identifier>
      <wp:post_date_gmt>
        2010-10-05 16:28:00
      </wp:post_date_gmt>
      <wp:comment>
        <wp:comment_id>
          723
        </wp:comment_id>
        <wp:comment_author>
          Malediction
        </wp:comment_author>
        <wp:comment_author_url>
          http://
        </wp:comment_author_url>
        <wp:comment_author_email/>
        <wp:comment_author_IP/>
        <wp:comment_date_gmt>
          2010-10-15 10:44:19
        </wp:comment_date_gmt>
        <wp:comment_content>
          Just received this book in the post from Packtpub, I can recommend it
          as a solid read for anyone that wants to sharpen their nhibernate
          skills. :)
        </wp:comment_content>
        <wp:comment_approved>
          1
        </wp:comment_approved>
      </wp:comment>
      <wp:comment>
        <wp:comment_id>
          730
        </wp:comment_id>
        <wp:comment_author>
          Tal Shterzer
        </wp:comment_author>
        <wp:comment_author_url>
          http://nhforge.org/members/Tal.Shterzer/default.aspx
        </wp:comment_author_url>
        <wp:comment_author_email/>
        <wp:comment_author_IP/>
        <wp:comment_date_gmt>
          2010-11-10 12:48:29
        </wp:comment_date_gmt>
        <wp:comment_content>
          Bought the eBook and I can tell that it&apos;s an excellent read for
          both beginners and advanced users of NHibernate
        </wp:comment_content>
        <wp:comment_approved>
          1
        </wp:comment_approved>
      </wp:comment>
      <wp:comment>
        <wp:comment_id>
          753
        </wp:comment_id>
        <wp:comment_author>
          green smoke
        </wp:comment_author>
        <wp:comment_author_url>
          http://smokelesscigreviews.com/green-smoke-review
        </wp:comment_author_url>
        <wp:comment_author_email/>
        <wp:comment_author_IP/>
        <wp:comment_date_gmt>
          2010-12-23 02:10:44
        </wp:comment_date_gmt>
        <wp:comment_content>
          it helps me a lot, especially for me as a beginner for cooking.thnks
          for sharing.
        </wp:comment_content>
        <wp:comment_approved>
          1
        </wp:comment_approved>
      </wp:comment>
      <wp:comment>
        <wp:comment_id>
          996
        </wp:comment_id>
        <wp:comment_author>
          West Valley Detention Center
        </wp:comment_author>
        <wp:comment_author_url>
          http://www.westvalleydetentioncenterbail.com
        </wp:comment_author_url>
        <wp:comment_author_email/>
        <wp:comment_author_IP/>
        <wp:comment_date_gmt>
          2011-10-27 21:08:54
        </wp:comment_date_gmt>
        <wp:comment_content>
          NHibernate is a nice competitor to Entity Framework. It&apos;s not as
          obvious why an ORM is useful to many .NET guys, but it sure saves a
          ton of time.
        </wp:comment_content>
        <wp:comment_approved>
          1
        </wp:comment_approved>
      </wp:comment>
    </item>
    <item>
      <title>
        Delphi Conference - Brazil (Introducing NH to Delphi world)
      </title>
      <link>
        http://nhibernate.github.io/blogs/nhibernate/archive/2010/10/07/delphi-conference-brazil-introducing-nh-to-delphi-world.html
      </link>
      <dsq:thread_identifier>
        blogs_nhibernate_archive_2010_10_07_delphi-conference-brazil-introducing-nh-to-delphi-world
      </dsq:thread_identifier>
      <wp:post_date_gmt>
        2010-10-07 17:33:00
      </wp:post_date_gmt>
    </item>
    <item>
      <title>
        Simple CQRS + NHibernate event store
      </title>
      <link>
        http://nhibernate.github.io/blogs/nhibernate/archive/2010/10/10/simple-cqrs-nhibernate-event-store.html
      </link>
      <dsq:thread_identifier>
        blogs_nhibernate_archive_2010_10_10_simple-cqrs-nhibernate-event-store
      </dsq:thread_identifier>
      <wp:post_date_gmt>
        2010-10-10 22:10:00
      </wp:post_date_gmt>
    </item>
    <item>
      <title>
        NHibernate Code Base Analysis
      </title>
      <link>
        http://nhibernate.github.io/blogs/nhibernate/archive/2010/11/26/nhibernate-code-base-analysis.html
      </link>
      <dsq:thread_identifier>
        blogs_nhibernate_archive_2010_11_26_nhibernate-code-base-analysis
      </dsq:thread_identifier>
      <wp:post_date_gmt>
        2010-11-26 13:40:00
      </wp:post_date_gmt>
      <wp:comment>
        <wp:comment_id>
          747
        </wp:comment_id>
        <wp:comment_author>
          almaz
        </wp:comment_author>
        <wp:comment_author_url>
          http://nhforge.org/members/almaz/default.aspx
        </wp:comment_author_url>
        <wp:comment_author_email/>
        <wp:comment_author_IP/>
        <wp:comment_date_gmt>
          2010-12-13 12:10:58
        </wp:comment_date_gmt>
        <wp:comment_content>
          &gt;&gt;The essential point is that assemblies are physical artifacts
          while components are logical artifacts I still treat projects (and
          assemblies produced from them) as logical artifacts. What makes them
          physical artifacts is &quot;ilmerge&quot; that combines several
          logical components (dlls) into physical deployable unit.
        </wp:comment_content>
        <wp:comment_approved>
          1
        </wp:comment_approved>
      </wp:comment>
      <wp:comment>
        <wp:comment_id>
          751
        </wp:comment_id>
        <wp:comment_author>
          Patrick Smacchia
        </wp:comment_author>
        <wp:comment_author_url>
          http://nhforge.org/members/Patrick-Smacchia/default.aspx
        </wp:comment_author_url>
        <wp:comment_author_email/>
        <wp:comment_author_IP/>
        <wp:comment_date_gmt>
          2010-12-20 17:30:10
        </wp:comment_date_gmt>
        <wp:comment_content>
          Sergei, what about high compilation durations and VS slow down due to
          numerous projects? VS can compile the NH project in 5 seconds on my
          machine. If NH was made of, say, 20 .csproj, this would take likely
          more than 30s to Rebuild a few touched projects. Hopefully you have
          the skill to master what you are doing. But in real-world corp,
          I&apos;ve seen literally dozens of projects rooted in hundreds of
          assemblies. These guys have compilation times measured in mintes
          instead of seconds. The productivity of developers is significantly
          affected by this fact. 
        </wp:comment_content>
        <wp:comment_approved>
          1
        </wp:comment_approved>
      </wp:comment>
    </item>
    <item>
      <title>
        NHibernate 3.0 released
      </title>
      <link>
        http://nhibernate.github.io/blogs/nhibernate/archive/2010/12/05/nhibernate-3-0-released.html
      </link>
      <dsq:thread_identifier>
        blogs_nhibernate_archive_2010_12_05_nhibernate-3-0-released
      </dsq:thread_identifier>
      <wp:post_date_gmt>
        2010-12-05 13:51:00
      </wp:post_date_gmt>
      <wp:comment>
        <wp:comment_id>
          742
        </wp:comment_id>
        <wp:comment_author>
          CuriousCoder
        </wp:comment_author>
        <wp:comment_author_url>
          http://nhforge.org/members/CuriousCoder/default.aspx
        </wp:comment_author_url>
        <wp:comment_author_email/>
        <wp:comment_author_IP/>
        <wp:comment_date_gmt>
          2010-12-07 10:08:41
        </wp:comment_date_gmt>
        <wp:comment_content>
          Seriously, well done everyone, this project is so important to our
          company - and so many others like us. I&apos;ve already purchase the
          NH 3.0 cookbook and its a fantastic resource, definitely worth picking
          up to support the NH team and development! Great job!
        </wp:comment_content>
        <wp:comment_approved>
          1
        </wp:comment_approved>
      </wp:comment>
      <wp:comment>
        <wp:comment_id>
          744
        </wp:comment_id>
        <wp:comment_author>
          sashas
        </wp:comment_author>
        <wp:comment_author_url>
          http://nhforge.org/members/sashas/default.aspx
        </wp:comment_author_url>
        <wp:comment_author_email/>
        <wp:comment_author_IP/>
        <wp:comment_date_gmt>
          2010-12-07 19:47:04
        </wp:comment_date_gmt>
        <wp:comment_content>
          Awesome. I&apos;m especially excited about the improved UTC handling
          (http://216.121.112.228/browse/NH-1135)!
        </wp:comment_content>
        <wp:comment_approved>
          1
        </wp:comment_approved>
      </wp:comment>
      <wp:comment>
        <wp:comment_id>
          745
        </wp:comment_id>
        <wp:comment_author>
          amachado
        </wp:comment_author>
        <wp:comment_author_url>
          http://
        </wp:comment_author_url>
        <wp:comment_author_email/>
        <wp:comment_author_IP/>
        <wp:comment_date_gmt>
          2010-12-08 13:18:35
        </wp:comment_date_gmt>
        <wp:comment_content>
          Cool. Can you guys publish updated NuGet packages for this release?
        </wp:comment_content>
        <wp:comment_approved>
          1
        </wp:comment_approved>
      </wp:comment>
      <wp:comment>
        <wp:comment_id>
          748
        </wp:comment_id>
        <wp:comment_author>
          sashas
        </wp:comment_author>
        <wp:comment_author_url>
          http://nhforge.org/members/sashas/default.aspx
        </wp:comment_author_url>
        <wp:comment_author_email/>
        <wp:comment_author_IP/>
        <wp:comment_date_gmt>
          2010-12-13 18:34:46
        </wp:comment_date_gmt>
        <wp:comment_content>
          Great job! Have there been any changes to allow adding &apos;with
          nolock hints&apos; to queries? I can&apos;t wait to start using this
          new build at work but the nolocks are group policy...&apos; 
        </wp:comment_content>
        <wp:comment_approved>
          1
        </wp:comment_approved>
      </wp:comment>
      <wp:comment>
        <wp:comment_id>
          759
        </wp:comment_id>
        <wp:comment_author>
          Namer
        </wp:comment_author>
        <wp:comment_author_url>
          http://nhforge.org/members/namer315/default.aspx
        </wp:comment_author_url>
        <wp:comment_author_email/>
        <wp:comment_author_IP/>
        <wp:comment_date_gmt>
          2011-01-08 08:46:05
        </wp:comment_date_gmt>
        <wp:comment_content>
          that is very Goooooood News I was waiting new version one year thank
          you for every one worked in this project 
        </wp:comment_content>
        <wp:comment_approved>
          1
        </wp:comment_approved>
      </wp:comment>
    </item>
    <item>
      <title>
        NHibernate Bootstrapper: Unit Tests and Project References
      </title>
      <link>
        http://nhibernate.github.io/blogs/nhibernate/archive/2010/12/05/nhibernate-bootstrapper-unit-tests-and-project-references.html
      </link>
      <dsq:thread_identifier>
        blogs_nhibernate_archive_2010_12_05_nhibernate-bootstrapper-unit-tests-and-project-references
      </dsq:thread_identifier>
      <wp:post_date_gmt>
        2010-12-05 15:59:00
      </wp:post_date_gmt>
      <wp:comment>
        <wp:comment_id>
          790
        </wp:comment_id>
        <wp:comment_author>
          nanhibernate
        </wp:comment_author>
        <wp:comment_author_url>
          http://nhforge.org/members/nanhibernate/default.aspx
        </wp:comment_author_url>
        <wp:comment_author_email/>
        <wp:comment_author_IP/>
        <wp:comment_date_gmt>
          2011-02-09 21:26:14
        </wp:comment_date_gmt>
        <wp:comment_content>
          Great work!!!
        </wp:comment_content>
        <wp:comment_approved>
          1
        </wp:comment_approved>
      </wp:comment>
    </item>
    <item>
      <title>
        Using convention to resolve sequence names
      </title>
      <link>
        http://nhibernate.github.io/blogs/nhibernate/archive/2010/12/13/using-convention-to-resolve-sequence-names.html
      </link>
      <dsq:thread_identifier>
        blogs_nhibernate_archive_2010_12_13_using-convention-to-resolve-sequence-names
      </dsq:thread_identifier>
      <wp:post_date_gmt>
        2010-12-14 00:03:00
      </wp:post_date_gmt>
    </item>
    <item>
      <title>
        Many-to-many relationships with properties
      </title>
      <link>
        http://nhibernate.github.io/blogs/nhibernate/archive/2010/12/26/many-to-many-relationships-with-properties.html
      </link>
      <dsq:thread_identifier>
        blogs_nhibernate_archive_2010_12_26_many-to-many-relationships-with-properties
      </dsq:thread_identifier>
      <wp:post_date_gmt>
        2010-12-26 11:52:00
      </wp:post_date_gmt>
    </item>
    <item>
      <title>
        Composite with only a Many-To-One = Bad Idea
      </title>
      <link>
        http://nhibernate.github.io/blogs/nhibernate/archive/2011/01/08/composite-with-only-a-many-to-one-bad-idea.html
      </link>
      <dsq:thread_identifier>
        blogs_nhibernate_archive_2011_01_08_composite-with-only-a-many-to-one-bad-idea
      </dsq:thread_identifier>
      <wp:post_date_gmt>
        2011-01-08 11:54:35
      </wp:post_date_gmt>
      <wp:comment>
        <wp:comment_id>
          761
        </wp:comment_id>
        <wp:comment_author>
          Lee
        </wp:comment_author>
        <wp:comment_author_url>
          http://
        </wp:comment_author_url>
        <wp:comment_author_email/>
        <wp:comment_author_IP/>
        <wp:comment_date_gmt>
          2011-01-12 09:54:51
        </wp:comment_date_gmt>
        <wp:comment_content>
          The trouble i have is that if i add a property on the User class to
          get the Details then lazy loading doesn&apos;t work. If i specific it
          is constrained then lazy loading works fine but when i insert a user
          it throws back an exception.
        </wp:comment_content>
        <wp:comment_approved>
          1
        </wp:comment_approved>
      </wp:comment>
    </item>
    <item>
      <title>
        Loquacious Configuration in NHibernate 3
      </title>
      <link>
        http://nhibernate.github.io/blogs/nhibernate/archive/2011/01/21/loquacious-configuration-in-nhibernate-3.html
      </link>
      <dsq:thread_identifier>
        blogs_nhibernate_archive_2011_01_21_loquacious-configuration-in-nhibernate-3
      </dsq:thread_identifier>
      <wp:post_date_gmt>
        2011-01-21 21:54:07
      </wp:post_date_gmt>
    </item>
    <item>
      <title>
        Date/Time Support in NHibernate
      </title>
      <link>
        http://nhibernate.github.io/blogs/nhibernate/archive/2011/01/26/date-time-support-in-nhibernate.html
      </link>
      <dsq:thread_identifier>
        blogs_nhibernate_archive_2011_01_26_date-time-support-in-nhibernate
      </dsq:thread_identifier>
      <wp:post_date_gmt>
        2011-01-26 16:00:00
      </wp:post_date_gmt>
      <wp:comment>
        <wp:comment_id>
          786
        </wp:comment_id>
        <wp:comment_author>
          suresh.rajamani
        </wp:comment_author>
        <wp:comment_author_url>
          http://nhforge.org/members/suresh.rajamani/default.aspx
        </wp:comment_author_url>
        <wp:comment_author_email/>
        <wp:comment_author_IP/>
        <wp:comment_date_gmt>
          2011-02-07 13:12:58
        </wp:comment_date_gmt>
        <wp:comment_content>
          How to Map Oracle Date with dotnet nullable System.DateTime
        </wp:comment_content>
        <wp:comment_approved>
          1
        </wp:comment_approved>
      </wp:comment>
    </item>
    <item>
      <title>
        How to use 0 instead of null for foreign keys
      </title>
      <link>
        http://nhibernate.github.io/blogs/nhibernate/archive/2011/01/28/how-to-use-0-instead-of-null-for-foreign-keys.html
      </link>
      <dsq:thread_identifier>
        blogs_nhibernate_archive_2011_01_28_how-to-use-0-instead-of-null-for-foreign-keys
      </dsq:thread_identifier>
      <wp:post_date_gmt>
        2011-01-28 12:46:00
      </wp:post_date_gmt>
      <wp:comment>
        <wp:comment_id>
          774
        </wp:comment_id>
        <wp:comment_author>
          Fabio Maulo
        </wp:comment_author>
        <wp:comment_author_url>
          http://nhforge.org/members/fabiomaulo/default.aspx
        </wp:comment_author_url>
        <wp:comment_author_email/>
        <wp:comment_author_IP/>
        <wp:comment_date_gmt>
          2011-01-28 13:39:42
        </wp:comment_date_gmt>
        <wp:comment_content>
          You don&apos;t need to create the drop script. Using
          foreign-key=&quot;none&quot; is enough. ;)
        </wp:comment_content>
        <wp:comment_approved>
          1
        </wp:comment_approved>
      </wp:comment>
      <wp:comment>
        <wp:comment_id>
          776
        </wp:comment_id>
        <wp:comment_author>
          Jose Romaniello
        </wp:comment_author>
        <wp:comment_author_url>
          http://nhforge.org/members/jfromainello/default.aspx
        </wp:comment_author_url>
        <wp:comment_author_email/>
        <wp:comment_author_IP/>
        <wp:comment_date_gmt>
          2011-01-31 19:43:41
        </wp:comment_date_gmt>
        <wp:comment_content>
          @fabio @apweb2010 i just updated the post. Thanks for the tip.
        </wp:comment_content>
        <wp:comment_approved>
          1
        </wp:comment_approved>
      </wp:comment>
      <wp:comment>
        <wp:comment_id>
          824
        </wp:comment_id>
        <wp:comment_author>
          MBDTeam
        </wp:comment_author>
        <wp:comment_author_url>
          http://nhforge.org/members/MBDTeam/default.aspx
        </wp:comment_author_url>
        <wp:comment_author_email/>
        <wp:comment_author_IP/>
        <wp:comment_date_gmt>
          2011-03-16 11:50:36
        </wp:comment_date_gmt>
        <wp:comment_content>
          @Jose Thanks for charing this! I tried your solution with NH 3.1 GA.
          But I have a little problem. Reading Entities from the DB works as
          aspected. A entity with parentid=0 returns as nothing. But if I save
          an entity with parent=nothing I get an ADO exception claiming insert
          of null in parentid is not allowed. I tracked it down to
          AbstractSaveEventListener.cs -&gt; PerformSaveOrReplicate. In line
          &apos;object[] values = persister.GetPropertyValuesToInsert(entity,
          GetMergeMap(anything), source);&apos; the property parent is set to a
          dummy Object with id 0. This is ok. But a few lines later: if
          (substitute) { persister.SetPropertyValues(entity, values,
          source.EntityMode); } the parent property is set to null again :-(
          What can I do? Michael
        </wp:comment_content>
        <wp:comment_approved>
          1
        </wp:comment_approved>
      </wp:comment>
      <wp:comment>
        <wp:comment_id>
          825
        </wp:comment_id>
        <wp:comment_author>
          Jose Romaniello
        </wp:comment_author>
        <wp:comment_author_url>
          http://nhforge.org/members/jfromainello/default.aspx
        </wp:comment_author_url>
        <wp:comment_author_email/>
        <wp:comment_author_IP/>
        <wp:comment_date_gmt>
          2011-03-16 12:04:56
        </wp:comment_date_gmt>
        <wp:comment_content>
          Hi @MBDTeam, there last version of this code is on bitbucket;
          https://bitbucket.org/jfromaniello/hotgazpachoeg with some tests,
          please can you try that version and if it fail... try to write me a
          short test inside that solution. I&apos;ll have a look ASAP. Thanks
        </wp:comment_content>
        <wp:comment_approved>
          1
        </wp:comment_approved>
      </wp:comment>
      <wp:comment>
        <wp:comment_id>
          826
        </wp:comment_id>
        <wp:comment_author>
          Jose Romaniello
        </wp:comment_author>
        <wp:comment_author_url>
          http://nhforge.org/members/jfromainello/default.aspx
        </wp:comment_author_url>
        <wp:comment_author_email/>
        <wp:comment_author_IP/>
        <wp:comment_date_gmt>
          2011-03-16 12:09:28
        </wp:comment_date_gmt>
        <wp:comment_content>
          @ExternalBlogs Sorry this is an english post. I don&apos;t speak
          italian; tried to translate your comment but i don&apos;t understand.
          May your write your comment in english? i&apos;ll kindly answer your
          questions. Thanks
        </wp:comment_content>
        <wp:comment_approved>
          1
        </wp:comment_approved>
      </wp:comment>
      <wp:comment>
        <wp:comment_id>
          827
        </wp:comment_id>
        <wp:comment_author>
          MBDTeam
        </wp:comment_author>
        <wp:comment_author_url>
          http://nhforge.org/members/MBDTeam/default.aspx
        </wp:comment_author_url>
        <wp:comment_author_email/>
        <wp:comment_author_IP/>
        <wp:comment_date_gmt>
          2011-03-16 13:47:53
        </wp:comment_date_gmt>
        <wp:comment_content>
          @Jose, thanks for your quick response. A failing test is easy to get.
          Just add public virtual Person Parent { get; set; } public virtual
          IList&lt;Person&gt; Childs { get; set; } to Person and &lt;many-to-one
          name=&quot;Parent&quot; class=&quot;Person&quot;
          column=&quot;ParentId&quot; not-null=&quot;true&quot;
          foreign-key=&quot;none&quot; /&gt; &lt;bag name=&quot;Childs&quot;
          inverse=&quot;true&quot; lazy=&quot;true&quot;
          cascade=&quot;all&quot;&gt; &lt;key column=&quot;ParentId&quot; /&gt;
          &lt;one-to-many class=&quot;Person&quot; /&gt; &lt;/bag&gt; to
          person.hbm.xml and all your tests will fail. I think just adding a
          IList of Entity X will do it also, because then substitue in
          AbstractSaveEventListener.cs -&gt; PerformSaveOrReplicate becomes
          true. I have found a workaround for me. My base entity class has a
          property isTransient that is set to true if my dao creates the objects
          for me. And in my Interceptor -&gt; PostFlush it is set back to false.
          So i can do the following in SetPropertyValues: if
          (!entity.isTransient) { values(i) = null; } Now everything works as
          aspected. But I would like to now if there is a cleaner way to detect
          if the entity in SetPropertyValues is Transient??? Michael
        </wp:comment_content>
        <wp:comment_approved>
          1
        </wp:comment_approved>
      </wp:comment>
      <wp:comment>
        <wp:comment_id>
          838
        </wp:comment_id>
        <wp:comment_author>
          hotgazpacho
        </wp:comment_author>
        <wp:comment_author_url>
          http://nhforge.org/members/hotgazpacho/default.aspx
        </wp:comment_author_url>
        <wp:comment_author_email/>
        <wp:comment_author_IP/>
        <wp:comment_date_gmt>
          2011-03-22 15:32:52
        </wp:comment_date_gmt>
        <wp:comment_content>
          Yes, it seems that as soon as you add a collection of child entities,
          GetPropertyValues(object entity), and thus CreateFakeProxy(int i) does
          not get called.
        </wp:comment_content>
        <wp:comment_approved>
          1
        </wp:comment_approved>
      </wp:comment>
      <wp:comment>
        <wp:comment_id>
          841
        </wp:comment_id>
        <wp:comment_author>
          Jose Romaniello
        </wp:comment_author>
        <wp:comment_author_url>
          http://nhforge.org/members/jfromainello/default.aspx
        </wp:comment_author_url>
        <wp:comment_author_email/>
        <wp:comment_author_IP/>
        <wp:comment_date_gmt>
          2011-03-22 18:54:27
        </wp:comment_date_gmt>
        <wp:comment_content>
          Thank you both! I&apos;ll have a look ASAP
        </wp:comment_content>
        <wp:comment_approved>
          1
        </wp:comment_approved>
      </wp:comment>
      <wp:comment>
        <wp:comment_id>
          842
        </wp:comment_id>
        <wp:comment_author>
          hotgazpacho
        </wp:comment_author>
        <wp:comment_author_url>
          http://nhforge.org/members/hotgazpacho/default.aspx
        </wp:comment_author_url>
        <wp:comment_author_email/>
        <wp:comment_author_IP/>
        <wp:comment_date_gmt>
          2011-03-23 19:42:00
        </wp:comment_date_gmt>
        <wp:comment_content>
          OK, the way I&apos;m going about solving this is eschewing the
          Tuplizer altogether and using Event Listeners. Specifically
          IPreInsertEventListener and IPreUpdateEventListeners. Ayende outlined
          their use in a blog post:
          http://ayende.com/Blog/archive/2009/04/29/nhibernate-ipreupdateeventlistener-amp-ipreinserteventlistener.aspx Still need to figure out a way to abstract it a bit so that I am not hard-coding entity names and properties in the event listeners, but it&apos;s a good start, and my tests pass!
        </wp:comment_content>
        <wp:comment_approved>
          1
        </wp:comment_approved>
      </wp:comment>
      <wp:comment>
        <wp:comment_id>
          872
        </wp:comment_id>
        <wp:comment_author>
          DsA
        </wp:comment_author>
        <wp:comment_author_url>
          http://nhforge.org/members/DsA/default.aspx
        </wp:comment_author_url>
        <wp:comment_author_email/>
        <wp:comment_author_IP/>
        <wp:comment_date_gmt>
          2011-04-27 12:11:25
        </wp:comment_date_gmt>
        <wp:comment_content>
          I have a problem. If I use NullableTuplizer in my project, then all of
          my object with null child are becoming dirty and NHibernate is sending
          UPDATE command for each object when Session.Flush()
        </wp:comment_content>
        <wp:comment_approved>
          1
        </wp:comment_approved>
      </wp:comment>
      <wp:comment>
        <wp:comment_id>
          953
        </wp:comment_id>
        <wp:comment_author>
          digitalpacman
        </wp:comment_author>
        <wp:comment_author_url>
          http://nhforge.org/members/digitalpacman/default.aspx
        </wp:comment_author_url>
        <wp:comment_author_email/>
        <wp:comment_author_IP/>
        <wp:comment_date_gmt>
          2011-07-27 22:03:05
        </wp:comment_date_gmt>
        <wp:comment_content>
          I only need this tuplizer for a single class. And I am using Fluent
          NHibernate. I can&apos;t figure out how to apply the tuplizer to it
          since i&apos;m using fluent. Any help?
        </wp:comment_content>
        <wp:comment_approved>
          1
        </wp:comment_approved>
      </wp:comment>
      <wp:comment>
        <wp:comment_id>
          1004
        </wp:comment_id>
        <wp:comment_author>
          pvginkel
        </wp:comment_author>
        <wp:comment_author_url>
          http://nhforge.org/members/pvginkel/default.aspx
        </wp:comment_author_url>
        <wp:comment_author_email/>
        <wp:comment_author_IP/>
        <wp:comment_date_gmt>
          2011-11-15 07:16:12
        </wp:comment_date_gmt>
        <wp:comment_content>
          I solved this issue with a custom persister. I inherited from
          NHibernate.Persister.Entity.SingleTableEntityPersister and overriden
          just IdentifierType to return a custom implementation. In the
          identifier type, in the NullSafeGet and NullSafeSet methods, I convert
          null to the value I want (a space in my case, but this should work
          equally well for integers). The only problem I couldn&apos;t solve
          through this method is that our database requires that
          &quot;sometimes&quot;, null is converted, and &quot;sometimes&quot; it
          isn&apos;t.
        </wp:comment_content>
        <wp:comment_approved>
          1
        </wp:comment_approved>
      </wp:comment>
    </item>
    <item>
      <title>
        Visual NHibernate – Using Templates
      </title>
      <link>
        http://nhibernate.github.io/blogs/nhibernate/archive/2011/02/08/visual-nhibernate-using-templates.html
      </link>
      <dsq:thread_identifier>
        blogs_nhibernate_archive_2011_02_08_visual-nhibernate-using-templates
      </dsq:thread_identifier>
      <wp:post_date_gmt>
        2011-02-07 23:51:00
      </wp:post_date_gmt>
    </item>
    <item>
      <title>
        Get/Load Polymorphism in NHibernate 3
      </title>
      <link>
        http://nhibernate.github.io/blogs/nhibernate/archive/2011/02/16/get-load-polymorphism-in-nhibernate-3.html
      </link>
      <dsq:thread_identifier>
        blogs_nhibernate_archive_2011_02_16_get-load-polymorphism-in-nhibernate-3
      </dsq:thread_identifier>
      <wp:post_date_gmt>
        2011-02-16 22:46:00
      </wp:post_date_gmt>
      <wp:comment>
        <wp:comment_id>
          793
        </wp:comment_id>
        <wp:comment_author>
          Phillip
        </wp:comment_author>
        <wp:comment_author_url>
          http://www.philliphaydon.com
        </wp:comment_author_url>
        <wp:comment_author_email/>
        <wp:comment_author_IP/>
        <wp:comment_date_gmt>
          2011-02-16 23:53:53
        </wp:comment_date_gmt>
        <wp:comment_content>
          How do you go about mapping something like Cat/Dog? I&apos;ve never
          seen this sort of thing done before. Also does this work with
          QueryOver? 
        </wp:comment_content>
        <wp:comment_approved>
          1
        </wp:comment_approved>
      </wp:comment>
      <wp:comment>
        <wp:comment_id>
          794
        </wp:comment_id>
        <wp:comment_author>
          James Kovacs
        </wp:comment_author>
        <wp:comment_author_url>
          http://jameskovacs.com
        </wp:comment_author_url>
        <wp:comment_author_email/>
        <wp:comment_author_IP/>
        <wp:comment_date_gmt>
          2011-02-17 00:24:26
        </wp:comment_date_gmt>
        <wp:comment_content>
          &lt;p&gt;@Natural - ISession.QueryOver&lt;T&gt;() is a strongly-typed
          API around Criteria. Since it works with Critera, it works with
          QueryOver. As for the mapping files, there are many ways to represent
          inheritance in NHibernate. I chose to use table-per-class-hierarchy
          inheritance:&lt;/p&gt; &lt;p&gt; &amp;nbsp;&lt;class
          name=&quot;Animal&quot; abstract=&quot;true&quot;&gt;&lt;/p&gt;
          &lt;p&gt; &amp;nbsp; &amp;nbsp;&lt;id
          name=&quot;Id&quot;&gt;&lt;/p&gt; &lt;p&gt; &amp;nbsp; &amp;nbsp;
          &amp;nbsp;&lt;generator class=&quot;guid.comb&quot; /&gt;&lt;/p&gt;
          &lt;p&gt; &amp;nbsp; &amp;nbsp;&lt;/id&gt;&lt;/p&gt; &lt;p&gt;
          &amp;nbsp; &amp;nbsp;&lt;discriminator
          column=&quot;AnimalType&quot;/&gt;&lt;/p&gt; &lt;p&gt; &amp;nbsp;
          &amp;nbsp;&lt;property name=&quot;Name&quot;/&gt;&lt;/p&gt; &lt;p&gt;
          &amp;nbsp; &amp;nbsp;&lt;subclass name=&quot;Cat&quot;
          discriminator-value=&quot;C&quot; /&gt;&lt;/p&gt; &lt;p&gt; &amp;nbsp;
          &amp;nbsp;&lt;subclass name=&quot;Dog&quot;
          discriminator-value=&quot;D&quot; /&gt;&lt;/p&gt; &lt;p&gt;
          &amp;nbsp;&lt;/class&gt;&lt;/p&gt; &lt;p&gt;You can read about all the
          options in the NH docs:&lt;/p&gt; &lt;p&gt;&lt;a
          rel=&quot;nofollow&quot; target=&quot;_new&quot;
          href=&quot;/doc/nh/en/index.html#inheritance&quot;&gt;nhforge.org/.../index.html&lt;/a&gt;&lt;/p&gt;
        </wp:comment_content>
        <wp:comment_approved>
          1
        </wp:comment_approved>
      </wp:comment>
      <wp:comment>
        <wp:comment_id>
          795
        </wp:comment_id>
        <wp:comment_author>
          Phillip
        </wp:comment_author>
        <wp:comment_author_url>
          http://www.philliphaydon.com/
        </wp:comment_author_url>
        <wp:comment_author_email/>
        <wp:comment_author_IP/>
        <wp:comment_date_gmt>
          2011-02-17 03:02:30
        </wp:comment_date_gmt>
        <wp:comment_content>
          @James - Awesome, thank you. My weekend is now going to be spent
          playing around with this. As for the QueryOver, I was asking because
          there&apos;s stuff missing from QueryOvery, or atleast I haven&apos;t
          found the documentation/blogs to say otherwise. For example a strongly
          typed way of writing distinct projections. 
        </wp:comment_content>
        <wp:comment_approved>
          1
        </wp:comment_approved>
      </wp:comment>
      <wp:comment>
        <wp:comment_id>
          796
        </wp:comment_id>
        <wp:comment_author>
          James Kovacs
        </wp:comment_author>
        <wp:comment_author_url>
          http://jameskovacs.com
        </wp:comment_author_url>
        <wp:comment_author_email/>
        <wp:comment_author_IP/>
        <wp:comment_date_gmt>
          2011-02-17 23:03:08
        </wp:comment_date_gmt>
        <wp:comment_content>
          @Natural - WRT QueryOver... I haven&apos;t checked whether it supports
          everything that Criteria itself supports. For distinct projections,
          try session.QueryOver&lt;Foo&gt;().Select(new Distinct(projection)).
          If there is some unsupported feature, you can always access the
          criteria built up to that point using
          IQueryOver&lt;T&gt;.UnderlyingCriteria and then treat it as a normal
          ICriteria&lt;T&gt;. HTH.
        </wp:comment_content>
        <wp:comment_approved>
          1
        </wp:comment_approved>
      </wp:comment>
      <wp:comment>
        <wp:comment_id>
          797
        </wp:comment_id>
        <wp:comment_author>
          Fabio Maulo
        </wp:comment_author>
        <wp:comment_author_url>
          http://fabiomaulo.blogspot.com/
        </wp:comment_author_url>
        <wp:comment_author_email/>
        <wp:comment_author_IP/>
        <wp:comment_date_gmt>
          2011-02-18 12:39:09
        </wp:comment_date_gmt>
        <wp:comment_content>
          It work in HQL too if you import the class.
        </wp:comment_content>
        <wp:comment_approved>
          1
        </wp:comment_approved>
      </wp:comment>
      <wp:comment>
        <wp:comment_id>
          798
        </wp:comment_id>
        <wp:comment_author>
          Fabio Maulo
        </wp:comment_author>
        <wp:comment_author_url>
          http://fabiomaulo.blogspot.com/
        </wp:comment_author_url>
        <wp:comment_author_email/>
        <wp:comment_author_IP/>
        <wp:comment_date_gmt>
          2011-02-18 12:40:27
        </wp:comment_date_gmt>
        <wp:comment_content>
          The doc.
          http://nhforge.org/doc/nh/en/index.html#mapping-declaration-import
        </wp:comment_content>
        <wp:comment_approved>
          1
        </wp:comment_approved>
      </wp:comment>
      <wp:comment>
        <wp:comment_id>
          799
        </wp:comment_id>
        <wp:comment_author>
          James Kovacs
        </wp:comment_author>
        <wp:comment_author_url>
          http://jameskovacs.com
        </wp:comment_author_url>
        <wp:comment_author_email/>
        <wp:comment_author_IP/>
        <wp:comment_date_gmt>
          2011-02-18 18:35:08
        </wp:comment_date_gmt>
        <wp:comment_content>
          Thanks, Fabio. Post updated.
        </wp:comment_content>
        <wp:comment_approved>
          1
        </wp:comment_approved>
      </wp:comment>
    </item>
    <item>
      <title>
        .NET Client Profile Support in NHibernate 3
      </title>
      <link>
        http://nhibernate.github.io/blogs/nhibernate/archive/2011/02/24/net-client-profile-support-in-nhibernate-3.html
      </link>
      <dsq:thread_identifier>
        blogs_nhibernate_archive_2011_02_24_net-client-profile-support-in-nhibernate-3
      </dsq:thread_identifier>
      <wp:post_date_gmt>
        2011-02-24 16:00:00
      </wp:post_date_gmt>
    </item>
    <item>
      <title>
        Integrating Adobe Flex Applications with NHibernate
      </title>
      <link>
        http://nhibernate.github.io/blogs/nhibernate/archive/2011/03/01/integrating-adobe-flex-applications-with-nhibernate.html
      </link>
      <dsq:thread_identifier>
        blogs_nhibernate_archive_2011_03_01_integrating-adobe-flex-applications-with-nhibernate
      </dsq:thread_identifier>
      <wp:post_date_gmt>
        2011-03-01 05:03:00
      </wp:post_date_gmt>
    </item>
    <item>
      <title>
        Effective NHibernate Session management for web apps
      </title>
      <link>
        http://nhibernate.github.io/blogs/nhibernate/archive/2011/03/03/effective-nhibernate-session-management-for-web-apps.html
      </link>
      <dsq:thread_identifier>
        blogs_nhibernate_archive_2011_03_03_effective-nhibernate-session-management-for-web-apps
      </dsq:thread_identifier>
      <wp:post_date_gmt>
        2011-03-03 04:09:00
      </wp:post_date_gmt>
      <wp:comment>
        <wp:comment_id>
          810
        </wp:comment_id>
        <wp:comment_author>
          Bogdan Marian
        </wp:comment_author>
        <wp:comment_author_url>
          http://nhforge.org/members/satrapu/default.aspx
        </wp:comment_author_url>
        <wp:comment_author_email/>
        <wp:comment_author_IP/>
        <wp:comment_date_gmt>
          2011-03-03 07:05:41
        </wp:comment_date_gmt>
        <wp:comment_content>
          Hello, This is a very illuminating article, thanks for writing it. I
          do have a question: why are you passing an ISessionFactory to your
          DAO? An ISession is not good enough ? And a second question: if my
          application uses several ISessionFactories, how can I choose the right
          one using your ICurrentSessionContext implementation ?
        </wp:comment_content>
        <wp:comment_approved>
          1
        </wp:comment_approved>
      </wp:comment>
      <wp:comment>
        <wp:comment_id>
          812
        </wp:comment_id>
        <wp:comment_author>
          Robert Mircea
        </wp:comment_author>
        <wp:comment_author_url>
          http://nhforge.org/members/nokiola/default.aspx
        </wp:comment_author_url>
        <wp:comment_author_email/>
        <wp:comment_author_IP/>
        <wp:comment_date_gmt>
          2011-03-03 08:41:32
        </wp:comment_date_gmt>
        <wp:comment_content>
          What kind of setup/ICurrentSessionContext do you recommend for
          managing sessions in an WCF application where you don&apos;t have
          access to HttpContext? Is there any abstraction in uNhAddIns which
          allows session management independently of the type of application:
          web, WCF, console?
        </wp:comment_content>
        <wp:comment_approved>
          1
        </wp:comment_approved>
      </wp:comment>
      <wp:comment>
        <wp:comment_id>
          813
        </wp:comment_id>
        <wp:comment_author>
          Jose Romaniello
        </wp:comment_author>
        <wp:comment_author_url>
          http://nhforge.org/members/jfromainello/default.aspx
        </wp:comment_author_url>
        <wp:comment_author_email/>
        <wp:comment_author_IP/>
        <wp:comment_date_gmt>
          2011-03-03 11:06:29
        </wp:comment_date_gmt>
        <wp:comment_content>
          @Bogdan Marian Thank you for your comments i updated the article; 1.
          It is explained at the end of &quot;How to use the ISession from my
          code?&quot; section. 2. I added a new Section called &quot;Working
          with various session&quot; @nokiola Thanks for your comments too. 1.
          For the first question (nhibernate setup) you have to do:
          configuration.Properties[Environment.CurrentSessionContextClass] =
          typeof (LazySessionContext).AssemblyQualifiedName; I added this to the
          article. 2.I added a new section &quot;Other session managements&quot;
        </wp:comment_content>
        <wp:comment_approved>
          1
        </wp:comment_approved>
      </wp:comment>
      <wp:comment>
        <wp:comment_id>
          820
        </wp:comment_id>
        <wp:comment_author>
          codepuke
        </wp:comment_author>
        <wp:comment_author_url>
          http://nhforge.org/members/codepuke/default.aspx
        </wp:comment_author_url>
        <wp:comment_author_email/>
        <wp:comment_author_IP/>
        <wp:comment_date_gmt>
          2011-03-13 19:42:02
        </wp:comment_date_gmt>
        <wp:comment_content>
          I really like the sound of this lazy session-per-request pattern, but
          I am struggling to implement it using StructureMap rather than
          Windsor. The Bind and Unbind methods seem to always refer to different
          instances of sessionFactory, so the Unbind map[sessionFactory] always
          fails with an unknown key exception. I am guessing my implementation
          of ISessionFactoryProvider.GetSessionFactories() is incorrect. Does
          anyone have a working StructureMap based implementation of the above
          working? Thanks.
        </wp:comment_content>
        <wp:comment_approved>
          1
        </wp:comment_approved>
      </wp:comment>
      <wp:comment>
        <wp:comment_id>
          821
        </wp:comment_id>
        <wp:comment_author>
          Jose Romaniello
        </wp:comment_author>
        <wp:comment_author_url>
          http://nhforge.org/members/jfromainello/default.aspx
        </wp:comment_author_url>
        <wp:comment_author_email/>
        <wp:comment_author_IP/>
        <wp:comment_date_gmt>
          2011-03-13 19:59:50
        </wp:comment_date_gmt>
        <wp:comment_content>
          @codepuke why do you get differents instances of SessionFactory? Each
          ISessionFactory must be registered as &quot;singleton&quot;.
          ISessionFactoryProvider.GetSessionFactories() should do &quot;return
          container.ResolveAll&lt;ISessionFactory&gt;()&quot; or the equivalent
          in StructureMap. does this help?
        </wp:comment_content>
        <wp:comment_approved>
          1
        </wp:comment_approved>
      </wp:comment>
      <wp:comment>
        <wp:comment_id>
          822
        </wp:comment_id>
        <wp:comment_author>
          codepuke
        </wp:comment_author>
        <wp:comment_author_url>
          http://nhforge.org/members/codepuke/default.aspx
        </wp:comment_author_url>
        <wp:comment_author_email/>
        <wp:comment_author_IP/>
        <wp:comment_date_gmt>
          2011-03-13 20:25:18
        </wp:comment_date_gmt>
        <wp:comment_content>
          @Jose - yep it does help. It was the singleton issue. Incorrect
          structuremap definition to meet this purpose. Perfect. Now to play
          around. :) Thanks
        </wp:comment_content>
        <wp:comment_approved>
          1
        </wp:comment_approved>
      </wp:comment>
      <wp:comment>
        <wp:comment_id>
          849
        </wp:comment_id>
        <wp:comment_author>
          mynkow
        </wp:comment_author>
        <wp:comment_author_url>
          http://nhforge.org/members/mynkow/default.aspx
        </wp:comment_author_url>
        <wp:comment_author_email/>
        <wp:comment_author_IP/>
        <wp:comment_date_gmt>
          2011-04-05 07:53:46
        </wp:comment_date_gmt>
        <wp:comment_content>
          Hi, nice article. :) I have a question. You have 2 methods in
          NHibSessionModule: BeginSession (where a transaction begins) and
          EndSession (where the transaction.Active is always false). What I am
          missing?
        </wp:comment_content>
        <wp:comment_approved>
          1
        </wp:comment_approved>
      </wp:comment>
      <wp:comment>
        <wp:comment_id>
          850
        </wp:comment_id>
        <wp:comment_author>
          Jose Romaniello
        </wp:comment_author>
        <wp:comment_author_url>
          http://nhforge.org/members/jfromainello/default.aspx
        </wp:comment_author_url>
        <wp:comment_author_email/>
        <wp:comment_author_IP/>
        <wp:comment_date_gmt>
          2011-04-05 10:10:56
        </wp:comment_date_gmt>
        <wp:comment_content>
          I don&apos;t know about your code.. If you asked for a session
          somewhere in the request IsActive must be true. There is a complete
          example of this here: https://bitbucket.org/jfromaniello/nugetspeed
          using the chinook database at codeplex. Try it and let me know if it
          works for you.
        </wp:comment_content>
        <wp:comment_approved>
          1
        </wp:comment_approved>
      </wp:comment>
      <wp:comment>
        <wp:comment_id>
          851
        </wp:comment_id>
        <wp:comment_author>
          mynkow
        </wp:comment_author>
        <wp:comment_author_url>
          http://nhforge.org/members/mynkow/default.aspx
        </wp:comment_author_url>
        <wp:comment_author_email/>
        <wp:comment_author_IP/>
        <wp:comment_date_gmt>
          2011-04-07 09:17:59
        </wp:comment_date_gmt>
        <wp:comment_content>
          10x Jose, it was my mistake. I wrap the session in unit of work. When
          the UoW is accepted the transaction is committed and domain events are
          published. So I moved the commit to the UoW accept method and I am OK.
          I am thinking... should I instantiate the UoW like the session, per
          web request? Currently I have a UoW factory which creates an instance
          to a thread static member. I think that I am doing this wrong...
          https://gist.github.com/907399
        </wp:comment_content>
        <wp:comment_approved>
          1
        </wp:comment_approved>
      </wp:comment>
      <wp:comment>
        <wp:comment_id>
          926
        </wp:comment_id>
        <wp:comment_author>
          mynkow
        </wp:comment_author>
        <wp:comment_author_url>
          http://nhforge.org/members/mynkow/default.aspx
        </wp:comment_author_url>
        <wp:comment_author_email/>
        <wp:comment_author_IP/>
        <wp:comment_date_gmt>
          2011-07-15 08:23:14
        </wp:comment_date_gmt>
        <wp:comment_content>
          Hey, Jose Do you have an idea why I get &quot;Event handlers can only
          be bound to HttpApplication events during IHttpModule
          initialization&quot; in IIS7, asp.net 4.0 integrated mode. The error
          is in the dispose() method of the http module. My web.config is
          perfect. Any idea how to fix it?
        </wp:comment_content>
        <wp:comment_approved>
          1
        </wp:comment_approved>
      </wp:comment>
      <wp:comment>
        <wp:comment_id>
          956
        </wp:comment_id>
        <wp:comment_author>
          Leonardo Lima Silva
        </wp:comment_author>
        <wp:comment_author_url>
          http://www.desenvolvimentoweb.net.br
        </wp:comment_author_url>
        <wp:comment_author_email/>
        <wp:comment_author_IP/>
        <wp:comment_date_gmt>
          2011-07-28 03:47:46
        </wp:comment_date_gmt>
        <wp:comment_content>
          Hi, I´m trying to use this code.. But I got error on the following
          line
          container.Register(Component.For&lt;ISessionFactoryProvider&gt;().AsFactory()); Like AsFactory() don´t exists.... How could I fix this??
        </wp:comment_content>
        <wp:comment_approved>
          1
        </wp:comment_approved>
      </wp:comment>
      <wp:comment>
        <wp:comment_id>
          957
        </wp:comment_id>
        <wp:comment_author>
          Jose Romaniello
        </wp:comment_author>
        <wp:comment_author_url>
          http://joseoncode.com
        </wp:comment_author_url>
        <wp:comment_author_email/>
        <wp:comment_author_IP/>
        <wp:comment_date_gmt>
          2011-07-28 10:27:19
        </wp:comment_date_gmt>
        <wp:comment_content>
          AsFactory is an extension method in Castle.Facilities.TypedFactory
          http://docs.castleproject.org/Default.aspx?Page=Typed-Factory-Facility-interface-based-factories&amp;NS=Windsor&amp;AspxAutoDetectCookieSupport=1 Please check this guide to use all this and configure quickly http://joseoncode.com/2011/03/07/create-an-asp-net-mvc-application-with-windsor-and-nhibernate-at-the-speed-of-nuget/
        </wp:comment_content>
        <wp:comment_approved>
          1
        </wp:comment_approved>
      </wp:comment>
      <wp:comment>
        <wp:comment_id>
          958
        </wp:comment_id>
        <wp:comment_author>
          danyolgiax
        </wp:comment_author>
        <wp:comment_author_url>
          http://nhforge.org/members/danyolgiax/default.aspx
        </wp:comment_author_url>
        <wp:comment_author_email/>
        <wp:comment_author_IP/>
        <wp:comment_date_gmt>
          2011-07-28 11:35:58
        </wp:comment_date_gmt>
        <wp:comment_content>
          @Leonardo Lima Silva: try to add: using
          Castle.Facilities.TypedFactory;
        </wp:comment_content>
        <wp:comment_approved>
          1
        </wp:comment_approved>
      </wp:comment>
      <wp:comment>
        <wp:comment_id>
          959
        </wp:comment_id>
        <wp:comment_author>
          Leonardo Lima Silva
        </wp:comment_author>
        <wp:comment_author_url>
          http://www.desenvolvimentoweb.net.br
        </wp:comment_author_url>
        <wp:comment_author_email/>
        <wp:comment_author_IP/>
        <wp:comment_date_gmt>
          2011-07-28 13:00:01
        </wp:comment_date_gmt>
        <wp:comment_content>
          @Jose Romaniello and @danyolgiax Complete right... I got it working
          now... but I saw that I needed this include after download @Jose
          Romaniello sample project on gist.... I&apos;ve another problem... I
          need user 2 different´s databases, and I&apos;m using
          FluentNHibernate, any problem with this??? Someone can help me clear
          my ideas? and show me a piece of code for doing that??? 
        </wp:comment_content>
        <wp:comment_approved>
          1
        </wp:comment_approved>
      </wp:comment>
      <wp:comment>
        <wp:comment_id>
          960
        </wp:comment_id>
        <wp:comment_author>
          Leonardo Lima Silva
        </wp:comment_author>
        <wp:comment_author_url>
          http://nhforge.org/members/Leonardo-Lima-Silva/default.aspx
        </wp:comment_author_url>
        <wp:comment_author_email/>
        <wp:comment_author_IP/>
        <wp:comment_date_gmt>
          2011-07-28 13:10:32
        </wp:comment_date_gmt>
        <wp:comment_content>
          @Jose Romaniello Hey... sorry... But now I got another question... I
          was trying to make Castle Windsor on a ASP.NET WebForms app.. but now
          I saw that it isn´t possible... without use MVP approach... but I
          could not use it... So... my question... is possible use your
          SessionManagement on a old ASP.NET WebForms app ??? If yes... how???
        </wp:comment_content>
        <wp:comment_approved>
          1
        </wp:comment_approved>
      </wp:comment>
      <wp:comment>
        <wp:comment_id>
          961
        </wp:comment_id>
        <wp:comment_author>
          Jose Romaniello
        </wp:comment_author>
        <wp:comment_author_url>
          http://joseoncode.com
        </wp:comment_author_url>
        <wp:comment_author_email/>
        <wp:comment_author_IP/>
        <wp:comment_date_gmt>
          2011-07-28 13:25:59
        </wp:comment_date_gmt>
        <wp:comment_content>
          Yes, you can. how? i don&apos;t recall.... try to lookup in google how
          to do dependency injection in webforms. There isn&apos;t an
          extensibility point like the controller factory, but you can hydrate
          with dependencies the page object after... To be honest i don&apos;t
          recall how.
        </wp:comment_content>
        <wp:comment_approved>
          1
        </wp:comment_approved>
      </wp:comment>
      <wp:comment>
        <wp:comment_id>
          987
        </wp:comment_id>
        <wp:comment_author>
          linloil
        </wp:comment_author>
        <wp:comment_author_url>
          http://nhforge.org/members/linloil/default.aspx
        </wp:comment_author_url>
        <wp:comment_author_email/>
        <wp:comment_author_IP/>
        <wp:comment_date_gmt>
          2011-09-27 19:03:11
        </wp:comment_date_gmt>
        <wp:comment_content>
          Jose, thank you for the post! What about error handling? Don&apos;t
          you have to subscribe to OnError message at http module to prevent
          ISession lost?
        </wp:comment_content>
        <wp:comment_approved>
          1
        </wp:comment_approved>
      </wp:comment>
      <wp:comment>
        <wp:comment_id>
          1017
        </wp:comment_id>
        <wp:comment_author>
          Hainesy
        </wp:comment_author>
        <wp:comment_author_url>
          http://nhforge.org/members/Hainesy/default.aspx
        </wp:comment_author_url>
        <wp:comment_author_email/>
        <wp:comment_author_IP/>
        <wp:comment_date_gmt>
          2012-07-16 09:50:52
        </wp:comment_date_gmt>
        <wp:comment_content>
          There seems to be a problem with the Dispose method attempting to
          de-hook the event handlers. I get an exception &quot;Event handlers
          can only be bound to HttpApplication events during IHttpModule
          initialization.&quot; Other than that, great article.
        </wp:comment_content>
        <wp:comment_approved>
          1
        </wp:comment_approved>
      </wp:comment>
    </item>
    <item>
      <title>
        Using &amp;lt;set /&amp;gt; in mappings without Iesi.Collections (.Net
        4)
      </title>
      <link>
        http://nhibernate.github.io/blogs/nhibernate/archive/2011/03/15/using-lt-set-gt-in-mappings-without-iesi-collections-net-4.html
      </link>
      <dsq:thread_identifier>
        blogs_nhibernate_archive_2011_03_15_using-lt-set-gt-in-mappings-without-iesi-collections-net-4
      </dsq:thread_identifier>
      <wp:post_date_gmt>
        2011-03-16 01:26:06
      </wp:post_date_gmt>
    </item>
    <item>
      <title>
        Generate better NHibernate logs
      </title>
      <link>
        http://nhibernate.github.io/blogs/nhibernate/archive/2011/05/05/generate-better-nhibernate-logs.html
      </link>
      <dsq:thread_identifier>
        blogs_nhibernate_archive_2011_05_05_generate-better-nhibernate-logs
      </dsq:thread_identifier>
      <wp:post_date_gmt>
        2011-05-05 21:57:43
      </wp:post_date_gmt>
      <wp:comment>
        <wp:comment_id>
          951
        </wp:comment_id>
        <wp:comment_author>
          Randy Lee
        </wp:comment_author>
        <wp:comment_author_url>
          http://nhforge.org/members/Randy-Lee/default.aspx
        </wp:comment_author_url>
        <wp:comment_author_email/>
        <wp:comment_author_IP/>
        <wp:comment_date_gmt>
          2011-07-27 03:04:01
        </wp:comment_date_gmt>
        <wp:comment_content>
          If you all like SQL profiling, please check out my NuGet package (
          http://nuget.org/List/Packages/Nvergent ). There&apos;s also a few
          other goodies in there. I would love some feedback.
        </wp:comment_content>
        <wp:comment_approved>
          1
        </wp:comment_approved>
      </wp:comment>
      <wp:comment>
        <wp:comment_id>
          983
        </wp:comment_id>
        <wp:comment_author>
          felicepollano
        </wp:comment_author>
        <wp:comment_author_url>
          http://www.felicepollano.com
        </wp:comment_author_url>
        <wp:comment_author_email/>
        <wp:comment_author_IP/>
        <wp:comment_date_gmt>
          2011-09-12 09:27:34
        </wp:comment_date_gmt>
        <wp:comment_content>
          Very useful post. I noticed in the NH code the helper to format the
          SQL and I was asking why they don&apos;t use it, I wasn&apos;t aware
          it was just a config :) Thanks for sharing.
        </wp:comment_content>
        <wp:comment_approved>
          1
        </wp:comment_approved>
      </wp:comment>
      <wp:comment>
        <wp:comment_id>
          985
        </wp:comment_id>
        <wp:comment_author>
          luedi
        </wp:comment_author>
        <wp:comment_author_url>
          http://nhforge.org/members/luedi/default.aspx
        </wp:comment_author_url>
        <wp:comment_author_email/>
        <wp:comment_author_IP/>
        <wp:comment_date_gmt>
          2011-09-13 05:48:29
        </wp:comment_date_gmt>
        <wp:comment_content>
          in the config file it must be (for NH 3.1.0) &lt;property
          name=&quot;format_sql&quot;&gt;true&lt;/property&gt; else you will get
          an exception.
        </wp:comment_content>
        <wp:comment_approved>
          1
        </wp:comment_approved>
      </wp:comment>
      <wp:comment>
        <wp:comment_id>
          986
        </wp:comment_id>
        <wp:comment_author>
          luedi
        </wp:comment_author>
        <wp:comment_author_url>
          http://nhforge.org/members/luedi/default.aspx
        </wp:comment_author_url>
        <wp:comment_author_email/>
        <wp:comment_author_IP/>
        <wp:comment_date_gmt>
          2011-09-13 05:54:39
        </wp:comment_date_gmt>
        <wp:comment_content>
          and also this has no effect. So what do i wrong???
        </wp:comment_content>
        <wp:comment_approved>
          1
        </wp:comment_approved>
      </wp:comment>
    </item>
    <item>
      <title>
        NHibernate 3 Beginners Guide published
      </title>
      <link>
        http://nhibernate.github.io/blogs/nhibernate/archive/2011/08/29/nhibernate-3-beginners-guide-published.html
      </link>
      <dsq:thread_identifier>
        blogs_nhibernate_archive_2011_08_29_nhibernate-3-beginners-guide-published
      </dsq:thread_identifier>
      <wp:post_date_gmt>
        2011-08-29 20:27:00
      </wp:post_date_gmt>
    </item>
    <item>
      <title>
        Using NH3.2 mapping by code for Automatic Mapping
      </title>
      <link>
        http://nhibernate.github.io/blogs/nhibernate/archive/2011/09/05/using-nh3-2-mapping-by-code-for-automatic-mapping.html
      </link>
      <dsq:thread_identifier>
        blogs_nhibernate_archive_2011_09_05_using-nh3-2-mapping-by-code-for-automatic-mapping
      </dsq:thread_identifier>
      <wp:post_date_gmt>
        2011-09-05 07:24:00
      </wp:post_date_gmt>
      <wp:comment>
        <wp:comment_id>
          994
        </wp:comment_id>
        <wp:comment_author>
          Fabio Maulo
        </wp:comment_author>
        <wp:comment_author_url>
          http://nhforge.org/members/fabiomaulo/default.aspx
        </wp:comment_author_url>
        <wp:comment_author_email/>
        <wp:comment_author_IP/>
        <wp:comment_date_gmt>
          2011-10-20 12:58:54
        </wp:comment_date_gmt>
        <wp:comment_content>
          you can use: Console.Write(map.AsString()); You have two extensions
          methods to work with XML results. AsString work with HbmMapping.
          WriteAllXmlMapping work with IEnumerable&lt;HbmMapping&gt;
        </wp:comment_content>
        <wp:comment_approved>
          1
        </wp:comment_approved>
      </wp:comment>
    </item>
    <item>
      <title>
        Automatic Mapping: Pluralize table names
      </title>
      <link>
        http://nhibernate.github.io/blogs/nhibernate/archive/2011/09/05/automatic-mapping-pluralize-table-names.html
      </link>
      <dsq:thread_identifier>
        blogs_nhibernate_archive_2011_09_05_automatic-mapping-pluralize-table-names
      </dsq:thread_identifier>
      <wp:post_date_gmt>
        2011-09-05 07:28:00
      </wp:post_date_gmt>
    </item>
    <item>
      <title>
        NH Mapping by code VS the Untouchable DB
      </title>
      <link>
        http://nhibernate.github.io/blogs/nhibernate/archive/2011/09/12/nh-mapping-by-code-vs-the-untouchable-db.html
      </link>
      <dsq:thread_identifier>
        blogs_nhibernate_archive_2011_09_12_nh-mapping-by-code-vs-the-untouchable-db
      </dsq:thread_identifier>
      <wp:post_date_gmt>
        2011-09-12 08:30:00
      </wp:post_date_gmt>
      <wp:comment>
        <wp:comment_id>
          989
        </wp:comment_id>
        <wp:comment_author>
          Rob Benwell
        </wp:comment_author>
        <wp:comment_author_url>
          http://twitter.com/#!/robbenwell
        </wp:comment_author_url>
        <wp:comment_author_email/>
        <wp:comment_author_IP/>
        <wp:comment_date_gmt>
          2011-09-30 11:46:32
        </wp:comment_date_gmt>
        <wp:comment_content>
          You covered this topic well. It helps me a lot and all newbies out
          there. Looking forward for more. 
        </wp:comment_content>
        <wp:comment_approved>
          1
        </wp:comment_approved>
      </wp:comment>
    </item>
    <item>
      <title>
        S#arp Lite: The Basics
      </title>
      <link>
        http://nhibernate.github.io/blogs/nhibernate/archive/2011/11/11/s-arp-lite-the-basics.html
      </link>
      <dsq:thread_identifier>
        blogs_nhibernate_archive_2011_11_11_s-arp-lite-the-basics
      </dsq:thread_identifier>
      <wp:post_date_gmt>
        2011-11-12 00:19:00
      </wp:post_date_gmt>
    </item>
    <item>
      <title>
        Dynamic LINQ to NHibernate
      </title>
      <link>
        http://nhibernate.github.io/blogs/nhibernate/archive/2011/11/17/dynamic-linq-to-nhibernate.html
      </link>
      <dsq:thread_identifier>
        blogs_nhibernate_archive_2011_11_17_dynamic-linq-to-nhibernate
      </dsq:thread_identifier>
      <wp:post_date_gmt>
        2011-11-17 13:18:00
      </wp:post_date_gmt>
      <wp:comment>
        <wp:comment_id>
          1007
        </wp:comment_id>
        <wp:comment_author>
          wjkhappy14
        </wp:comment_author>
        <wp:comment_author_url>
          http://nhforge.org/members/wjkhappy14/default.aspx
        </wp:comment_author_url>
        <wp:comment_author_email/>
        <wp:comment_author_IP/>
        <wp:comment_date_gmt>
          2011-12-03 01:17:25
        </wp:comment_date_gmt>
        <wp:comment_content>
          It is very good
        </wp:comment_content>
        <wp:comment_approved>
          1
        </wp:comment_approved>
      </wp:comment>
    </item>
  </channel>
</rss>